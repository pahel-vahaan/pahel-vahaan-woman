{"dependencies":[{"name":"nanoid/non-secure","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":43,"index":58}}],"key":"SN8WVal79eAEDQEpzmVqVAy5JJs=","exportNames":["*"]}},{"name":"./BaseRouter.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":59},"end":{"line":4,"column":45,"index":104}}],"key":"dJts27xOtIr7LbP/D7m0z2vzxHI=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.TabActions = void 0;\n  exports.TabRouter = TabRouter;\n  var _nonSecure = require(_dependencyMap[0], \"nanoid/non-secure\");\n  var _BaseRouter = require(_dependencyMap[1], \"./BaseRouter.js\");\n  var TYPE_ROUTE = 'route';\n  var TabActions = exports.TabActions = {\n    jumpTo(name, params) {\n      return {\n        type: 'JUMP_TO',\n        payload: {\n          name,\n          params\n        }\n      };\n    }\n  };\n  var getRouteHistory = (routes, index, backBehavior, initialRouteName) => {\n    var history = [{\n      type: TYPE_ROUTE,\n      key: routes[index].key\n    }];\n    var initialRouteIndex;\n    switch (backBehavior) {\n      case 'order':\n        for (var i = index; i > 0; i--) {\n          history.unshift({\n            type: TYPE_ROUTE,\n            key: routes[i - 1].key\n          });\n        }\n        break;\n      case 'firstRoute':\n        if (index !== 0) {\n          history.unshift({\n            type: TYPE_ROUTE,\n            key: routes[0].key\n          });\n        }\n        break;\n      case 'initialRoute':\n        initialRouteIndex = routes.findIndex(route => route.name === initialRouteName);\n        initialRouteIndex = initialRouteIndex === -1 ? 0 : initialRouteIndex;\n        if (index !== initialRouteIndex) {\n          history.unshift({\n            type: TYPE_ROUTE,\n            key: routes[initialRouteIndex].key\n          });\n        }\n        break;\n      case 'history':\n      case 'fullHistory':\n        // The history will fill up on navigation\n        break;\n    }\n    return history;\n  };\n  var changeIndex = (state, index, backBehavior, initialRouteName) => {\n    var history = state.history;\n    if (backBehavior === 'history' || backBehavior === 'fullHistory') {\n      var currentRoute = state.routes[index];\n      if (backBehavior === 'history') {\n        // Remove the existing key from the history to de-duplicate it\n        history = history.filter(it => it.type === 'route' ? it.key !== currentRoute.key : false);\n      } else if (backBehavior === 'fullHistory') {\n        var lastHistoryRouteItemIndex = history.findLastIndex(item => item.type === 'route');\n        if (currentRoute.key === history[lastHistoryRouteItemIndex]?.key) {\n          // For full-history, only remove if it matches the last route\n          // Useful for drawer, if current route was in history, then drawer state changed\n          // Then we only need to move the route to the front\n          history = [...history.slice(0, lastHistoryRouteItemIndex), ...history.slice(lastHistoryRouteItemIndex + 1)];\n        }\n      }\n      history = history.concat({\n        type: TYPE_ROUTE,\n        key: currentRoute.key,\n        params: backBehavior === 'fullHistory' ? currentRoute.params : undefined\n      });\n    } else {\n      history = getRouteHistory(state.routes, index, backBehavior, initialRouteName);\n    }\n    return {\n      ...state,\n      index,\n      history\n    };\n  };\n  function TabRouter(_ref) {\n    var initialRouteName = _ref.initialRouteName,\n      _ref$backBehavior = _ref.backBehavior,\n      backBehavior = _ref$backBehavior === void 0 ? 'firstRoute' : _ref$backBehavior;\n    var router = {\n      ..._BaseRouter.BaseRouter,\n      type: 'tab',\n      getInitialState(_ref2) {\n        var routeNames = _ref2.routeNames,\n          routeParamList = _ref2.routeParamList;\n        var index = initialRouteName !== undefined && routeNames.includes(initialRouteName) ? routeNames.indexOf(initialRouteName) : 0;\n        var routes = routeNames.map(name => ({\n          name,\n          key: `${name}-${(0, _nonSecure.nanoid)()}`,\n          params: routeParamList[name]\n        }));\n        var history = getRouteHistory(routes, index, backBehavior, initialRouteName);\n        return {\n          stale: false,\n          type: 'tab',\n          key: `tab-${(0, _nonSecure.nanoid)()}`,\n          index,\n          routeNames,\n          history,\n          routes,\n          preloadedRouteKeys: []\n        };\n      },\n      getRehydratedState(partialState, _ref3) {\n        var routeNames = _ref3.routeNames,\n          routeParamList = _ref3.routeParamList;\n        var state = partialState;\n        if (state.stale === false) {\n          return state;\n        }\n        var routes = routeNames.map(name => {\n          var route = state.routes.find(r => r.name === name);\n          return {\n            ...route,\n            name,\n            key: route && route.name === name && route.key ? route.key : `${name}-${(0, _nonSecure.nanoid)()}`,\n            params: routeParamList[name] !== undefined ? {\n              ...routeParamList[name],\n              ...(route ? route.params : undefined)\n            } : route ? route.params : undefined\n          };\n        });\n        var index = Math.min(Math.max(routeNames.indexOf(state.routes[state?.index ?? 0]?.name), 0), routes.length - 1);\n        var routeKeys = routes.map(route => route.key);\n        var history = state.history?.filter(it => routeKeys.includes(it.key)) ?? [];\n        return changeIndex({\n          stale: false,\n          type: 'tab',\n          key: `tab-${(0, _nonSecure.nanoid)()}`,\n          index,\n          routeNames,\n          history,\n          routes,\n          preloadedRouteKeys: state.preloadedRouteKeys?.filter(key => routeKeys.includes(key)) ?? []\n        }, index, backBehavior, initialRouteName);\n      },\n      getStateForRouteNamesChange(state, _ref4) {\n        var routeNames = _ref4.routeNames,\n          routeParamList = _ref4.routeParamList,\n          routeKeyChanges = _ref4.routeKeyChanges;\n        var routes = routeNames.map(name => state.routes.find(r => r.name === name && !routeKeyChanges.includes(r.name)) || {\n          name,\n          key: `${name}-${(0, _nonSecure.nanoid)()}`,\n          params: routeParamList[name]\n        });\n        var index = Math.max(0, routeNames.indexOf(state.routes[state.index].name));\n        var history = state.history.filter(\n        // Type will always be 'route' for tabs, but could be different in a router extending this (e.g. drawer)\n        it => it.type !== 'route' || routes.find(r => r.key === it.key));\n        if (!history.length) {\n          history = getRouteHistory(routes, index, backBehavior, initialRouteName);\n        }\n        return {\n          ...state,\n          history,\n          routeNames,\n          routes,\n          index\n        };\n      },\n      getStateForRouteFocus(state, key) {\n        var index = state.routes.findIndex(r => r.key === key);\n        if (index === -1 || index === state.index) {\n          return state;\n        }\n        return changeIndex(state, index, backBehavior, initialRouteName);\n      },\n      getStateForAction(state, action, _ref5) {\n        var routeParamList = _ref5.routeParamList,\n          routeGetIdList = _ref5.routeGetIdList;\n        switch (action.type) {\n          case 'JUMP_TO':\n          case 'NAVIGATE':\n          case 'NAVIGATE_DEPRECATED':\n            {\n              var index = state.routes.findIndex(route => route.name === action.payload.name);\n              if (index === -1) {\n                return null;\n              }\n              var updatedState = changeIndex({\n                ...state,\n                routes: state.routes.map(route => {\n                  if (route.name !== action.payload.name) {\n                    return route;\n                  }\n                  var getId = routeGetIdList[route.name];\n                  var currentId = getId?.({\n                    params: route.params\n                  });\n                  var nextId = getId?.({\n                    params: action.payload.params\n                  });\n                  var key = currentId === nextId ? route.key : `${route.name}-${(0, _nonSecure.nanoid)()}`;\n                  var params;\n                  if ((action.type === 'NAVIGATE' || action.type === 'NAVIGATE_DEPRECATED') && action.payload.merge && currentId === nextId) {\n                    params = action.payload.params !== undefined || routeParamList[route.name] !== undefined ? {\n                      ...routeParamList[route.name],\n                      ...route.params,\n                      ...action.payload.params\n                    } : route.params;\n                  } else {\n                    params = routeParamList[route.name] !== undefined ? {\n                      ...routeParamList[route.name],\n                      ...action.payload.params\n                    } : action.payload.params;\n                  }\n                  var path = action.type === 'NAVIGATE' && action.payload.path != null ? action.payload.path : route.path;\n                  return params !== route.params || path !== route.path ? {\n                    ...route,\n                    key,\n                    path,\n                    params\n                  } : route;\n                })\n              }, index, backBehavior, initialRouteName);\n              return {\n                ...updatedState,\n                preloadedRouteKeys: updatedState.preloadedRouteKeys.filter(key => key !== state.routes[updatedState.index].key)\n              };\n            }\n          case 'SET_PARAMS':\n          case 'REPLACE_PARAMS':\n            {\n              var nextState = _BaseRouter.BaseRouter.getStateForAction(state, action);\n              if (nextState !== null) {\n                var _index = nextState.index;\n                if (_index != null) {\n                  var focusedRoute = nextState.routes[_index];\n                  var historyItemIndex = state.history.findLastIndex(item => item.key === focusedRoute.key);\n                  var updatedHistory = state.history;\n                  if (historyItemIndex !== -1) {\n                    updatedHistory = [...state.history];\n                    updatedHistory[historyItemIndex] = {\n                      ...updatedHistory[historyItemIndex],\n                      params: focusedRoute.params\n                    };\n                  }\n                  return {\n                    ...nextState,\n                    history: updatedHistory\n                  };\n                }\n              }\n              return nextState;\n            }\n          case 'GO_BACK':\n            {\n              if (state.history.length === 1) {\n                return null;\n              }\n              var previousHistoryItem = state.history[state.history.length - 2];\n              var previousKey = previousHistoryItem?.key;\n              var _index2 = state.routes.findLastIndex(route => route.key === previousKey);\n              if (_index2 === -1) {\n                return null;\n              }\n              var routes = state.routes;\n              if (backBehavior === 'fullHistory' && routes[_index2].params !== previousHistoryItem.params) {\n                routes = [...state.routes];\n                routes[_index2] = {\n                  ...routes[_index2],\n                  params: previousHistoryItem.params\n                };\n              }\n              return {\n                ...state,\n                routes,\n                preloadedRouteKeys: state.preloadedRouteKeys.filter(key => key !== state.routes[_index2].key),\n                history: state.history.slice(0, -1),\n                index: _index2\n              };\n            }\n          case 'PRELOAD':\n            {\n              var routeIndex = state.routes.findIndex(route => route.name === action.payload.name);\n              if (routeIndex === -1) {\n                return null;\n              }\n              var route = state.routes[routeIndex];\n              var getId = routeGetIdList[route.name];\n              var currentId = getId?.({\n                params: route.params\n              });\n              var nextId = getId?.({\n                params: action.payload.params\n              });\n              var key = currentId === nextId ? route.key : `${route.name}-${(0, _nonSecure.nanoid)()}`;\n              var params = action.payload.params !== undefined || routeParamList[route.name] !== undefined ? {\n                ...routeParamList[route.name],\n                ...action.payload.params\n              } : undefined;\n              var newRoute = params !== route.params ? {\n                ...route,\n                key,\n                params\n              } : route;\n              return {\n                ...state,\n                preloadedRouteKeys: state.preloadedRouteKeys.filter(key => key !== route.key).concat(newRoute.key),\n                routes: state.routes.map((route, index) => index === routeIndex ? newRoute : route),\n                history: key === route.key ? state.history : state.history.filter(record => record.key !== route.key)\n              };\n            }\n          default:\n            return _BaseRouter.BaseRouter.getStateForAction(state, action);\n        }\n      },\n      actionCreators: TabActions\n    };\n    return router;\n  }\n});","lineCount":329,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13,"exports"],[7,9,1,13],[7,10,1,13,"TabActions"],[7,20,1,13],[8,2,1,13,"exports"],[8,9,1,13],[8,10,1,13,"TabRouter"],[8,19,1,13],[8,22,1,13,"TabRouter"],[8,31,1,13],[9,2,3,0],[9,6,3,0,"_nonSecure"],[9,16,3,0],[9,19,3,0,"require"],[9,26,3,0],[9,27,3,0,"_dependencyMap"],[9,41,3,0],[10,2,4,0],[10,6,4,0,"_BaseRouter"],[10,17,4,0],[10,20,4,0,"require"],[10,27,4,0],[10,28,4,0,"_dependencyMap"],[10,42,4,0],[11,2,5,0],[11,6,5,6,"TYPE_ROUTE"],[11,16,5,16],[11,19,5,19],[11,26,5,26],[12,2,6,7],[12,6,6,13,"TabActions"],[12,16,6,23],[12,19,6,23,"exports"],[12,26,6,23],[12,27,6,23,"TabActions"],[12,37,6,23],[12,40,6,26],[13,4,7,2,"jumpTo"],[13,10,7,8,"jumpTo"],[13,11,7,9,"name"],[13,15,7,13],[13,17,7,15,"params"],[13,23,7,21],[13,25,7,23],[14,6,8,4],[14,13,8,11],[15,8,9,6,"type"],[15,12,9,10],[15,14,9,12],[15,23,9,21],[16,8,10,6,"payload"],[16,15,10,13],[16,17,10,15],[17,10,11,8,"name"],[17,14,11,12],[18,10,12,8,"params"],[19,8,13,6],[20,6,14,4],[20,7,14,5],[21,4,15,2],[22,2,16,0],[22,3,16,1],[23,2,17,0],[23,6,17,6,"getRouteHistory"],[23,21,17,21],[23,24,17,24,"getRouteHistory"],[23,25,17,25,"routes"],[23,31,17,31],[23,33,17,33,"index"],[23,38,17,38],[23,40,17,40,"backBehavior"],[23,52,17,52],[23,54,17,54,"initialRouteName"],[23,70,17,70],[23,75,17,75],[24,4,18,2],[24,8,18,8,"history"],[24,15,18,15],[24,18,18,18],[24,19,18,19],[25,6,19,4,"type"],[25,10,19,8],[25,12,19,10,"TYPE_ROUTE"],[25,22,19,20],[26,6,20,4,"key"],[26,9,20,7],[26,11,20,9,"routes"],[26,17,20,15],[26,18,20,16,"index"],[26,23,20,21],[26,24,20,22],[26,25,20,23,"key"],[27,4,21,2],[27,5,21,3],[27,6,21,4],[28,4,22,2],[28,8,22,6,"initialRouteIndex"],[28,25,22,23],[29,4,23,2],[29,12,23,10,"backBehavior"],[29,24,23,22],[30,6,24,4],[30,11,24,9],[30,18,24,16],[31,8,25,6],[31,13,25,11],[31,17,25,15,"i"],[31,18,25,16],[31,21,25,19,"index"],[31,26,25,24],[31,28,25,26,"i"],[31,29,25,27],[31,32,25,30],[31,33,25,31],[31,35,25,33,"i"],[31,36,25,34],[31,38,25,36],[31,40,25,38],[32,10,26,8,"history"],[32,17,26,15],[32,18,26,16,"unshift"],[32,25,26,23],[32,26,26,24],[33,12,27,10,"type"],[33,16,27,14],[33,18,27,16,"TYPE_ROUTE"],[33,28,27,26],[34,12,28,10,"key"],[34,15,28,13],[34,17,28,15,"routes"],[34,23,28,21],[34,24,28,22,"i"],[34,25,28,23],[34,28,28,26],[34,29,28,27],[34,30,28,28],[34,31,28,29,"key"],[35,10,29,8],[35,11,29,9],[35,12,29,10],[36,8,30,6],[37,8,31,6],[38,6,32,4],[38,11,32,9],[38,23,32,21],[39,8,33,6],[39,12,33,10,"index"],[39,17,33,15],[39,22,33,20],[39,23,33,21],[39,25,33,23],[40,10,34,8,"history"],[40,17,34,15],[40,18,34,16,"unshift"],[40,25,34,23],[40,26,34,24],[41,12,35,10,"type"],[41,16,35,14],[41,18,35,16,"TYPE_ROUTE"],[41,28,35,26],[42,12,36,10,"key"],[42,15,36,13],[42,17,36,15,"routes"],[42,23,36,21],[42,24,36,22],[42,25,36,23],[42,26,36,24],[42,27,36,25,"key"],[43,10,37,8],[43,11,37,9],[43,12,37,10],[44,8,38,6],[45,8,39,6],[46,6,40,4],[46,11,40,9],[46,25,40,23],[47,8,41,6,"initialRouteIndex"],[47,25,41,23],[47,28,41,26,"routes"],[47,34,41,32],[47,35,41,33,"findIndex"],[47,44,41,42],[47,45,41,43,"route"],[47,50,41,48],[47,54,41,52,"route"],[47,59,41,57],[47,60,41,58,"name"],[47,64,41,62],[47,69,41,67,"initialRouteName"],[47,85,41,83],[47,86,41,84],[48,8,42,6,"initialRouteIndex"],[48,25,42,23],[48,28,42,26,"initialRouteIndex"],[48,45,42,43],[48,50,42,48],[48,51,42,49],[48,52,42,50],[48,55,42,53],[48,56,42,54],[48,59,42,57,"initialRouteIndex"],[48,76,42,74],[49,8,43,6],[49,12,43,10,"index"],[49,17,43,15],[49,22,43,20,"initialRouteIndex"],[49,39,43,37],[49,41,43,39],[50,10,44,8,"history"],[50,17,44,15],[50,18,44,16,"unshift"],[50,25,44,23],[50,26,44,24],[51,12,45,10,"type"],[51,16,45,14],[51,18,45,16,"TYPE_ROUTE"],[51,28,45,26],[52,12,46,10,"key"],[52,15,46,13],[52,17,46,15,"routes"],[52,23,46,21],[52,24,46,22,"initialRouteIndex"],[52,41,46,39],[52,42,46,40],[52,43,46,41,"key"],[53,10,47,8],[53,11,47,9],[53,12,47,10],[54,8,48,6],[55,8,49,6],[56,6,50,4],[56,11,50,9],[56,20,50,18],[57,6,51,4],[57,11,51,9],[57,24,51,22],[58,8,52,6],[59,8,53,6],[60,4,54,2],[61,4,55,2],[61,11,55,9,"history"],[61,18,55,16],[62,2,56,0],[62,3,56,1],[63,2,57,0],[63,6,57,6,"changeIndex"],[63,17,57,17],[63,20,57,20,"changeIndex"],[63,21,57,21,"state"],[63,26,57,26],[63,28,57,28,"index"],[63,33,57,33],[63,35,57,35,"backBehavior"],[63,47,57,47],[63,49,57,49,"initialRouteName"],[63,65,57,65],[63,70,57,70],[64,4,58,2],[64,8,58,6,"history"],[64,15,58,13],[64,18,58,16,"state"],[64,23,58,21],[64,24,58,22,"history"],[64,31,58,29],[65,4,59,2],[65,8,59,6,"backBehavior"],[65,20,59,18],[65,25,59,23],[65,34,59,32],[65,38,59,36,"backBehavior"],[65,50,59,48],[65,55,59,53],[65,68,59,66],[65,70,59,68],[66,6,60,4],[66,10,60,10,"currentRoute"],[66,22,60,22],[66,25,60,25,"state"],[66,30,60,30],[66,31,60,31,"routes"],[66,37,60,37],[66,38,60,38,"index"],[66,43,60,43],[66,44,60,44],[67,6,61,4],[67,10,61,8,"backBehavior"],[67,22,61,20],[67,27,61,25],[67,36,61,34],[67,38,61,36],[68,8,62,6],[69,8,63,6,"history"],[69,15,63,13],[69,18,63,16,"history"],[69,25,63,23],[69,26,63,24,"filter"],[69,32,63,30],[69,33,63,31,"it"],[69,35,63,33],[69,39,63,37,"it"],[69,41,63,39],[69,42,63,40,"type"],[69,46,63,44],[69,51,63,49],[69,58,63,56],[69,61,63,59,"it"],[69,63,63,61],[69,64,63,62,"key"],[69,67,63,65],[69,72,63,70,"currentRoute"],[69,84,63,82],[69,85,63,83,"key"],[69,88,63,86],[69,91,63,89],[69,96,63,94],[69,97,63,95],[70,6,64,4],[70,7,64,5],[70,13,64,11],[70,17,64,15,"backBehavior"],[70,29,64,27],[70,34,64,32],[70,47,64,45],[70,49,64,47],[71,8,65,6],[71,12,65,12,"lastHistoryRouteItemIndex"],[71,37,65,37],[71,40,65,40,"history"],[71,47,65,47],[71,48,65,48,"findLastIndex"],[71,61,65,61],[71,62,65,62,"item"],[71,66,65,66],[71,70,65,70,"item"],[71,74,65,74],[71,75,65,75,"type"],[71,79,65,79],[71,84,65,84],[71,91,65,91],[71,92,65,92],[72,8,66,6],[72,12,66,10,"currentRoute"],[72,24,66,22],[72,25,66,23,"key"],[72,28,66,26],[72,33,66,31,"history"],[72,40,66,38],[72,41,66,39,"lastHistoryRouteItemIndex"],[72,66,66,64],[72,67,66,65],[72,69,66,67,"key"],[72,72,66,70],[72,74,66,72],[73,10,67,8],[74,10,68,8],[75,10,69,8],[76,10,70,8,"history"],[76,17,70,15],[76,20,70,18],[76,21,70,19],[76,24,70,22,"history"],[76,31,70,29],[76,32,70,30,"slice"],[76,37,70,35],[76,38,70,36],[76,39,70,37],[76,41,70,39,"lastHistoryRouteItemIndex"],[76,66,70,64],[76,67,70,65],[76,69,70,67],[76,72,70,70,"history"],[76,79,70,77],[76,80,70,78,"slice"],[76,85,70,83],[76,86,70,84,"lastHistoryRouteItemIndex"],[76,111,70,109],[76,114,70,112],[76,115,70,113],[76,116,70,114],[76,117,70,115],[77,8,71,6],[78,6,72,4],[79,6,73,4,"history"],[79,13,73,11],[79,16,73,14,"history"],[79,23,73,21],[79,24,73,22,"concat"],[79,30,73,28],[79,31,73,29],[80,8,74,6,"type"],[80,12,74,10],[80,14,74,12,"TYPE_ROUTE"],[80,24,74,22],[81,8,75,6,"key"],[81,11,75,9],[81,13,75,11,"currentRoute"],[81,25,75,23],[81,26,75,24,"key"],[81,29,75,27],[82,8,76,6,"params"],[82,14,76,12],[82,16,76,14,"backBehavior"],[82,28,76,26],[82,33,76,31],[82,46,76,44],[82,49,76,47,"currentRoute"],[82,61,76,59],[82,62,76,60,"params"],[82,68,76,66],[82,71,76,69,"undefined"],[83,6,77,4],[83,7,77,5],[83,8,77,6],[84,4,78,2],[84,5,78,3],[84,11,78,9],[85,6,79,4,"history"],[85,13,79,11],[85,16,79,14,"getRouteHistory"],[85,31,79,29],[85,32,79,30,"state"],[85,37,79,35],[85,38,79,36,"routes"],[85,44,79,42],[85,46,79,44,"index"],[85,51,79,49],[85,53,79,51,"backBehavior"],[85,65,79,63],[85,67,79,65,"initialRouteName"],[85,83,79,81],[85,84,79,82],[86,4,80,2],[87,4,81,2],[87,11,81,9],[88,6,82,4],[88,9,82,7,"state"],[88,14,82,12],[89,6,83,4,"index"],[89,11,83,9],[90,6,84,4,"history"],[91,4,85,2],[91,5,85,3],[92,2,86,0],[92,3,86,1],[93,2,87,7],[93,11,87,16,"TabRouter"],[93,20,87,25,"TabRouter"],[93,21,87,25,"_ref"],[93,25,87,25],[93,27,90,3],[94,4,90,3],[94,8,88,2,"initialRouteName"],[94,24,88,18],[94,27,88,18,"_ref"],[94,31,88,18],[94,32,88,2,"initialRouteName"],[94,48,88,18],[95,6,88,18,"_ref$backBehavior"],[95,23,88,18],[95,26,88,18,"_ref"],[95,30,88,18],[95,31,89,2,"backBehavior"],[95,43,89,14],[96,6,89,2,"backBehavior"],[96,18,89,14],[96,21,89,14,"_ref$backBehavior"],[96,38,89,14],[96,52,89,17],[96,64,89,29],[96,67,89,29,"_ref$backBehavior"],[96,84,89,29],[97,4,91,2],[97,8,91,8,"router"],[97,14,91,14],[97,17,91,17],[98,6,92,4],[98,9,92,7,"BaseRouter"],[98,31,92,17],[99,6,93,4,"type"],[99,10,93,8],[99,12,93,10],[99,17,93,15],[100,6,94,4,"getInitialState"],[100,21,94,19,"getInitialState"],[100,22,94,19,"_ref2"],[100,27,94,19],[100,29,97,7],[101,8,97,7],[101,12,95,6,"routeNames"],[101,22,95,16],[101,25,95,16,"_ref2"],[101,30,95,16],[101,31,95,6,"routeNames"],[101,41,95,16],[102,10,96,6,"routeParamList"],[102,24,96,20],[102,27,96,20,"_ref2"],[102,32,96,20],[102,33,96,6,"routeParamList"],[102,47,96,20],[103,8,98,6],[103,12,98,12,"index"],[103,17,98,17],[103,20,98,20,"initialRouteName"],[103,36,98,36],[103,41,98,41,"undefined"],[103,50,98,50],[103,54,98,54,"routeNames"],[103,64,98,64],[103,65,98,65,"includes"],[103,73,98,73],[103,74,98,74,"initialRouteName"],[103,90,98,90],[103,91,98,91],[103,94,98,94,"routeNames"],[103,104,98,104],[103,105,98,105,"indexOf"],[103,112,98,112],[103,113,98,113,"initialRouteName"],[103,129,98,129],[103,130,98,130],[103,133,98,133],[103,134,98,134],[104,8,99,6],[104,12,99,12,"routes"],[104,18,99,18],[104,21,99,21,"routeNames"],[104,31,99,31],[104,32,99,32,"map"],[104,35,99,35],[104,36,99,36,"name"],[104,40,99,40],[104,45,99,45],[105,10,100,8,"name"],[105,14,100,12],[106,10,101,8,"key"],[106,13,101,11],[106,15,101,13],[106,18,101,16,"name"],[106,22,101,20],[106,26,101,24],[106,30,101,24,"nanoid"],[106,47,101,30],[106,49,101,31],[106,50,101,32],[106,52,101,34],[107,10,102,8,"params"],[107,16,102,14],[107,18,102,16,"routeParamList"],[107,32,102,30],[107,33,102,31,"name"],[107,37,102,35],[108,8,103,6],[108,9,103,7],[108,10,103,8],[108,11,103,9],[109,8,104,6],[109,12,104,12,"history"],[109,19,104,19],[109,22,104,22,"getRouteHistory"],[109,37,104,37],[109,38,104,38,"routes"],[109,44,104,44],[109,46,104,46,"index"],[109,51,104,51],[109,53,104,53,"backBehavior"],[109,65,104,65],[109,67,104,67,"initialRouteName"],[109,83,104,83],[109,84,104,84],[110,8,105,6],[110,15,105,13],[111,10,106,8,"stale"],[111,15,106,13],[111,17,106,15],[111,22,106,20],[112,10,107,8,"type"],[112,14,107,12],[112,16,107,14],[112,21,107,19],[113,10,108,8,"key"],[113,13,108,11],[113,15,108,13],[113,22,108,20],[113,26,108,20,"nanoid"],[113,43,108,26],[113,45,108,27],[113,46,108,28],[113,48,108,30],[114,10,109,8,"index"],[114,15,109,13],[115,10,110,8,"routeNames"],[115,20,110,18],[116,10,111,8,"history"],[116,17,111,15],[117,10,112,8,"routes"],[117,16,112,14],[118,10,113,8,"preloadedRouteKeys"],[118,28,113,26],[118,30,113,28],[119,8,114,6],[119,9,114,7],[120,6,115,4],[120,7,115,5],[121,6,116,4,"getRehydratedState"],[121,24,116,22,"getRehydratedState"],[121,25,116,23,"partialState"],[121,37,116,35],[121,39,116,35,"_ref3"],[121,44,116,35],[121,46,119,7],[122,8,119,7],[122,12,117,6,"routeNames"],[122,22,117,16],[122,25,117,16,"_ref3"],[122,30,117,16],[122,31,117,6,"routeNames"],[122,41,117,16],[123,10,118,6,"routeParamList"],[123,24,118,20],[123,27,118,20,"_ref3"],[123,32,118,20],[123,33,118,6,"routeParamList"],[123,47,118,20],[124,8,120,6],[124,12,120,12,"state"],[124,17,120,17],[124,20,120,20,"partialState"],[124,32,120,32],[125,8,121,6],[125,12,121,10,"state"],[125,17,121,15],[125,18,121,16,"stale"],[125,23,121,21],[125,28,121,26],[125,33,121,31],[125,35,121,33],[126,10,122,8],[126,17,122,15,"state"],[126,22,122,20],[127,8,123,6],[128,8,124,6],[128,12,124,12,"routes"],[128,18,124,18],[128,21,124,21,"routeNames"],[128,31,124,31],[128,32,124,32,"map"],[128,35,124,35],[128,36,124,36,"name"],[128,40,124,40],[128,44,124,44],[129,10,125,8],[129,14,125,14,"route"],[129,19,125,19],[129,22,125,22,"state"],[129,27,125,27],[129,28,125,28,"routes"],[129,34,125,34],[129,35,125,35,"find"],[129,39,125,39],[129,40,125,40,"r"],[129,41,125,41],[129,45,125,45,"r"],[129,46,125,46],[129,47,125,47,"name"],[129,51,125,51],[129,56,125,56,"name"],[129,60,125,60],[129,61,125,61],[130,10,126,8],[130,17,126,15],[131,12,127,10],[131,15,127,13,"route"],[131,20,127,18],[132,12,128,10,"name"],[132,16,128,14],[133,12,129,10,"key"],[133,15,129,13],[133,17,129,15,"route"],[133,22,129,20],[133,26,129,24,"route"],[133,31,129,29],[133,32,129,30,"name"],[133,36,129,34],[133,41,129,39,"name"],[133,45,129,43],[133,49,129,47,"route"],[133,54,129,52],[133,55,129,53,"key"],[133,58,129,56],[133,61,129,59,"route"],[133,66,129,64],[133,67,129,65,"key"],[133,70,129,68],[133,73,129,71],[133,76,129,74,"name"],[133,80,129,78],[133,84,129,82],[133,88,129,82,"nanoid"],[133,105,129,88],[133,107,129,89],[133,108,129,90],[133,110,129,92],[134,12,130,10,"params"],[134,18,130,16],[134,20,130,18,"routeParamList"],[134,34,130,32],[134,35,130,33,"name"],[134,39,130,37],[134,40,130,38],[134,45,130,43,"undefined"],[134,54,130,52],[134,57,130,55],[135,14,131,12],[135,17,131,15,"routeParamList"],[135,31,131,29],[135,32,131,30,"name"],[135,36,131,34],[135,37,131,35],[136,14,132,12],[136,18,132,16,"route"],[136,23,132,21],[136,26,132,24,"route"],[136,31,132,29],[136,32,132,30,"params"],[136,38,132,36],[136,41,132,39,"undefined"],[136,50,132,48],[137,12,133,10],[137,13,133,11],[137,16,133,14,"route"],[137,21,133,19],[137,24,133,22,"route"],[137,29,133,27],[137,30,133,28,"params"],[137,36,133,34],[137,39,133,37,"undefined"],[138,10,134,8],[138,11,134,9],[139,8,135,6],[139,9,135,7],[139,10,135,8],[140,8,136,6],[140,12,136,12,"index"],[140,17,136,17],[140,20,136,20,"Math"],[140,24,136,24],[140,25,136,25,"min"],[140,28,136,28],[140,29,136,29,"Math"],[140,33,136,33],[140,34,136,34,"max"],[140,37,136,37],[140,38,136,38,"routeNames"],[140,48,136,48],[140,49,136,49,"indexOf"],[140,56,136,56],[140,57,136,57,"state"],[140,62,136,62],[140,63,136,63,"routes"],[140,69,136,69],[140,70,136,70,"state"],[140,75,136,75],[140,77,136,77,"index"],[140,82,136,82],[140,86,136,86],[140,87,136,87],[140,88,136,88],[140,90,136,90,"name"],[140,94,136,94],[140,95,136,95],[140,97,136,97],[140,98,136,98],[140,99,136,99],[140,101,136,101,"routes"],[140,107,136,107],[140,108,136,108,"length"],[140,114,136,114],[140,117,136,117],[140,118,136,118],[140,119,136,119],[141,8,137,6],[141,12,137,12,"routeKeys"],[141,21,137,21],[141,24,137,24,"routes"],[141,30,137,30],[141,31,137,31,"map"],[141,34,137,34],[141,35,137,35,"route"],[141,40,137,40],[141,44,137,44,"route"],[141,49,137,49],[141,50,137,50,"key"],[141,53,137,53],[141,54,137,54],[142,8,138,6],[142,12,138,12,"history"],[142,19,138,19],[142,22,138,22,"state"],[142,27,138,27],[142,28,138,28,"history"],[142,35,138,35],[142,37,138,37,"filter"],[142,43,138,43],[142,44,138,44,"it"],[142,46,138,46],[142,50,138,50,"routeKeys"],[142,59,138,59],[142,60,138,60,"includes"],[142,68,138,68],[142,69,138,69,"it"],[142,71,138,71],[142,72,138,72,"key"],[142,75,138,75],[142,76,138,76],[142,77,138,77],[142,81,138,81],[142,83,138,83],[143,8,139,6],[143,15,139,13,"changeIndex"],[143,26,139,24],[143,27,139,25],[144,10,140,8,"stale"],[144,15,140,13],[144,17,140,15],[144,22,140,20],[145,10,141,8,"type"],[145,14,141,12],[145,16,141,14],[145,21,141,19],[146,10,142,8,"key"],[146,13,142,11],[146,15,142,13],[146,22,142,20],[146,26,142,20,"nanoid"],[146,43,142,26],[146,45,142,27],[146,46,142,28],[146,48,142,30],[147,10,143,8,"index"],[147,15,143,13],[148,10,144,8,"routeNames"],[148,20,144,18],[149,10,145,8,"history"],[149,17,145,15],[150,10,146,8,"routes"],[150,16,146,14],[151,10,147,8,"preloadedRouteKeys"],[151,28,147,26],[151,30,147,28,"state"],[151,35,147,33],[151,36,147,34,"preloadedRouteKeys"],[151,54,147,52],[151,56,147,54,"filter"],[151,62,147,60],[151,63,147,61,"key"],[151,66,147,64],[151,70,147,68,"routeKeys"],[151,79,147,77],[151,80,147,78,"includes"],[151,88,147,86],[151,89,147,87,"key"],[151,92,147,90],[151,93,147,91],[151,94,147,92],[151,98,147,96],[152,8,148,6],[152,9,148,7],[152,11,148,9,"index"],[152,16,148,14],[152,18,148,16,"backBehavior"],[152,30,148,28],[152,32,148,30,"initialRouteName"],[152,48,148,46],[152,49,148,47],[153,6,149,4],[153,7,149,5],[154,6,150,4,"getStateForRouteNamesChange"],[154,33,150,31,"getStateForRouteNamesChange"],[154,34,150,32,"state"],[154,39,150,37],[154,41,150,37,"_ref4"],[154,46,150,37],[154,48,154,7],[155,8,154,7],[155,12,151,6,"routeNames"],[155,22,151,16],[155,25,151,16,"_ref4"],[155,30,151,16],[155,31,151,6,"routeNames"],[155,41,151,16],[156,10,152,6,"routeParamList"],[156,24,152,20],[156,27,152,20,"_ref4"],[156,32,152,20],[156,33,152,6,"routeParamList"],[156,47,152,20],[157,10,153,6,"routeKeyChanges"],[157,25,153,21],[157,28,153,21,"_ref4"],[157,33,153,21],[157,34,153,6,"routeKeyChanges"],[157,49,153,21],[158,8,155,6],[158,12,155,12,"routes"],[158,18,155,18],[158,21,155,21,"routeNames"],[158,31,155,31],[158,32,155,32,"map"],[158,35,155,35],[158,36,155,36,"name"],[158,40,155,40],[158,44,155,44,"state"],[158,49,155,49],[158,50,155,50,"routes"],[158,56,155,56],[158,57,155,57,"find"],[158,61,155,61],[158,62,155,62,"r"],[158,63,155,63],[158,67,155,67,"r"],[158,68,155,68],[158,69,155,69,"name"],[158,73,155,73],[158,78,155,78,"name"],[158,82,155,82],[158,86,155,86],[158,87,155,87,"routeKeyChanges"],[158,102,155,102],[158,103,155,103,"includes"],[158,111,155,111],[158,112,155,112,"r"],[158,113,155,113],[158,114,155,114,"name"],[158,118,155,118],[158,119,155,119],[158,120,155,120],[158,124,155,124],[159,10,156,8,"name"],[159,14,156,12],[160,10,157,8,"key"],[160,13,157,11],[160,15,157,13],[160,18,157,16,"name"],[160,22,157,20],[160,26,157,24],[160,30,157,24,"nanoid"],[160,47,157,30],[160,49,157,31],[160,50,157,32],[160,52,157,34],[161,10,158,8,"params"],[161,16,158,14],[161,18,158,16,"routeParamList"],[161,32,158,30],[161,33,158,31,"name"],[161,37,158,35],[162,8,159,6],[162,9,159,7],[162,10,159,8],[163,8,160,6],[163,12,160,12,"index"],[163,17,160,17],[163,20,160,20,"Math"],[163,24,160,24],[163,25,160,25,"max"],[163,28,160,28],[163,29,160,29],[163,30,160,30],[163,32,160,32,"routeNames"],[163,42,160,42],[163,43,160,43,"indexOf"],[163,50,160,50],[163,51,160,51,"state"],[163,56,160,56],[163,57,160,57,"routes"],[163,63,160,63],[163,64,160,64,"state"],[163,69,160,69],[163,70,160,70,"index"],[163,75,160,75],[163,76,160,76],[163,77,160,77,"name"],[163,81,160,81],[163,82,160,82],[163,83,160,83],[164,8,161,6],[164,12,161,10,"history"],[164,19,161,17],[164,22,161,20,"state"],[164,27,161,25],[164,28,161,26,"history"],[164,35,161,33],[164,36,161,34,"filter"],[164,42,161,40],[165,8,162,6],[166,8,163,6,"it"],[166,10,163,8],[166,14,163,12,"it"],[166,16,163,14],[166,17,163,15,"type"],[166,21,163,19],[166,26,163,24],[166,33,163,31],[166,37,163,35,"routes"],[166,43,163,41],[166,44,163,42,"find"],[166,48,163,46],[166,49,163,47,"r"],[166,50,163,48],[166,54,163,52,"r"],[166,55,163,53],[166,56,163,54,"key"],[166,59,163,57],[166,64,163,62,"it"],[166,66,163,64],[166,67,163,65,"key"],[166,70,163,68],[166,71,163,69],[166,72,163,70],[167,8,164,6],[167,12,164,10],[167,13,164,11,"history"],[167,20,164,18],[167,21,164,19,"length"],[167,27,164,25],[167,29,164,27],[168,10,165,8,"history"],[168,17,165,15],[168,20,165,18,"getRouteHistory"],[168,35,165,33],[168,36,165,34,"routes"],[168,42,165,40],[168,44,165,42,"index"],[168,49,165,47],[168,51,165,49,"backBehavior"],[168,63,165,61],[168,65,165,63,"initialRouteName"],[168,81,165,79],[168,82,165,80],[169,8,166,6],[170,8,167,6],[170,15,167,13],[171,10,168,8],[171,13,168,11,"state"],[171,18,168,16],[172,10,169,8,"history"],[172,17,169,15],[173,10,170,8,"routeNames"],[173,20,170,18],[174,10,171,8,"routes"],[174,16,171,14],[175,10,172,8,"index"],[176,8,173,6],[176,9,173,7],[177,6,174,4],[177,7,174,5],[178,6,175,4,"getStateForRouteFocus"],[178,27,175,25,"getStateForRouteFocus"],[178,28,175,26,"state"],[178,33,175,31],[178,35,175,33,"key"],[178,38,175,36],[178,40,175,38],[179,8,176,6],[179,12,176,12,"index"],[179,17,176,17],[179,20,176,20,"state"],[179,25,176,25],[179,26,176,26,"routes"],[179,32,176,32],[179,33,176,33,"findIndex"],[179,42,176,42],[179,43,176,43,"r"],[179,44,176,44],[179,48,176,48,"r"],[179,49,176,49],[179,50,176,50,"key"],[179,53,176,53],[179,58,176,58,"key"],[179,61,176,61],[179,62,176,62],[180,8,177,6],[180,12,177,10,"index"],[180,17,177,15],[180,22,177,20],[180,23,177,21],[180,24,177,22],[180,28,177,26,"index"],[180,33,177,31],[180,38,177,36,"state"],[180,43,177,41],[180,44,177,42,"index"],[180,49,177,47],[180,51,177,49],[181,10,178,8],[181,17,178,15,"state"],[181,22,178,20],[182,8,179,6],[183,8,180,6],[183,15,180,13,"changeIndex"],[183,26,180,24],[183,27,180,25,"state"],[183,32,180,30],[183,34,180,32,"index"],[183,39,180,37],[183,41,180,39,"backBehavior"],[183,53,180,51],[183,55,180,53,"initialRouteName"],[183,71,180,69],[183,72,180,70],[184,6,181,4],[184,7,181,5],[185,6,182,4,"getStateForAction"],[185,23,182,21,"getStateForAction"],[185,24,182,22,"state"],[185,29,182,27],[185,31,182,29,"action"],[185,37,182,35],[185,39,182,35,"_ref5"],[185,44,182,35],[185,46,185,7],[186,8,185,7],[186,12,183,6,"routeParamList"],[186,26,183,20],[186,29,183,20,"_ref5"],[186,34,183,20],[186,35,183,6,"routeParamList"],[186,49,183,20],[187,10,184,6,"routeGetIdList"],[187,24,184,20],[187,27,184,20,"_ref5"],[187,32,184,20],[187,33,184,6,"routeGetIdList"],[187,47,184,20],[188,8,186,6],[188,16,186,14,"action"],[188,22,186,20],[188,23,186,21,"type"],[188,27,186,25],[189,10,187,8],[189,15,187,13],[189,24,187,22],[190,10,188,8],[190,15,188,13],[190,25,188,23],[191,10,189,8],[191,15,189,13],[191,36,189,34],[192,12,190,10],[193,14,191,12],[193,18,191,18,"index"],[193,23,191,23],[193,26,191,26,"state"],[193,31,191,31],[193,32,191,32,"routes"],[193,38,191,38],[193,39,191,39,"findIndex"],[193,48,191,48],[193,49,191,49,"route"],[193,54,191,54],[193,58,191,58,"route"],[193,63,191,63],[193,64,191,64,"name"],[193,68,191,68],[193,73,191,73,"action"],[193,79,191,79],[193,80,191,80,"payload"],[193,87,191,87],[193,88,191,88,"name"],[193,92,191,92],[193,93,191,93],[194,14,192,12],[194,18,192,16,"index"],[194,23,192,21],[194,28,192,26],[194,29,192,27],[194,30,192,28],[194,32,192,30],[195,16,193,14],[195,23,193,21],[195,27,193,25],[196,14,194,12],[197,14,195,12],[197,18,195,18,"updatedState"],[197,30,195,30],[197,33,195,33,"changeIndex"],[197,44,195,44],[197,45,195,45],[198,16,196,14],[198,19,196,17,"state"],[198,24,196,22],[199,16,197,14,"routes"],[199,22,197,20],[199,24,197,22,"state"],[199,29,197,27],[199,30,197,28,"routes"],[199,36,197,34],[199,37,197,35,"map"],[199,40,197,38],[199,41,197,39,"route"],[199,46,197,44],[199,50,197,48],[200,18,198,16],[200,22,198,20,"route"],[200,27,198,25],[200,28,198,26,"name"],[200,32,198,30],[200,37,198,35,"action"],[200,43,198,41],[200,44,198,42,"payload"],[200,51,198,49],[200,52,198,50,"name"],[200,56,198,54],[200,58,198,56],[201,20,199,18],[201,27,199,25,"route"],[201,32,199,30],[202,18,200,16],[203,18,201,16],[203,22,201,22,"getId"],[203,27,201,27],[203,30,201,30,"routeGetIdList"],[203,44,201,44],[203,45,201,45,"route"],[203,50,201,50],[203,51,201,51,"name"],[203,55,201,55],[203,56,201,56],[204,18,202,16],[204,22,202,22,"currentId"],[204,31,202,31],[204,34,202,34,"getId"],[204,39,202,39],[204,42,202,42],[205,20,203,18,"params"],[205,26,203,24],[205,28,203,26,"route"],[205,33,203,31],[205,34,203,32,"params"],[206,18,204,16],[206,19,204,17],[206,20,204,18],[207,18,205,16],[207,22,205,22,"nextId"],[207,28,205,28],[207,31,205,31,"getId"],[207,36,205,36],[207,39,205,39],[208,20,206,18,"params"],[208,26,206,24],[208,28,206,26,"action"],[208,34,206,32],[208,35,206,33,"payload"],[208,42,206,40],[208,43,206,41,"params"],[209,18,207,16],[209,19,207,17],[209,20,207,18],[210,18,208,16],[210,22,208,22,"key"],[210,25,208,25],[210,28,208,28,"currentId"],[210,37,208,37],[210,42,208,42,"nextId"],[210,48,208,48],[210,51,208,51,"route"],[210,56,208,56],[210,57,208,57,"key"],[210,60,208,60],[210,63,208,63],[210,66,208,66,"route"],[210,71,208,71],[210,72,208,72,"name"],[210,76,208,76],[210,80,208,80],[210,84,208,80,"nanoid"],[210,101,208,86],[210,103,208,87],[210,104,208,88],[210,106,208,90],[211,18,209,16],[211,22,209,20,"params"],[211,28,209,26],[212,18,210,16],[212,22,210,20],[212,23,210,21,"action"],[212,29,210,27],[212,30,210,28,"type"],[212,34,210,32],[212,39,210,37],[212,49,210,47],[212,53,210,51,"action"],[212,59,210,57],[212,60,210,58,"type"],[212,64,210,62],[212,69,210,67],[212,90,210,88],[212,95,210,93,"action"],[212,101,210,99],[212,102,210,100,"payload"],[212,109,210,107],[212,110,210,108,"merge"],[212,115,210,113],[212,119,210,117,"currentId"],[212,128,210,126],[212,133,210,131,"nextId"],[212,139,210,137],[212,141,210,139],[213,20,211,18,"params"],[213,26,211,24],[213,29,211,27,"action"],[213,35,211,33],[213,36,211,34,"payload"],[213,43,211,41],[213,44,211,42,"params"],[213,50,211,48],[213,55,211,53,"undefined"],[213,64,211,62],[213,68,211,66,"routeParamList"],[213,82,211,80],[213,83,211,81,"route"],[213,88,211,86],[213,89,211,87,"name"],[213,93,211,91],[213,94,211,92],[213,99,211,97,"undefined"],[213,108,211,106],[213,111,211,109],[214,22,212,20],[214,25,212,23,"routeParamList"],[214,39,212,37],[214,40,212,38,"route"],[214,45,212,43],[214,46,212,44,"name"],[214,50,212,48],[214,51,212,49],[215,22,213,20],[215,25,213,23,"route"],[215,30,213,28],[215,31,213,29,"params"],[215,37,213,35],[216,22,214,20],[216,25,214,23,"action"],[216,31,214,29],[216,32,214,30,"payload"],[216,39,214,37],[216,40,214,38,"params"],[217,20,215,18],[217,21,215,19],[217,24,215,22,"route"],[217,29,215,27],[217,30,215,28,"params"],[217,36,215,34],[218,18,216,16],[218,19,216,17],[218,25,216,23],[219,20,217,18,"params"],[219,26,217,24],[219,29,217,27,"routeParamList"],[219,43,217,41],[219,44,217,42,"route"],[219,49,217,47],[219,50,217,48,"name"],[219,54,217,52],[219,55,217,53],[219,60,217,58,"undefined"],[219,69,217,67],[219,72,217,70],[220,22,218,20],[220,25,218,23,"routeParamList"],[220,39,218,37],[220,40,218,38,"route"],[220,45,218,43],[220,46,218,44,"name"],[220,50,218,48],[220,51,218,49],[221,22,219,20],[221,25,219,23,"action"],[221,31,219,29],[221,32,219,30,"payload"],[221,39,219,37],[221,40,219,38,"params"],[222,20,220,18],[222,21,220,19],[222,24,220,22,"action"],[222,30,220,28],[222,31,220,29,"payload"],[222,38,220,36],[222,39,220,37,"params"],[222,45,220,43],[223,18,221,16],[224,18,222,16],[224,22,222,22,"path"],[224,26,222,26],[224,29,222,29,"action"],[224,35,222,35],[224,36,222,36,"type"],[224,40,222,40],[224,45,222,45],[224,55,222,55],[224,59,222,59,"action"],[224,65,222,65],[224,66,222,66,"payload"],[224,73,222,73],[224,74,222,74,"path"],[224,78,222,78],[224,82,222,82],[224,86,222,86],[224,89,222,89,"action"],[224,95,222,95],[224,96,222,96,"payload"],[224,103,222,103],[224,104,222,104,"path"],[224,108,222,108],[224,111,222,111,"route"],[224,116,222,116],[224,117,222,117,"path"],[224,121,222,121],[225,18,223,16],[225,25,223,23,"params"],[225,31,223,29],[225,36,223,34,"route"],[225,41,223,39],[225,42,223,40,"params"],[225,48,223,46],[225,52,223,50,"path"],[225,56,223,54],[225,61,223,59,"route"],[225,66,223,64],[225,67,223,65,"path"],[225,71,223,69],[225,74,223,72],[226,20,224,18],[226,23,224,21,"route"],[226,28,224,26],[227,20,225,18,"key"],[227,23,225,21],[228,20,226,18,"path"],[228,24,226,22],[229,20,227,18,"params"],[230,18,228,16],[230,19,228,17],[230,22,228,20,"route"],[230,27,228,25],[231,16,229,14],[231,17,229,15],[232,14,230,12],[232,15,230,13],[232,17,230,15,"index"],[232,22,230,20],[232,24,230,22,"backBehavior"],[232,36,230,34],[232,38,230,36,"initialRouteName"],[232,54,230,52],[232,55,230,53],[233,14,231,12],[233,21,231,19],[234,16,232,14],[234,19,232,17,"updatedState"],[234,31,232,29],[235,16,233,14,"preloadedRouteKeys"],[235,34,233,32],[235,36,233,34,"updatedState"],[235,48,233,46],[235,49,233,47,"preloadedRouteKeys"],[235,67,233,65],[235,68,233,66,"filter"],[235,74,233,72],[235,75,233,73,"key"],[235,78,233,76],[235,82,233,80,"key"],[235,85,233,83],[235,90,233,88,"state"],[235,95,233,93],[235,96,233,94,"routes"],[235,102,233,100],[235,103,233,101,"updatedState"],[235,115,233,113],[235,116,233,114,"index"],[235,121,233,119],[235,122,233,120],[235,123,233,121,"key"],[235,126,233,124],[236,14,234,12],[236,15,234,13],[237,12,235,10],[238,10,236,8],[238,15,236,13],[238,27,236,25],[239,10,237,8],[239,15,237,13],[239,31,237,29],[240,12,238,10],[241,14,239,12],[241,18,239,18,"nextState"],[241,27,239,27],[241,30,239,30,"BaseRouter"],[241,52,239,40],[241,53,239,41,"getStateForAction"],[241,70,239,58],[241,71,239,59,"state"],[241,76,239,64],[241,78,239,66,"action"],[241,84,239,72],[241,85,239,73],[242,14,240,12],[242,18,240,16,"nextState"],[242,27,240,25],[242,32,240,30],[242,36,240,34],[242,38,240,36],[243,16,241,14],[243,20,241,20,"index"],[243,26,241,25],[243,29,241,28,"nextState"],[243,38,241,37],[243,39,241,38,"index"],[243,44,241,43],[244,16,242,14],[244,20,242,18,"index"],[244,26,242,23],[244,30,242,27],[244,34,242,31],[244,36,242,33],[245,18,243,16],[245,22,243,22,"focusedRoute"],[245,34,243,34],[245,37,243,37,"nextState"],[245,46,243,46],[245,47,243,47,"routes"],[245,53,243,53],[245,54,243,54,"index"],[245,60,243,59],[245,61,243,60],[246,18,244,16],[246,22,244,22,"historyItemIndex"],[246,38,244,38],[246,41,244,41,"state"],[246,46,244,46],[246,47,244,47,"history"],[246,54,244,54],[246,55,244,55,"findLastIndex"],[246,68,244,68],[246,69,244,69,"item"],[246,73,244,73],[246,77,244,77,"item"],[246,81,244,81],[246,82,244,82,"key"],[246,85,244,85],[246,90,244,90,"focusedRoute"],[246,102,244,102],[246,103,244,103,"key"],[246,106,244,106],[246,107,244,107],[247,18,245,16],[247,22,245,20,"updatedHistory"],[247,36,245,34],[247,39,245,37,"state"],[247,44,245,42],[247,45,245,43,"history"],[247,52,245,50],[248,18,246,16],[248,22,246,20,"historyItemIndex"],[248,38,246,36],[248,43,246,41],[248,44,246,42],[248,45,246,43],[248,47,246,45],[249,20,247,18,"updatedHistory"],[249,34,247,32],[249,37,247,35],[249,38,247,36],[249,41,247,39,"state"],[249,46,247,44],[249,47,247,45,"history"],[249,54,247,52],[249,55,247,53],[250,20,248,18,"updatedHistory"],[250,34,248,32],[250,35,248,33,"historyItemIndex"],[250,51,248,49],[250,52,248,50],[250,55,248,53],[251,22,249,20],[251,25,249,23,"updatedHistory"],[251,39,249,37],[251,40,249,38,"historyItemIndex"],[251,56,249,54],[251,57,249,55],[252,22,250,20,"params"],[252,28,250,26],[252,30,250,28,"focusedRoute"],[252,42,250,40],[252,43,250,41,"params"],[253,20,251,18],[253,21,251,19],[254,18,252,16],[255,18,253,16],[255,25,253,23],[256,20,254,18],[256,23,254,21,"nextState"],[256,32,254,30],[257,20,255,18,"history"],[257,27,255,25],[257,29,255,27,"updatedHistory"],[258,18,256,16],[258,19,256,17],[259,16,257,14],[260,14,258,12],[261,14,259,12],[261,21,259,19,"nextState"],[261,30,259,28],[262,12,260,10],[263,10,261,8],[263,15,261,13],[263,24,261,22],[264,12,262,10],[265,14,263,12],[265,18,263,16,"state"],[265,23,263,21],[265,24,263,22,"history"],[265,31,263,29],[265,32,263,30,"length"],[265,38,263,36],[265,43,263,41],[265,44,263,42],[265,46,263,44],[266,16,264,14],[266,23,264,21],[266,27,264,25],[267,14,265,12],[268,14,266,12],[268,18,266,18,"previousHistoryItem"],[268,37,266,37],[268,40,266,40,"state"],[268,45,266,45],[268,46,266,46,"history"],[268,53,266,53],[268,54,266,54,"state"],[268,59,266,59],[268,60,266,60,"history"],[268,67,266,67],[268,68,266,68,"length"],[268,74,266,74],[268,77,266,77],[268,78,266,78],[268,79,266,79],[269,14,267,12],[269,18,267,18,"previousKey"],[269,29,267,29],[269,32,267,32,"previousHistoryItem"],[269,51,267,51],[269,53,267,53,"key"],[269,56,267,56],[270,14,268,12],[270,18,268,18,"index"],[270,25,268,23],[270,28,268,26,"state"],[270,33,268,31],[270,34,268,32,"routes"],[270,40,268,38],[270,41,268,39,"findLastIndex"],[270,54,268,52],[270,55,268,53,"route"],[270,60,268,58],[270,64,268,62,"route"],[270,69,268,67],[270,70,268,68,"key"],[270,73,268,71],[270,78,268,76,"previousKey"],[270,89,268,87],[270,90,268,88],[271,14,269,12],[271,18,269,16,"index"],[271,25,269,21],[271,30,269,26],[271,31,269,27],[271,32,269,28],[271,34,269,30],[272,16,270,14],[272,23,270,21],[272,27,270,25],[273,14,271,12],[274,14,272,12],[274,18,272,16,"routes"],[274,24,272,22],[274,27,272,25,"state"],[274,32,272,30],[274,33,272,31,"routes"],[274,39,272,37],[275,14,273,12],[275,18,273,16,"backBehavior"],[275,30,273,28],[275,35,273,33],[275,48,273,46],[275,52,273,50,"routes"],[275,58,273,56],[275,59,273,57,"index"],[275,66,273,62],[275,67,273,63],[275,68,273,64,"params"],[275,74,273,70],[275,79,273,75,"previousHistoryItem"],[275,98,273,94],[275,99,273,95,"params"],[275,105,273,101],[275,107,273,103],[276,16,274,14,"routes"],[276,22,274,20],[276,25,274,23],[276,26,274,24],[276,29,274,27,"state"],[276,34,274,32],[276,35,274,33,"routes"],[276,41,274,39],[276,42,274,40],[277,16,275,14,"routes"],[277,22,275,20],[277,23,275,21,"index"],[277,30,275,26],[277,31,275,27],[277,34,275,30],[278,18,276,16],[278,21,276,19,"routes"],[278,27,276,25],[278,28,276,26,"index"],[278,35,276,31],[278,36,276,32],[279,18,277,16,"params"],[279,24,277,22],[279,26,277,24,"previousHistoryItem"],[279,45,277,43],[279,46,277,44,"params"],[280,16,278,14],[280,17,278,15],[281,14,279,12],[282,14,280,12],[282,21,280,19],[283,16,281,14],[283,19,281,17,"state"],[283,24,281,22],[284,16,282,14,"routes"],[284,22,282,20],[285,16,283,14,"preloadedRouteKeys"],[285,34,283,32],[285,36,283,34,"state"],[285,41,283,39],[285,42,283,40,"preloadedRouteKeys"],[285,60,283,58],[285,61,283,59,"filter"],[285,67,283,65],[285,68,283,66,"key"],[285,71,283,69],[285,75,283,73,"key"],[285,78,283,76],[285,83,283,81,"state"],[285,88,283,86],[285,89,283,87,"routes"],[285,95,283,93],[285,96,283,94,"index"],[285,103,283,99],[285,104,283,100],[285,105,283,101,"key"],[285,108,283,104],[285,109,283,105],[286,16,284,14,"history"],[286,23,284,21],[286,25,284,23,"state"],[286,30,284,28],[286,31,284,29,"history"],[286,38,284,36],[286,39,284,37,"slice"],[286,44,284,42],[286,45,284,43],[286,46,284,44],[286,48,284,46],[286,49,284,47],[286,50,284,48],[286,51,284,49],[287,16,285,14,"index"],[287,21,285,19],[287,23,285,14,"index"],[288,14,286,12],[288,15,286,13],[289,12,287,10],[290,10,288,8],[290,15,288,13],[290,24,288,22],[291,12,289,10],[292,14,290,12],[292,18,290,18,"routeIndex"],[292,28,290,28],[292,31,290,31,"state"],[292,36,290,36],[292,37,290,37,"routes"],[292,43,290,43],[292,44,290,44,"findIndex"],[292,53,290,53],[292,54,290,54,"route"],[292,59,290,59],[292,63,290,63,"route"],[292,68,290,68],[292,69,290,69,"name"],[292,73,290,73],[292,78,290,78,"action"],[292,84,290,84],[292,85,290,85,"payload"],[292,92,290,92],[292,93,290,93,"name"],[292,97,290,97],[292,98,290,98],[293,14,291,12],[293,18,291,16,"routeIndex"],[293,28,291,26],[293,33,291,31],[293,34,291,32],[293,35,291,33],[293,37,291,35],[294,16,292,14],[294,23,292,21],[294,27,292,25],[295,14,293,12],[296,14,294,12],[296,18,294,18,"route"],[296,23,294,23],[296,26,294,26,"state"],[296,31,294,31],[296,32,294,32,"routes"],[296,38,294,38],[296,39,294,39,"routeIndex"],[296,49,294,49],[296,50,294,50],[297,14,295,12],[297,18,295,18,"getId"],[297,23,295,23],[297,26,295,26,"routeGetIdList"],[297,40,295,40],[297,41,295,41,"route"],[297,46,295,46],[297,47,295,47,"name"],[297,51,295,51],[297,52,295,52],[298,14,296,12],[298,18,296,18,"currentId"],[298,27,296,27],[298,30,296,30,"getId"],[298,35,296,35],[298,38,296,38],[299,16,297,14,"params"],[299,22,297,20],[299,24,297,22,"route"],[299,29,297,27],[299,30,297,28,"params"],[300,14,298,12],[300,15,298,13],[300,16,298,14],[301,14,299,12],[301,18,299,18,"nextId"],[301,24,299,24],[301,27,299,27,"getId"],[301,32,299,32],[301,35,299,35],[302,16,300,14,"params"],[302,22,300,20],[302,24,300,22,"action"],[302,30,300,28],[302,31,300,29,"payload"],[302,38,300,36],[302,39,300,37,"params"],[303,14,301,12],[303,15,301,13],[303,16,301,14],[304,14,302,12],[304,18,302,18,"key"],[304,21,302,21],[304,24,302,24,"currentId"],[304,33,302,33],[304,38,302,38,"nextId"],[304,44,302,44],[304,47,302,47,"route"],[304,52,302,52],[304,53,302,53,"key"],[304,56,302,56],[304,59,302,59],[304,62,302,62,"route"],[304,67,302,67],[304,68,302,68,"name"],[304,72,302,72],[304,76,302,76],[304,80,302,76,"nanoid"],[304,97,302,82],[304,99,302,83],[304,100,302,84],[304,102,302,86],[305,14,303,12],[305,18,303,18,"params"],[305,24,303,24],[305,27,303,27,"action"],[305,33,303,33],[305,34,303,34,"payload"],[305,41,303,41],[305,42,303,42,"params"],[305,48,303,48],[305,53,303,53,"undefined"],[305,62,303,62],[305,66,303,66,"routeParamList"],[305,80,303,80],[305,81,303,81,"route"],[305,86,303,86],[305,87,303,87,"name"],[305,91,303,91],[305,92,303,92],[305,97,303,97,"undefined"],[305,106,303,106],[305,109,303,109],[306,16,304,14],[306,19,304,17,"routeParamList"],[306,33,304,31],[306,34,304,32,"route"],[306,39,304,37],[306,40,304,38,"name"],[306,44,304,42],[306,45,304,43],[307,16,305,14],[307,19,305,17,"action"],[307,25,305,23],[307,26,305,24,"payload"],[307,33,305,31],[307,34,305,32,"params"],[308,14,306,12],[308,15,306,13],[308,18,306,16,"undefined"],[308,27,306,25],[309,14,307,12],[309,18,307,18,"newRoute"],[309,26,307,26],[309,29,307,29,"params"],[309,35,307,35],[309,40,307,40,"route"],[309,45,307,45],[309,46,307,46,"params"],[309,52,307,52],[309,55,307,55],[310,16,308,14],[310,19,308,17,"route"],[310,24,308,22],[311,16,309,14,"key"],[311,19,309,17],[312,16,310,14,"params"],[313,14,311,12],[313,15,311,13],[313,18,311,16,"route"],[313,23,311,21],[314,14,312,12],[314,21,312,19],[315,16,313,14],[315,19,313,17,"state"],[315,24,313,22],[316,16,314,14,"preloadedRouteKeys"],[316,34,314,32],[316,36,314,34,"state"],[316,41,314,39],[316,42,314,40,"preloadedRouteKeys"],[316,60,314,58],[316,61,314,59,"filter"],[316,67,314,65],[316,68,314,66,"key"],[316,71,314,69],[316,75,314,73,"key"],[316,78,314,76],[316,83,314,81,"route"],[316,88,314,86],[316,89,314,87,"key"],[316,92,314,90],[316,93,314,91],[316,94,314,92,"concat"],[316,100,314,98],[316,101,314,99,"newRoute"],[316,109,314,107],[316,110,314,108,"key"],[316,113,314,111],[316,114,314,112],[317,16,315,14,"routes"],[317,22,315,20],[317,24,315,22,"state"],[317,29,315,27],[317,30,315,28,"routes"],[317,36,315,34],[317,37,315,35,"map"],[317,40,315,38],[317,41,315,39],[317,42,315,40,"route"],[317,47,315,45],[317,49,315,47,"index"],[317,54,315,52],[317,59,315,57,"index"],[317,64,315,62],[317,69,315,67,"routeIndex"],[317,79,315,77],[317,82,315,80,"newRoute"],[317,90,315,88],[317,93,315,91,"route"],[317,98,315,96],[317,99,315,97],[318,16,316,14,"history"],[318,23,316,21],[318,25,316,23,"key"],[318,28,316,26],[318,33,316,31,"route"],[318,38,316,36],[318,39,316,37,"key"],[318,42,316,40],[318,45,316,43,"state"],[318,50,316,48],[318,51,316,49,"history"],[318,58,316,56],[318,61,316,59,"state"],[318,66,316,64],[318,67,316,65,"history"],[318,74,316,72],[318,75,316,73,"filter"],[318,81,316,79],[318,82,316,80,"record"],[318,88,316,86],[318,92,316,90,"record"],[318,98,316,96],[318,99,316,97,"key"],[318,102,316,100],[318,107,316,105,"route"],[318,112,316,110],[318,113,316,111,"key"],[318,116,316,114],[319,14,317,12],[319,15,317,13],[320,12,318,10],[321,10,319,8],[322,12,320,10],[322,19,320,17,"BaseRouter"],[322,41,320,27],[322,42,320,28,"getStateForAction"],[322,59,320,45],[322,60,320,46,"state"],[322,65,320,51],[322,67,320,53,"action"],[322,73,320,59],[322,74,320,60],[323,8,321,6],[324,6,322,4],[324,7,322,5],[325,6,323,4,"actionCreators"],[325,20,323,18],[325,22,323,20,"TabActions"],[326,4,324,2],[326,5,324,3],[327,4,325,2],[327,11,325,9,"router"],[327,17,325,15],[328,2,326,0],[329,0,326,1],[329,3]],"functionMap":{"names":["<global>","TabActions.jumpTo","getRouteHistory","routes.findIndex$argument_0","changeIndex","history.filter$argument_0","history.findLastIndex$argument_0","TabRouter","router.getInitialState","routeNames.map$argument_0","router.getRehydratedState","state.routes.find$argument_0","routes.map$argument_0","state.history.filter$argument_0","state.preloadedRouteKeys.filter$argument_0","router.getStateForRouteNamesChange","routes.find$argument_0","router.getStateForRouteFocus","state.routes.findIndex$argument_0","router.getStateForAction","state.routes.map$argument_0","updatedState.preloadedRouteKeys.filter$argument_0","state.history.findLastIndex$argument_0","state.routes.findLastIndex$argument_0"],"mappings":"AAA;ECM;GDQ;wBEE;2CCwB,wCD;CFe;oBIC;+BCM,+DD;8DEE,6BF;CJqB;OOC;ICO;oCCK;QDI;KDY;IGC;oCDQ;wCEC,oBF;OCU;mCEE,kBF;4CGC,gCH;6DIS,8BJ;KHE;IQC;oCNK,0BE,yDF;OMI;MFI,yCG,qBH,CE;KRW;IUC;2CCC,kBD;KVK;IYC;iDDS,2CC;uCCM;eDgC;yEEI,mDF;qEGW,qCH;qDIwB,kCJ;kELe,sCK;sDDO,2CC;kELwB,wBK;uCCC,yDD;gFNC,kCM;KZM;CPI"}},"type":"js/module"}]}