{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}},{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.firebase = exports.default = void 0;\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n  var _env2 = require(_dependencyMap[4], \"expo/virtual/env\");\n  /**\r\n   * Firebase Configuration for SafeRide App\r\n   * Configure Firebase services for authentication, database, and analytics\r\n   */\n\n  /**\r\n   * Firebase configuration object\r\n   * In a real app, these would be environment variables\r\n   */\n  var firebaseConfig = {\n    apiKey: _env2.env.EXPO_PUBLIC_FIREBASE_API_KEY || \"your-api-key\",\n    authDomain: _env2.env.EXPO_PUBLIC_FIREBASE_AUTH_DOMAIN || \"saferide-app.firebaseapp.com\",\n    projectId: _env2.env.EXPO_PUBLIC_FIREBASE_PROJECT_ID || \"saferide-app\",\n    storageBucket: _env2.env.EXPO_PUBLIC_FIREBASE_STORAGE_BUCKET || \"saferide-app.appspot.com\",\n    messagingSenderId: _env2.env.EXPO_PUBLIC_FIREBASE_MESSAGING_SENDER_ID || \"123456789012\",\n    appId: _env2.env.EXPO_PUBLIC_FIREBASE_APP_ID || \"1:123456789012:ios:abc123def456\",\n    measurementId: _env2.env.EXPO_PUBLIC_FIREBASE_MEASUREMENT_ID || \"G-XXXXXXXXXX\",\n    databaseURL: _env2.env.EXPO_PUBLIC_FIREBASE_DATABASE_URL || \"https://saferide-app-default-rtdb.firebaseio.com/\"\n  };\n\n  /**\r\n   * Initialize Firebase (mock implementation)\r\n   * In a real app, you would use Firebase SDK\r\n   */\n  var FirebaseService = /*#__PURE__*/function () {\n    function FirebaseService() {\n      var _this = this;\n      (0, _classCallCheck2.default)(this, FirebaseService);\n      /**\r\n       * Authentication methods\r\n       */\n      this.auth = {\n        /**\r\n         * Send OTP to phone number\r\n         * @param {string} phoneNumber - Phone number with country code\r\n         * @returns {Promise<string>} Verification ID\r\n         */\n        sendOTP: function () {\n          var _ref = (0, _asyncToGenerator2.default)(function* (phoneNumber) {\n            try {\n              // Mock OTP sending - in real app use Firebase Phone Auth\n              console.log(`Sending OTP to ${phoneNumber}`);\n\n              // Simulate network delay\n              yield new Promise(resolve => setTimeout(resolve, 2000));\n\n              // Return mock verification ID\n              return `mock-verification-id-${Date.now()}`;\n            } catch (error) {\n              console.error('Failed to send OTP:', error);\n              throw new Error('Failed to send OTP. Please try again.');\n            }\n          });\n          return function sendOTP(_x) {\n            return _ref.apply(this, arguments);\n          };\n        }(),\n        /**\r\n         * Verify OTP and sign in user\r\n         * @param {string} verificationId - Verification ID from sendOTP\r\n         * @param {string} otp - OTP code entered by user\r\n         * @returns {Promise<Object>} User object\r\n         */\n        verifyOTP: function () {\n          var _ref2 = (0, _asyncToGenerator2.default)(function* (verificationId, otp) {\n            try {\n              console.log(`Verifying OTP ${otp} for verification ID ${verificationId}`);\n\n              // Mock OTP verification - in real app use Firebase Phone Auth\n              yield new Promise(resolve => setTimeout(resolve, 1500));\n\n              // For demo, accept any 6-digit OTP\n              if (otp.length !== 6) {\n                throw new Error('Invalid OTP format');\n              }\n\n              // Create mock user\n              var user = {\n                uid: `user-${Date.now()}`,\n                phoneNumber: '+919876543210',\n                // Mock phone number\n                displayName: '',\n                email: null,\n                isVerified: true,\n                emergencyContacts: [],\n                savedAddresses: [],\n                createdAt: new Date(),\n                updatedAt: new Date()\n              };\n              _this.currentUser = user;\n              return user;\n            } catch (error) {\n              console.error('OTP verification failed:', error);\n              throw error;\n            }\n          });\n          return function verifyOTP(_x2, _x3) {\n            return _ref2.apply(this, arguments);\n          };\n        }(),\n        /**\r\n         * Sign out current user\r\n         * @returns {Promise<void>}\r\n         */\n        signOut: function () {\n          var _ref3 = (0, _asyncToGenerator2.default)(function* () {\n            try {\n              console.log('Signing out user');\n              _this.currentUser = null;\n\n              // Notify listeners\n              _this.listeners.forEach(callback => callback(null));\n            } catch (error) {\n              console.error('Sign out failed:', error);\n              throw error;\n            }\n          });\n          return function signOut() {\n            return _ref3.apply(this, arguments);\n          };\n        }(),\n        /**\r\n         * Get current authenticated user\r\n         * @returns {Object|null} Current user or null\r\n         */\n        getCurrentUser: () => {\n          return this.currentUser;\n        },\n        /**\r\n         * Listen for authentication state changes\r\n         * @param {Function} callback - Callback function\r\n         * @returns {Function} Unsubscribe function\r\n         */\n        onAuthStateChanged: callback => {\n          var listenerId = Date.now().toString();\n          this.listeners.set(listenerId, callback);\n\n          // Call immediately with current user\n          callback(this.currentUser);\n\n          // Return unsubscribe function\n          return () => {\n            this.listeners.delete(listenerId);\n          };\n        },\n        /**\r\n         * Update user profile\r\n         * @param {Object} updates - Profile updates\r\n         * @returns {Promise<Object>} Updated user\r\n         */\n        updateProfile: function () {\n          var _ref4 = (0, _asyncToGenerator2.default)(function* (updates) {\n            try {\n              if (!_this.currentUser) {\n                throw new Error('No authenticated user');\n              }\n\n              // Mock profile update\n              _this.currentUser = {\n                ..._this.currentUser,\n                ...updates,\n                updatedAt: new Date()\n              };\n\n              // Notify listeners\n              _this.listeners.forEach(callback => callback(_this.currentUser));\n              return _this.currentUser;\n            } catch (error) {\n              console.error('Profile update failed:', error);\n              throw error;\n            }\n          });\n          return function updateProfile(_x4) {\n            return _ref4.apply(this, arguments);\n          };\n        }()\n      };\n      /**\r\n       * Firestore database methods\r\n       */\n      this.firestore = {\n        /**\r\n         * Get collection reference (mock)\r\n         * @param {string} collectionName - Collection name\r\n         * @returns {Object} Collection reference\r\n         */\n        collection: collectionName => ({\n          /**\r\n           * Add document to collection\r\n           * @param {Object} data - Document data\r\n           * @returns {Promise<Object>} Document reference\r\n           */\n          add: function () {\n            var _ref5 = (0, _asyncToGenerator2.default)(function* (data) {\n              var docId = `${collectionName}-${Date.now()}`;\n              console.log(`Adding document to ${collectionName}:`, data);\n              return {\n                id: docId,\n                ...data,\n                createdAt: new Date(),\n                updatedAt: new Date()\n              };\n            });\n            return function add(_x5) {\n              return _ref5.apply(this, arguments);\n            };\n          }(),\n          /**\r\n           * Get document by ID\r\n           * @param {string} docId - Document ID\r\n           * @returns {Promise<Object>} Document data\r\n           */\n          doc: docId => ({\n            get: function () {\n              var _ref6 = (0, _asyncToGenerator2.default)(function* () {\n                console.log(`Getting document ${docId} from ${collectionName}`);\n                return {\n                  id: docId,\n                  exists: true,\n                  data: () => ({\n                    id: docId,\n                    createdAt: new Date(),\n                    updatedAt: new Date()\n                  })\n                };\n              });\n              return function get() {\n                return _ref6.apply(this, arguments);\n              };\n            }(),\n            set: function () {\n              var _ref7 = (0, _asyncToGenerator2.default)(function* (data) {\n                console.log(`Setting document ${docId} in ${collectionName}:`, data);\n                return {\n                  id: docId,\n                  ...data,\n                  updatedAt: new Date()\n                };\n              });\n              return function set(_x6) {\n                return _ref7.apply(this, arguments);\n              };\n            }(),\n            update: function () {\n              var _ref8 = (0, _asyncToGenerator2.default)(function* (updates) {\n                console.log(`Updating document ${docId} in ${collectionName}:`, updates);\n                return {\n                  id: docId,\n                  ...updates,\n                  updatedAt: new Date()\n                };\n              });\n              return function update(_x7) {\n                return _ref8.apply(this, arguments);\n              };\n            }()\n          }),\n          /**\r\n           * Query collection\r\n           * @param {string} field - Field to query\r\n           * @param {string} operator - Query operator\r\n           * @param {*} value - Query value\r\n           * @returns {Promise<Array>} Query results\r\n           */\n          where: (field, operator, value) => ({\n            get: function () {\n              var _ref9 = (0, _asyncToGenerator2.default)(function* () {\n                console.log(`Querying ${collectionName} where ${field} ${operator} ${value}`);\n                return {\n                  docs: [],\n                  empty: true,\n                  size: 0\n                };\n              });\n              return function get() {\n                return _ref9.apply(this, arguments);\n              };\n            }()\n          })\n        })\n      };\n      /**\r\n       * Realtime Database methods\r\n       */\n      this.database = {\n        /**\r\n         * Get database reference\r\n         * @param {string} path - Database path\r\n         * @returns {Object} Database reference\r\n         */\n        ref: path => ({\n          /**\r\n           * Set data at path\r\n           * @param {*} data - Data to set\r\n           * @returns {Promise<void>}\r\n           */\n          set: function () {\n            var _ref0 = (0, _asyncToGenerator2.default)(function* (data) {\n              console.log(`Setting data at ${path}:`, data);\n              return Promise.resolve();\n            });\n            return function set(_x8) {\n              return _ref0.apply(this, arguments);\n            };\n          }(),\n          /**\r\n           * Update data at path\r\n           * @param {Object} updates - Updates to apply\r\n           * @returns {Promise<void>}\r\n           */\n          update: function () {\n            var _ref1 = (0, _asyncToGenerator2.default)(function* (updates) {\n              console.log(`Updating data at ${path}:`, updates);\n              return Promise.resolve();\n            });\n            return function update(_x9) {\n              return _ref1.apply(this, arguments);\n            };\n          }(),\n          /**\r\n           * Listen for data changes\r\n           * @param {Function} callback - Callback function\r\n           * @returns {Function} Unsubscribe function\r\n           */\n          on: (eventType, callback) => {\n            console.log(`Listening for ${eventType} at ${path}`);\n\n            // Mock data for demonstration\n            if (path.includes('drivers')) {\n              // Mock driver location updates\n              var interval = setInterval(() => {\n                callback({\n                  val: () => ({\n                    latitude: 19.0760 + (Math.random() - 0.5) * 0.01,\n                    longitude: 72.8777 + (Math.random() - 0.5) * 0.01,\n                    timestamp: Date.now()\n                  })\n                });\n              }, 3000);\n              return () => clearInterval(interval);\n            }\n\n            // Return unsubscribe function\n            return () => console.log(`Unsubscribed from ${path}`);\n          },\n          /**\r\n           * Remove listener\r\n           * @param {string} eventType - Event type\r\n           * @param {Function} callback - Callback to remove\r\n           */\n          off: (eventType, callback) => {\n            console.log(`Removing listener for ${eventType} at ${path}`);\n          }\n        })\n      };\n      /**\r\n       * Analytics methods\r\n       */\n      this.analytics = {\n        /**\r\n         * Log custom event\r\n         * @param {string} eventName - Event name\r\n         * @param {Object} parameters - Event parameters\r\n         */\n        logEvent: function () {\n          var _ref10 = (0, _asyncToGenerator2.default)(function* (eventName) {\n            var parameters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n            console.log(`Analytics Event - ${eventName}:`, parameters);\n\n            // In real app, this would log to Firebase Analytics\n            return Promise.resolve();\n          });\n          return function logEvent(_x0) {\n            return _ref10.apply(this, arguments);\n          };\n        }(),\n        /**\r\n         * Set user properties\r\n         * @param {Object} properties - User properties\r\n         */\n        setUserProperties: function () {\n          var _ref11 = (0, _asyncToGenerator2.default)(function* (properties) {\n            console.log('Setting user properties:', properties);\n            return Promise.resolve();\n          });\n          return function setUserProperties(_x1) {\n            return _ref11.apply(this, arguments);\n          };\n        }(),\n        /**\r\n         * Set current screen\r\n         * @param {string} screenName - Screen name\r\n         */\n        setCurrentScreen: function () {\n          var _ref12 = (0, _asyncToGenerator2.default)(function* (screenName) {\n            console.log(`Current screen: ${screenName}`);\n            return Promise.resolve();\n          });\n          return function setCurrentScreen(_x10) {\n            return _ref12.apply(this, arguments);\n          };\n        }()\n      };\n      this.initialized = false;\n      this.currentUser = null;\n      this.listeners = new Map();\n    }\n\n    /**\r\n     * Initialize Firebase services\r\n     */\n    return (0, _createClass2.default)(FirebaseService, [{\n      key: \"initialize\",\n      value: (function () {\n        var _initialize = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            // Mock Firebase initialization\n            console.log('Firebase initialized with config:', firebaseConfig.projectId);\n            this.initialized = true;\n            return true;\n          } catch (error) {\n            console.error('Firebase initialization failed:', error);\n            throw error;\n          }\n        });\n        function initialize() {\n          return _initialize.apply(this, arguments);\n        }\n        return initialize;\n      }())\n    }]);\n  }(); // Create and export Firebase service instance\n  var firebase = exports.firebase = new FirebaseService();\n\n  // Initialize Firebase\n  firebase.initialize().catch(console.error);\n  var _default = exports.default = firebase;\n});","lineCount":448,"map":[[11,2,1,0],[12,0,2,0],[13,0,3,0],[14,0,4,0],[16,2,6,0],[17,0,7,0],[18,0,8,0],[19,0,9,0],[20,2,10,0],[20,6,10,6,"firebaseConfig"],[20,20,10,20],[20,23,10,23],[21,4,11,2,"apiKey"],[21,10,11,8],[21,12,11,10,"_env2"],[21,17,11,10],[21,18,11,10,"env"],[21,21,11,10],[21,22,11,10,"EXPO_PUBLIC_FIREBASE_API_KEY"],[21,50,11,10],[21,54,11,54],[21,68,11,68],[22,4,12,2,"authDomain"],[22,14,12,12],[22,16,12,14,"_env2"],[22,21,12,14],[22,22,12,14,"env"],[22,25,12,14],[22,26,12,14,"EXPO_PUBLIC_FIREBASE_AUTH_DOMAIN"],[22,58,12,14],[22,62,12,62],[22,92,12,92],[23,4,13,2,"projectId"],[23,13,13,11],[23,15,13,13,"_env2"],[23,20,13,13],[23,21,13,13,"env"],[23,24,13,13],[23,25,13,13,"EXPO_PUBLIC_FIREBASE_PROJECT_ID"],[23,56,13,13],[23,60,13,60],[23,74,13,74],[24,4,14,2,"storageBucket"],[24,17,14,15],[24,19,14,17,"_env2"],[24,24,14,17],[24,25,14,17,"env"],[24,28,14,17],[24,29,14,17,"EXPO_PUBLIC_FIREBASE_STORAGE_BUCKET"],[24,64,14,17],[24,68,14,68],[24,94,14,94],[25,4,15,2,"messagingSenderId"],[25,21,15,19],[25,23,15,21,"_env2"],[25,28,15,21],[25,29,15,21,"env"],[25,32,15,21],[25,33,15,21,"EXPO_PUBLIC_FIREBASE_MESSAGING_SENDER_ID"],[25,73,15,21],[25,77,15,77],[25,91,15,91],[26,4,16,2,"appId"],[26,9,16,7],[26,11,16,9,"_env2"],[26,16,16,9],[26,17,16,9,"env"],[26,20,16,9],[26,21,16,9,"EXPO_PUBLIC_FIREBASE_APP_ID"],[26,48,16,9],[26,52,16,52],[26,85,16,85],[27,4,17,2,"measurementId"],[27,17,17,15],[27,19,17,17,"_env2"],[27,24,17,17],[27,25,17,17,"env"],[27,28,17,17],[27,29,17,17,"EXPO_PUBLIC_FIREBASE_MEASUREMENT_ID"],[27,64,17,17],[27,68,17,68],[27,82,17,82],[28,4,18,2,"databaseURL"],[28,15,18,13],[28,17,18,15,"_env2"],[28,22,18,15],[28,23,18,15,"env"],[28,26,18,15],[28,27,18,15,"EXPO_PUBLIC_FIREBASE_DATABASE_URL"],[28,60,18,15],[28,64,18,64],[29,2,19,0],[29,3,19,1],[31,2,21,0],[32,0,22,0],[33,0,23,0],[34,0,24,0],[35,2,21,0],[35,6,25,6,"FirebaseService"],[35,21,25,21],[36,4,26,2],[36,13,26,2,"FirebaseService"],[36,29,26,2],[36,31,26,16],[37,6,26,16],[37,10,26,16,"_this"],[37,15,26,16],[38,6,26,16],[38,10,26,16,"_classCallCheck2"],[38,26,26,16],[38,27,26,16,"default"],[38,34,26,16],[38,42,26,16,"FirebaseService"],[38,57,26,16],[39,6,47,2],[40,0,48,0],[41,0,49,0],[42,6,47,2],[42,11,50,2,"auth"],[42,15,50,6],[42,18,50,9],[43,8,51,4],[44,0,52,0],[45,0,53,0],[46,0,54,0],[47,0,55,0],[48,8,56,4,"sendOTP"],[48,15,56,11],[49,10,56,11],[49,14,56,11,"_ref"],[49,18,56,11],[49,25,56,11,"_asyncToGenerator2"],[49,43,56,11],[49,44,56,11,"default"],[49,51,56,11],[49,53,56,13],[49,64,56,20,"phoneNumber"],[49,75,56,31],[49,77,56,36],[50,12,57,6],[50,16,57,10],[51,14,58,8],[52,14,59,8,"console"],[52,21,59,15],[52,22,59,16,"log"],[52,25,59,19],[52,26,59,20],[52,44,59,38,"phoneNumber"],[52,55,59,49],[52,57,59,51],[52,58,59,52],[54,14,61,8],[55,14,62,8],[55,20,62,14],[55,24,62,18,"Promise"],[55,31,62,25],[55,32,62,26,"resolve"],[55,39,62,33],[55,43,62,37,"setTimeout"],[55,53,62,47],[55,54,62,48,"resolve"],[55,61,62,55],[55,63,62,57],[55,67,62,61],[55,68,62,62],[55,69,62,63],[57,14,64,8],[58,14,65,8],[58,21,65,15],[58,45,65,39,"Date"],[58,49,65,43],[58,50,65,44,"now"],[58,53,65,47],[58,54,65,48],[58,55,65,49],[58,57,65,51],[59,12,66,6],[59,13,66,7],[59,14,66,8],[59,21,66,15,"error"],[59,26,66,20],[59,28,66,22],[60,14,67,8,"console"],[60,21,67,15],[60,22,67,16,"error"],[60,27,67,21],[60,28,67,22],[60,49,67,43],[60,51,67,45,"error"],[60,56,67,50],[60,57,67,51],[61,14,68,8],[61,20,68,14],[61,24,68,18,"Error"],[61,29,68,23],[61,30,68,24],[61,69,68,63],[61,70,68,64],[62,12,69,6],[63,10,70,4],[63,11,70,5],[64,10,70,5],[64,26,56,4,"sendOTP"],[64,33,56,11,"sendOTP"],[64,34,56,11,"_x"],[64,36,56,11],[65,12,56,11],[65,19,56,11,"_ref"],[65,23,56,11],[65,24,56,11,"apply"],[65,29,56,11],[65,36,56,11,"arguments"],[65,45,56,11],[66,10,56,11],[67,8,56,11],[67,11,70,5],[68,8,72,4],[69,0,73,0],[70,0,74,0],[71,0,75,0],[72,0,76,0],[73,0,77,0],[74,8,78,4,"verifyOTP"],[74,17,78,13],[75,10,78,13],[75,14,78,13,"_ref2"],[75,19,78,13],[75,26,78,13,"_asyncToGenerator2"],[75,44,78,13],[75,45,78,13,"default"],[75,52,78,13],[75,54,78,15],[75,65,78,22,"verificationId"],[75,79,78,36],[75,81,78,38,"otp"],[75,84,78,41],[75,86,78,46],[76,12,79,6],[76,16,79,10],[77,14,80,8,"console"],[77,21,80,15],[77,22,80,16,"log"],[77,25,80,19],[77,26,80,20],[77,43,80,37,"otp"],[77,46,80,40],[77,70,80,64,"verificationId"],[77,84,80,78],[77,86,80,80],[77,87,80,81],[79,14,82,8],[80,14,83,8],[80,20,83,14],[80,24,83,18,"Promise"],[80,31,83,25],[80,32,83,26,"resolve"],[80,39,83,33],[80,43,83,37,"setTimeout"],[80,53,83,47],[80,54,83,48,"resolve"],[80,61,83,55],[80,63,83,57],[80,67,83,61],[80,68,83,62],[80,69,83,63],[82,14,85,8],[83,14,86,8],[83,18,86,12,"otp"],[83,21,86,15],[83,22,86,16,"length"],[83,28,86,22],[83,33,86,27],[83,34,86,28],[83,36,86,30],[84,16,87,10],[84,22,87,16],[84,26,87,20,"Error"],[84,31,87,25],[84,32,87,26],[84,52,87,46],[84,53,87,47],[85,14,88,8],[87,14,90,8],[88,14,91,8],[88,18,91,14,"user"],[88,22,91,18],[88,25,91,21],[89,16,92,10,"uid"],[89,19,92,13],[89,21,92,15],[89,29,92,23,"Date"],[89,33,92,27],[89,34,92,28,"now"],[89,37,92,31],[89,38,92,32],[89,39,92,33],[89,41,92,35],[90,16,93,10,"phoneNumber"],[90,27,93,21],[90,29,93,23],[90,44,93,38],[91,16,93,40],[92,16,94,10,"displayName"],[92,27,94,21],[92,29,94,23],[92,31,94,25],[93,16,95,10,"email"],[93,21,95,15],[93,23,95,17],[93,27,95,21],[94,16,96,10,"isVerified"],[94,26,96,20],[94,28,96,22],[94,32,96,26],[95,16,97,10,"emergencyContacts"],[95,33,97,27],[95,35,97,29],[95,37,97,31],[96,16,98,10,"savedAddresses"],[96,30,98,24],[96,32,98,26],[96,34,98,28],[97,16,99,10,"createdAt"],[97,25,99,19],[97,27,99,21],[97,31,99,25,"Date"],[97,35,99,29],[97,36,99,30],[97,37,99,31],[98,16,100,10,"updatedAt"],[98,25,100,19],[98,27,100,21],[98,31,100,25,"Date"],[98,35,100,29],[98,36,100,30],[99,14,101,8],[99,15,101,9],[100,14,103,8,"_this"],[100,19,103,12],[100,20,103,13,"currentUser"],[100,31,103,24],[100,34,103,27,"user"],[100,38,103,31],[101,14,104,8],[101,21,104,15,"user"],[101,25,104,19],[102,12,105,6],[102,13,105,7],[102,14,105,8],[102,21,105,15,"error"],[102,26,105,20],[102,28,105,22],[103,14,106,8,"console"],[103,21,106,15],[103,22,106,16,"error"],[103,27,106,21],[103,28,106,22],[103,54,106,48],[103,56,106,50,"error"],[103,61,106,55],[103,62,106,56],[104,14,107,8],[104,20,107,14,"error"],[104,25,107,19],[105,12,108,6],[106,10,109,4],[106,11,109,5],[107,10,109,5],[107,26,78,4,"verifyOTP"],[107,35,78,13,"verifyOTP"],[107,36,78,13,"_x2"],[107,39,78,13],[107,41,78,13,"_x3"],[107,44,78,13],[108,12,78,13],[108,19,78,13,"_ref2"],[108,24,78,13],[108,25,78,13,"apply"],[108,30,78,13],[108,37,78,13,"arguments"],[108,46,78,13],[109,10,78,13],[110,8,78,13],[110,11,109,5],[111,8,111,4],[112,0,112,0],[113,0,113,0],[114,0,114,0],[115,8,115,4,"signOut"],[115,15,115,11],[116,10,115,11],[116,14,115,11,"_ref3"],[116,19,115,11],[116,26,115,11,"_asyncToGenerator2"],[116,44,115,11],[116,45,115,11,"default"],[116,52,115,11],[116,54,115,13],[116,67,115,25],[117,12,116,6],[117,16,116,10],[118,14,117,8,"console"],[118,21,117,15],[118,22,117,16,"log"],[118,25,117,19],[118,26,117,20],[118,44,117,38],[118,45,117,39],[119,14,118,8,"_this"],[119,19,118,12],[119,20,118,13,"currentUser"],[119,31,118,24],[119,34,118,27],[119,38,118,31],[121,14,120,8],[122,14,121,8,"_this"],[122,19,121,12],[122,20,121,13,"listeners"],[122,29,121,22],[122,30,121,23,"forEach"],[122,37,121,30],[122,38,121,31,"callback"],[122,46,121,39],[122,50,121,43,"callback"],[122,58,121,51],[122,59,121,52],[122,63,121,56],[122,64,121,57],[122,65,121,58],[123,12,122,6],[123,13,122,7],[123,14,122,8],[123,21,122,15,"error"],[123,26,122,20],[123,28,122,22],[124,14,123,8,"console"],[124,21,123,15],[124,22,123,16,"error"],[124,27,123,21],[124,28,123,22],[124,46,123,40],[124,48,123,42,"error"],[124,53,123,47],[124,54,123,48],[125,14,124,8],[125,20,124,14,"error"],[125,25,124,19],[126,12,125,6],[127,10,126,4],[127,11,126,5],[128,10,126,5],[128,26,115,4,"signOut"],[128,33,115,11,"signOut"],[128,34,115,11],[129,12,115,11],[129,19,115,11,"_ref3"],[129,24,115,11],[129,25,115,11,"apply"],[129,30,115,11],[129,37,115,11,"arguments"],[129,46,115,11],[130,10,115,11],[131,8,115,11],[131,11,126,5],[132,8,128,4],[133,0,129,0],[134,0,130,0],[135,0,131,0],[136,8,132,4,"getCurrentUser"],[136,22,132,18],[136,24,132,20,"getCurrentUser"],[136,25,132,20],[136,30,132,26],[137,10,133,6],[137,17,133,13],[137,21,133,17],[137,22,133,18,"currentUser"],[137,33,133,29],[138,8,134,4],[138,9,134,5],[139,8,136,4],[140,0,137,0],[141,0,138,0],[142,0,139,0],[143,0,140,0],[144,8,141,4,"onAuthStateChanged"],[144,26,141,22],[144,28,141,25,"callback"],[144,36,141,33],[144,40,141,38],[145,10,142,6],[145,14,142,12,"listenerId"],[145,24,142,22],[145,27,142,25,"Date"],[145,31,142,29],[145,32,142,30,"now"],[145,35,142,33],[145,36,142,34],[145,37,142,35],[145,38,142,36,"toString"],[145,46,142,44],[145,47,142,45],[145,48,142,46],[146,10,143,6],[146,14,143,10],[146,15,143,11,"listeners"],[146,24,143,20],[146,25,143,21,"set"],[146,28,143,24],[146,29,143,25,"listenerId"],[146,39,143,35],[146,41,143,37,"callback"],[146,49,143,45],[146,50,143,46],[148,10,145,6],[149,10,146,6,"callback"],[149,18,146,14],[149,19,146,15],[149,23,146,19],[149,24,146,20,"currentUser"],[149,35,146,31],[149,36,146,32],[151,10,148,6],[152,10,149,6],[152,17,149,13],[152,23,149,19],[153,12,150,8],[153,16,150,12],[153,17,150,13,"listeners"],[153,26,150,22],[153,27,150,23,"delete"],[153,33,150,29],[153,34,150,30,"listenerId"],[153,44,150,40],[153,45,150,41],[154,10,151,6],[154,11,151,7],[155,8,152,4],[155,9,152,5],[156,8,154,4],[157,0,155,0],[158,0,156,0],[159,0,157,0],[160,0,158,0],[161,8,159,4,"updateProfile"],[161,21,159,17],[162,10,159,17],[162,14,159,17,"_ref4"],[162,19,159,17],[162,26,159,17,"_asyncToGenerator2"],[162,44,159,17],[162,45,159,17,"default"],[162,52,159,17],[162,54,159,19],[162,65,159,26,"updates"],[162,72,159,33],[162,74,159,38],[163,12,160,6],[163,16,160,10],[164,14,161,8],[164,18,161,12],[164,19,161,13,"_this"],[164,24,161,17],[164,25,161,18,"currentUser"],[164,36,161,29],[164,38,161,31],[165,16,162,10],[165,22,162,16],[165,26,162,20,"Error"],[165,31,162,25],[165,32,162,26],[165,55,162,49],[165,56,162,50],[166,14,163,8],[168,14,165,8],[169,14,166,8,"_this"],[169,19,166,12],[169,20,166,13,"currentUser"],[169,31,166,24],[169,34,166,27],[170,16,167,10],[170,19,167,13,"_this"],[170,24,167,17],[170,25,167,18,"currentUser"],[170,36,167,29],[171,16,168,10],[171,19,168,13,"updates"],[171,26,168,20],[172,16,169,10,"updatedAt"],[172,25,169,19],[172,27,169,21],[172,31,169,25,"Date"],[172,35,169,29],[172,36,169,30],[173,14,170,8],[173,15,170,9],[175,14,172,8],[176,14,173,8,"_this"],[176,19,173,12],[176,20,173,13,"listeners"],[176,29,173,22],[176,30,173,23,"forEach"],[176,37,173,30],[176,38,173,31,"callback"],[176,46,173,39],[176,50,173,43,"callback"],[176,58,173,51],[176,59,173,52,"_this"],[176,64,173,56],[176,65,173,57,"currentUser"],[176,76,173,68],[176,77,173,69],[176,78,173,70],[177,14,175,8],[177,21,175,15,"_this"],[177,26,175,19],[177,27,175,20,"currentUser"],[177,38,175,31],[178,12,176,6],[178,13,176,7],[178,14,176,8],[178,21,176,15,"error"],[178,26,176,20],[178,28,176,22],[179,14,177,8,"console"],[179,21,177,15],[179,22,177,16,"error"],[179,27,177,21],[179,28,177,22],[179,52,177,46],[179,54,177,48,"error"],[179,59,177,53],[179,60,177,54],[180,14,178,8],[180,20,178,14,"error"],[180,25,178,19],[181,12,179,6],[182,10,180,4],[182,11,180,5],[183,10,180,5],[183,26,159,4,"updateProfile"],[183,39,159,17,"updateProfile"],[183,40,159,17,"_x4"],[183,43,159,17],[184,12,159,17],[184,19,159,17,"_ref4"],[184,24,159,17],[184,25,159,17,"apply"],[184,30,159,17],[184,37,159,17,"arguments"],[184,46,159,17],[185,10,159,17],[186,8,159,17],[187,6,181,2],[187,7,181,3],[188,6,183,2],[189,0,184,0],[190,0,185,0],[191,6,183,2],[191,11,186,2,"firestore"],[191,20,186,11],[191,23,186,14],[192,8,187,4],[193,0,188,0],[194,0,189,0],[195,0,190,0],[196,0,191,0],[197,8,192,4,"collection"],[197,18,192,14],[197,20,192,17,"collectionName"],[197,34,192,31],[197,39,192,37],[198,10,193,6],[199,0,194,0],[200,0,195,0],[201,0,196,0],[202,0,197,0],[203,10,198,6,"add"],[203,13,198,9],[204,12,198,9],[204,16,198,9,"_ref5"],[204,21,198,9],[204,28,198,9,"_asyncToGenerator2"],[204,46,198,9],[204,47,198,9,"default"],[204,54,198,9],[204,56,198,11],[204,67,198,18,"data"],[204,71,198,22],[204,73,198,27],[205,14,199,8],[205,18,199,14,"docId"],[205,23,199,19],[205,26,199,22],[205,29,199,25,"collectionName"],[205,43,199,39],[205,47,199,43,"Date"],[205,51,199,47],[205,52,199,48,"now"],[205,55,199,51],[205,56,199,52],[205,57,199,53],[205,59,199,55],[206,14,200,8,"console"],[206,21,200,15],[206,22,200,16,"log"],[206,25,200,19],[206,26,200,20],[206,48,200,42,"collectionName"],[206,62,200,56],[206,65,200,59],[206,67,200,61,"data"],[206,71,200,65],[206,72,200,66],[207,14,202,8],[207,21,202,15],[208,16,203,10,"id"],[208,18,203,12],[208,20,203,14,"docId"],[208,25,203,19],[209,16,204,10],[209,19,204,13,"data"],[209,23,204,17],[210,16,205,10,"createdAt"],[210,25,205,19],[210,27,205,21],[210,31,205,25,"Date"],[210,35,205,29],[210,36,205,30],[210,37,205,31],[211,16,206,10,"updatedAt"],[211,25,206,19],[211,27,206,21],[211,31,206,25,"Date"],[211,35,206,29],[211,36,206,30],[212,14,207,8],[212,15,207,9],[213,12,208,6],[213,13,208,7],[214,12,208,7],[214,28,198,6,"add"],[214,31,198,9,"add"],[214,32,198,9,"_x5"],[214,35,198,9],[215,14,198,9],[215,21,198,9,"_ref5"],[215,26,198,9],[215,27,198,9,"apply"],[215,32,198,9],[215,39,198,9,"arguments"],[215,48,198,9],[216,12,198,9],[217,10,198,9],[217,13,208,7],[218,10,210,6],[219,0,211,0],[220,0,212,0],[221,0,213,0],[222,0,214,0],[223,10,215,6,"doc"],[223,13,215,9],[223,15,215,12,"docId"],[223,20,215,17],[223,25,215,23],[224,12,216,8,"get"],[224,15,216,11],[225,14,216,11],[225,18,216,11,"_ref6"],[225,23,216,11],[225,30,216,11,"_asyncToGenerator2"],[225,48,216,11],[225,49,216,11,"default"],[225,56,216,11],[225,58,216,13],[225,71,216,25],[226,16,217,10,"console"],[226,23,217,17],[226,24,217,18,"log"],[226,27,217,21],[226,28,217,22],[226,48,217,42,"docId"],[226,53,217,47],[226,62,217,56,"collectionName"],[226,76,217,70],[226,78,217,72],[226,79,217,73],[227,16,218,10],[227,23,218,17],[228,18,219,12,"id"],[228,20,219,14],[228,22,219,16,"docId"],[228,27,219,21],[229,18,220,12,"exists"],[229,24,220,18],[229,26,220,20],[229,30,220,24],[230,18,221,12,"data"],[230,22,221,16],[230,24,221,18,"data"],[230,25,221,18],[230,31,221,25],[231,20,222,14,"id"],[231,22,222,16],[231,24,222,18,"docId"],[231,29,222,23],[232,20,223,14,"createdAt"],[232,29,223,23],[232,31,223,25],[232,35,223,29,"Date"],[232,39,223,33],[232,40,223,34],[232,41,223,35],[233,20,224,14,"updatedAt"],[233,29,224,23],[233,31,224,25],[233,35,224,29,"Date"],[233,39,224,33],[233,40,224,34],[234,18,225,12],[234,19,225,13],[235,16,226,10],[235,17,226,11],[236,14,227,8],[236,15,227,9],[237,14,227,9],[237,30,216,8,"get"],[237,33,216,11,"get"],[237,34,216,11],[238,16,216,11],[238,23,216,11,"_ref6"],[238,28,216,11],[238,29,216,11,"apply"],[238,34,216,11],[238,41,216,11,"arguments"],[238,50,216,11],[239,14,216,11],[240,12,216,11],[240,15,227,9],[241,12,229,8,"set"],[241,15,229,11],[242,14,229,11],[242,18,229,11,"_ref7"],[242,23,229,11],[242,30,229,11,"_asyncToGenerator2"],[242,48,229,11],[242,49,229,11,"default"],[242,56,229,11],[242,58,229,13],[242,69,229,20,"data"],[242,73,229,24],[242,75,229,29],[243,16,230,10,"console"],[243,23,230,17],[243,24,230,18,"log"],[243,27,230,21],[243,28,230,22],[243,48,230,42,"docId"],[243,53,230,47],[243,60,230,54,"collectionName"],[243,74,230,68],[243,77,230,71],[243,79,230,73,"data"],[243,83,230,77],[243,84,230,78],[244,16,231,10],[244,23,231,17],[245,18,232,12,"id"],[245,20,232,14],[245,22,232,16,"docId"],[245,27,232,21],[246,18,233,12],[246,21,233,15,"data"],[246,25,233,19],[247,18,234,12,"updatedAt"],[247,27,234,21],[247,29,234,23],[247,33,234,27,"Date"],[247,37,234,31],[247,38,234,32],[248,16,235,10],[248,17,235,11],[249,14,236,8],[249,15,236,9],[250,14,236,9],[250,30,229,8,"set"],[250,33,229,11,"set"],[250,34,229,11,"_x6"],[250,37,229,11],[251,16,229,11],[251,23,229,11,"_ref7"],[251,28,229,11],[251,29,229,11,"apply"],[251,34,229,11],[251,41,229,11,"arguments"],[251,50,229,11],[252,14,229,11],[253,12,229,11],[253,15,236,9],[254,12,238,8,"update"],[254,18,238,14],[255,14,238,14],[255,18,238,14,"_ref8"],[255,23,238,14],[255,30,238,14,"_asyncToGenerator2"],[255,48,238,14],[255,49,238,14,"default"],[255,56,238,14],[255,58,238,16],[255,69,238,23,"updates"],[255,76,238,30],[255,78,238,35],[256,16,239,10,"console"],[256,23,239,17],[256,24,239,18,"log"],[256,27,239,21],[256,28,239,22],[256,49,239,43,"docId"],[256,54,239,48],[256,61,239,55,"collectionName"],[256,75,239,69],[256,78,239,72],[256,80,239,74,"updates"],[256,87,239,81],[256,88,239,82],[257,16,240,10],[257,23,240,17],[258,18,241,12,"id"],[258,20,241,14],[258,22,241,16,"docId"],[258,27,241,21],[259,18,242,12],[259,21,242,15,"updates"],[259,28,242,22],[260,18,243,12,"updatedAt"],[260,27,243,21],[260,29,243,23],[260,33,243,27,"Date"],[260,37,243,31],[260,38,243,32],[261,16,244,10],[261,17,244,11],[262,14,245,8],[262,15,245,9],[263,14,245,9],[263,30,238,8,"update"],[263,36,238,14,"update"],[263,37,238,14,"_x7"],[263,40,238,14],[264,16,238,14],[264,23,238,14,"_ref8"],[264,28,238,14],[264,29,238,14,"apply"],[264,34,238,14],[264,41,238,14,"arguments"],[264,50,238,14],[265,14,238,14],[266,12,238,14],[267,10,246,6],[267,11,246,7],[267,12,246,8],[268,10,248,6],[269,0,249,0],[270,0,250,0],[271,0,251,0],[272,0,252,0],[273,0,253,0],[274,0,254,0],[275,10,255,6,"where"],[275,15,255,11],[275,17,255,13,"where"],[275,18,255,14,"field"],[275,23,255,19],[275,25,255,21,"operator"],[275,33,255,29],[275,35,255,31,"value"],[275,40,255,36],[275,46,255,42],[276,12,256,8,"get"],[276,15,256,11],[277,14,256,11],[277,18,256,11,"_ref9"],[277,23,256,11],[277,30,256,11,"_asyncToGenerator2"],[277,48,256,11],[277,49,256,11,"default"],[277,56,256,11],[277,58,256,13],[277,71,256,25],[278,16,257,10,"console"],[278,23,257,17],[278,24,257,18,"log"],[278,27,257,21],[278,28,257,22],[278,40,257,34,"collectionName"],[278,54,257,48],[278,64,257,58,"field"],[278,69,257,63],[278,73,257,67,"operator"],[278,81,257,75],[278,85,257,79,"value"],[278,90,257,84],[278,92,257,86],[278,93,257,87],[279,16,258,10],[279,23,258,17],[280,18,259,12,"docs"],[280,22,259,16],[280,24,259,18],[280,26,259,20],[281,18,260,12,"empty"],[281,23,260,17],[281,25,260,19],[281,29,260,23],[282,18,261,12,"size"],[282,22,261,16],[282,24,261,18],[283,16,262,10],[283,17,262,11],[284,14,263,8],[284,15,263,9],[285,14,263,9],[285,30,256,8,"get"],[285,33,256,11,"get"],[285,34,256,11],[286,16,256,11],[286,23,256,11,"_ref9"],[286,28,256,11],[286,29,256,11,"apply"],[286,34,256,11],[286,41,256,11,"arguments"],[286,50,256,11],[287,14,256,11],[288,12,256,11],[289,10,264,6],[289,11,264,7],[290,8,265,4],[290,9,265,5],[291,6,266,2],[291,7,266,3],[292,6,268,2],[293,0,269,0],[294,0,270,0],[295,6,268,2],[295,11,271,2,"database"],[295,19,271,10],[295,22,271,13],[296,8,272,4],[297,0,273,0],[298,0,274,0],[299,0,275,0],[300,0,276,0],[301,8,277,4,"ref"],[301,11,277,7],[301,13,277,10,"path"],[301,17,277,14],[301,22,277,20],[302,10,278,6],[303,0,279,0],[304,0,280,0],[305,0,281,0],[306,0,282,0],[307,10,283,6,"set"],[307,13,283,9],[308,12,283,9],[308,16,283,9,"_ref0"],[308,21,283,9],[308,28,283,9,"_asyncToGenerator2"],[308,46,283,9],[308,47,283,9,"default"],[308,54,283,9],[308,56,283,11],[308,67,283,18,"data"],[308,71,283,22],[308,73,283,27],[309,14,284,8,"console"],[309,21,284,15],[309,22,284,16,"log"],[309,25,284,19],[309,26,284,20],[309,45,284,39,"path"],[309,49,284,43],[309,52,284,46],[309,54,284,48,"data"],[309,58,284,52],[309,59,284,53],[310,14,285,8],[310,21,285,15,"Promise"],[310,28,285,22],[310,29,285,23,"resolve"],[310,36,285,30],[310,37,285,31],[310,38,285,32],[311,12,286,6],[311,13,286,7],[312,12,286,7],[312,28,283,6,"set"],[312,31,283,9,"set"],[312,32,283,9,"_x8"],[312,35,283,9],[313,14,283,9],[313,21,283,9,"_ref0"],[313,26,283,9],[313,27,283,9,"apply"],[313,32,283,9],[313,39,283,9,"arguments"],[313,48,283,9],[314,12,283,9],[315,10,283,9],[315,13,286,7],[316,10,288,6],[317,0,289,0],[318,0,290,0],[319,0,291,0],[320,0,292,0],[321,10,293,6,"update"],[321,16,293,12],[322,12,293,12],[322,16,293,12,"_ref1"],[322,21,293,12],[322,28,293,12,"_asyncToGenerator2"],[322,46,293,12],[322,47,293,12,"default"],[322,54,293,12],[322,56,293,14],[322,67,293,21,"updates"],[322,74,293,28],[322,76,293,33],[323,14,294,8,"console"],[323,21,294,15],[323,22,294,16,"log"],[323,25,294,19],[323,26,294,20],[323,46,294,40,"path"],[323,50,294,44],[323,53,294,47],[323,55,294,49,"updates"],[323,62,294,56],[323,63,294,57],[324,14,295,8],[324,21,295,15,"Promise"],[324,28,295,22],[324,29,295,23,"resolve"],[324,36,295,30],[324,37,295,31],[324,38,295,32],[325,12,296,6],[325,13,296,7],[326,12,296,7],[326,28,293,6,"update"],[326,34,293,12,"update"],[326,35,293,12,"_x9"],[326,38,293,12],[327,14,293,12],[327,21,293,12,"_ref1"],[327,26,293,12],[327,27,293,12,"apply"],[327,32,293,12],[327,39,293,12,"arguments"],[327,48,293,12],[328,12,293,12],[329,10,293,12],[329,13,296,7],[330,10,298,6],[331,0,299,0],[332,0,300,0],[333,0,301,0],[334,0,302,0],[335,10,303,6,"on"],[335,12,303,8],[335,14,303,10,"on"],[335,15,303,11,"eventType"],[335,24,303,20],[335,26,303,22,"callback"],[335,34,303,30],[335,39,303,35],[336,12,304,8,"console"],[336,19,304,15],[336,20,304,16,"log"],[336,23,304,19],[336,24,304,20],[336,41,304,37,"eventType"],[336,50,304,46],[336,57,304,53,"path"],[336,61,304,57],[336,63,304,59],[336,64,304,60],[338,12,306,8],[339,12,307,8],[339,16,307,12,"path"],[339,20,307,16],[339,21,307,17,"includes"],[339,29,307,25],[339,30,307,26],[339,39,307,35],[339,40,307,36],[339,42,307,38],[340,14,308,10],[341,14,309,10],[341,18,309,16,"interval"],[341,26,309,24],[341,29,309,27,"setInterval"],[341,40,309,38],[341,41,309,39],[341,47,309,45],[342,16,310,12,"callback"],[342,24,310,20],[342,25,310,21],[343,18,311,14,"val"],[343,21,311,17],[343,23,311,19,"val"],[343,24,311,19],[343,30,311,26],[344,20,312,16,"latitude"],[344,28,312,24],[344,30,312,26],[344,37,312,33],[344,40,312,36],[344,41,312,37,"Math"],[344,45,312,41],[344,46,312,42,"random"],[344,52,312,48],[344,53,312,49],[344,54,312,50],[344,57,312,53],[344,60,312,56],[344,64,312,60],[344,68,312,64],[345,20,313,16,"longitude"],[345,29,313,25],[345,31,313,27],[345,38,313,34],[345,41,313,37],[345,42,313,38,"Math"],[345,46,313,42],[345,47,313,43,"random"],[345,53,313,49],[345,54,313,50],[345,55,313,51],[345,58,313,54],[345,61,313,57],[345,65,313,61],[345,69,313,65],[346,20,314,16,"timestamp"],[346,29,314,25],[346,31,314,27,"Date"],[346,35,314,31],[346,36,314,32,"now"],[346,39,314,35],[346,40,314,36],[347,18,315,14],[347,19,315,15],[348,16,316,12],[348,17,316,13],[348,18,316,14],[349,14,317,10],[349,15,317,11],[349,17,317,13],[349,21,317,17],[349,22,317,18],[350,14,319,10],[350,21,319,17],[350,27,319,23,"clearInterval"],[350,40,319,36],[350,41,319,37,"interval"],[350,49,319,45],[350,50,319,46],[351,12,320,8],[353,12,322,8],[354,12,323,8],[354,19,323,15],[354,25,323,21,"console"],[354,32,323,28],[354,33,323,29,"log"],[354,36,323,32],[354,37,323,33],[354,58,323,54,"path"],[354,62,323,58],[354,64,323,60],[354,65,323,61],[355,10,324,6],[355,11,324,7],[356,10,326,6],[357,0,327,0],[358,0,328,0],[359,0,329,0],[360,0,330,0],[361,10,331,6,"off"],[361,13,331,9],[361,15,331,11,"off"],[361,16,331,12,"eventType"],[361,25,331,21],[361,27,331,23,"callback"],[361,35,331,31],[361,40,331,36],[362,12,332,8,"console"],[362,19,332,15],[362,20,332,16,"log"],[362,23,332,19],[362,24,332,20],[362,49,332,45,"eventType"],[362,58,332,54],[362,65,332,61,"path"],[362,69,332,65],[362,71,332,67],[362,72,332,68],[363,10,333,6],[364,8,334,4],[364,9,334,5],[365,6,335,2],[365,7,335,3],[366,6,337,2],[367,0,338,0],[368,0,339,0],[369,6,337,2],[369,11,340,2,"analytics"],[369,20,340,11],[369,23,340,14],[370,8,341,4],[371,0,342,0],[372,0,343,0],[373,0,344,0],[374,0,345,0],[375,8,346,4,"logEvent"],[375,16,346,12],[376,10,346,12],[376,14,346,12,"_ref10"],[376,20,346,12],[376,27,346,12,"_asyncToGenerator2"],[376,45,346,12],[376,46,346,12,"default"],[376,53,346,12],[376,55,346,14],[376,66,346,21,"eventName"],[376,75,346,30],[376,77,346,52],[377,12,346,52],[377,16,346,32,"parameters"],[377,26,346,42],[377,29,346,42,"arguments"],[377,38,346,42],[377,39,346,42,"length"],[377,45,346,42],[377,53,346,42,"arguments"],[377,62,346,42],[377,70,346,42,"undefined"],[377,79,346,42],[377,82,346,42,"arguments"],[377,91,346,42],[377,97,346,45],[377,98,346,46],[377,99,346,47],[378,12,347,6,"console"],[378,19,347,13],[378,20,347,14,"log"],[378,23,347,17],[378,24,347,18],[378,45,347,39,"eventName"],[378,54,347,48],[378,57,347,51],[378,59,347,53,"parameters"],[378,69,347,63],[378,70,347,64],[380,12,349,6],[381,12,350,6],[381,19,350,13,"Promise"],[381,26,350,20],[381,27,350,21,"resolve"],[381,34,350,28],[381,35,350,29],[381,36,350,30],[382,10,351,4],[382,11,351,5],[383,10,351,5],[383,26,346,4,"logEvent"],[383,34,346,12,"logEvent"],[383,35,346,12,"_x0"],[383,38,346,12],[384,12,346,12],[384,19,346,12,"_ref10"],[384,25,346,12],[384,26,346,12,"apply"],[384,31,346,12],[384,38,346,12,"arguments"],[384,47,346,12],[385,10,346,12],[386,8,346,12],[386,11,351,5],[387,8,353,4],[388,0,354,0],[389,0,355,0],[390,0,356,0],[391,8,357,4,"setUserProperties"],[391,25,357,21],[392,10,357,21],[392,14,357,21,"_ref11"],[392,20,357,21],[392,27,357,21,"_asyncToGenerator2"],[392,45,357,21],[392,46,357,21,"default"],[392,53,357,21],[392,55,357,23],[392,66,357,30,"properties"],[392,76,357,40],[392,78,357,45],[393,12,358,6,"console"],[393,19,358,13],[393,20,358,14,"log"],[393,23,358,17],[393,24,358,18],[393,50,358,44],[393,52,358,46,"properties"],[393,62,358,56],[393,63,358,57],[394,12,359,6],[394,19,359,13,"Promise"],[394,26,359,20],[394,27,359,21,"resolve"],[394,34,359,28],[394,35,359,29],[394,36,359,30],[395,10,360,4],[395,11,360,5],[396,10,360,5],[396,26,357,4,"setUserProperties"],[396,43,357,21,"setUserProperties"],[396,44,357,21,"_x1"],[396,47,357,21],[397,12,357,21],[397,19,357,21,"_ref11"],[397,25,357,21],[397,26,357,21,"apply"],[397,31,357,21],[397,38,357,21,"arguments"],[397,47,357,21],[398,10,357,21],[399,8,357,21],[399,11,360,5],[400,8,362,4],[401,0,363,0],[402,0,364,0],[403,0,365,0],[404,8,366,4,"setCurrentScreen"],[404,24,366,20],[405,10,366,20],[405,14,366,20,"_ref12"],[405,20,366,20],[405,27,366,20,"_asyncToGenerator2"],[405,45,366,20],[405,46,366,20,"default"],[405,53,366,20],[405,55,366,22],[405,66,366,29,"screenName"],[405,76,366,39],[405,78,366,44],[406,12,367,6,"console"],[406,19,367,13],[406,20,367,14,"log"],[406,23,367,17],[406,24,367,18],[406,43,367,37,"screenName"],[406,53,367,47],[406,55,367,49],[406,56,367,50],[407,12,368,6],[407,19,368,13,"Promise"],[407,26,368,20],[407,27,368,21,"resolve"],[407,34,368,28],[407,35,368,29],[407,36,368,30],[408,10,369,4],[408,11,369,5],[409,10,369,5],[409,26,366,4,"setCurrentScreen"],[409,42,366,20,"setCurrentScreen"],[409,43,366,20,"_x10"],[409,47,366,20],[410,12,366,20],[410,19,366,20,"_ref12"],[410,25,366,20],[410,26,366,20,"apply"],[410,31,366,20],[410,38,366,20,"arguments"],[410,47,366,20],[411,10,366,20],[412,8,366,20],[413,6,370,2],[413,7,370,3],[414,6,27,4],[414,10,27,8],[414,11,27,9,"initialized"],[414,22,27,20],[414,25,27,23],[414,30,27,28],[415,6,28,4],[415,10,28,8],[415,11,28,9,"currentUser"],[415,22,28,20],[415,25,28,23],[415,29,28,27],[416,6,29,4],[416,10,29,8],[416,11,29,9,"listeners"],[416,20,29,18],[416,23,29,21],[416,27,29,25,"Map"],[416,30,29,28],[416,31,29,29],[416,32,29,30],[417,4,30,2],[419,4,32,2],[420,0,33,0],[421,0,34,0],[422,4,32,2],[422,15,32,2,"_createClass2"],[422,28,32,2],[422,29,32,2,"default"],[422,36,32,2],[422,38,32,2,"FirebaseService"],[422,53,32,2],[423,6,32,2,"key"],[423,9,32,2],[424,6,32,2,"value"],[424,11,32,2],[425,8,32,2],[425,12,32,2,"_initialize"],[425,23,32,2],[425,30,32,2,"_asyncToGenerator2"],[425,48,32,2],[425,49,32,2,"default"],[425,56,32,2],[425,58,35,2],[425,71,35,21],[426,10,36,4],[426,14,36,8],[427,12,37,6],[428,12,38,6,"console"],[428,19,38,13],[428,20,38,14,"log"],[428,23,38,17],[428,24,38,18],[428,59,38,53],[428,61,38,55,"firebaseConfig"],[428,75,38,69],[428,76,38,70,"projectId"],[428,85,38,79],[428,86,38,80],[429,12,39,6],[429,16,39,10],[429,17,39,11,"initialized"],[429,28,39,22],[429,31,39,25],[429,35,39,29],[430,12,40,6],[430,19,40,13],[430,23,40,17],[431,10,41,4],[431,11,41,5],[431,12,41,6],[431,19,41,13,"error"],[431,24,41,18],[431,26,41,20],[432,12,42,6,"console"],[432,19,42,13],[432,20,42,14,"error"],[432,25,42,19],[432,26,42,20],[432,59,42,53],[432,61,42,55,"error"],[432,66,42,60],[432,67,42,61],[433,12,43,6],[433,18,43,12,"error"],[433,23,43,17],[434,10,44,4],[435,8,45,2],[435,9,45,3],[436,8,45,3],[436,17,35,8,"initialize"],[436,27,35,18,"initialize"],[436,28,35,18],[437,10,35,18],[437,17,35,18,"_initialize"],[437,28,35,18],[437,29,35,18,"apply"],[437,34,35,18],[437,41,35,18,"arguments"],[437,50,35,18],[438,8,35,18],[439,8,35,18],[439,15,35,8,"initialize"],[439,25,35,18],[440,6,35,18],[441,4,35,18],[442,2,35,18],[442,7,373,0],[443,2,374,7],[443,6,374,13,"firebase"],[443,14,374,21],[443,17,374,21,"exports"],[443,24,374,21],[443,25,374,21,"firebase"],[443,33,374,21],[443,36,374,24],[443,40,374,28,"FirebaseService"],[443,55,374,43],[443,56,374,44],[443,57,374,45],[445,2,376,0],[446,2,377,0,"firebase"],[446,10,377,8],[446,11,377,9,"initialize"],[446,21,377,19],[446,22,377,20],[446,23,377,21],[446,24,377,22,"catch"],[446,29,377,27],[446,30,377,28,"console"],[446,37,377,35],[446,38,377,36,"error"],[446,43,377,41],[446,44,377,42],[447,2,377,43],[447,6,377,43,"_default"],[447,14,377,43],[447,17,377,43,"exports"],[447,24,377,43],[447,25,377,43,"default"],[447,32,377,43],[447,35,379,15,"firebase"],[447,43,379,23],[448,0,379,23],[448,3]],"functionMap":{"names":["<global>","FirebaseService","FirebaseService#constructor","FirebaseService#initialize","FirebaseService#auth.sendOTP","Promise$argument_0","FirebaseService#auth.verifyOTP","FirebaseService#auth.signOut","listeners.forEach$argument_0","FirebaseService#auth.getCurrentUser","FirebaseService#auth.onAuthStateChanged","<anonymous>","FirebaseService#auth.updateProfile","FirebaseService#firestore.collection","add","doc","get","data","set","update","where","FirebaseService#database.ref","on","setInterval$argument_0","callback$argument_0.val","off","FirebaseService#analytics.logEvent","FirebaseService#analytics.setUserProperties","FirebaseService#analytics.setCurrentScreen"],"mappings":"AAA;ACwB;ECC;GDI;EEK;GFU;aGW;0BCM,oCD;KHQ;eKQ;0BDK,oCC;KL0B;aMM;+BCM,0BD;KNK;oBQM;KRE;wBSO;aCQ;ODE;KTC;mBWO;+BJc,sCI;KXO;gBYY;WCM;ODU;WEO;aCC;kBCK;cDI;SDE;aGE;SHO;gBIE;SJO;QFC;aOS;aJC;SIO;QPC;MZC;SoBY;WHM;OGG;cFO;OEG;UCO;uCCM;mBCE;gBDI;WDE;iBXE,6BW;eXI,8CW;ODC;WIO;OJE;MpBC;cyBY;KzBK;uB0BM;K1BG;sB2BM;K3BG;CDE"}},"type":"js/module"}]}