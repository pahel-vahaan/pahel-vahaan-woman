{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"]}},{"name":"./firebase/config","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":113},"end":{"line":5,"column":45,"index":158}}],"key":"t89SCEes/++BqQl/EtayLS81wB8=","exportNames":["*"]}},{"name":"../store/index","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":159},"end":{"line":6,"column":46,"index":205}}],"key":"ycShUPRFmHSYFCeYgmC0pBVzoR4=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = exports.authService = void 0;\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n  var _config = require(_dependencyMap[4], \"./firebase/config\");\n  var _index = require(_dependencyMap[5], \"../store/index\");\n  /**\n   * Authentication Service for SafeRide App\n   * Handles OTP-based authentication using Firebase Phone Auth\n   */\n  /**\n   * AuthService class provides authentication methods\n   */\n  var AuthService = /*#__PURE__*/function () {\n    function AuthService() {\n      (0, _classCallCheck2.default)(this, AuthService);\n      this.unsubscribeAuth = null;\n      this.init();\n    }\n\n    /**\n     * Initialize authentication service\n     */\n    return (0, _createClass2.default)(AuthService, [{\n      key: \"init\",\n      value: function init() {\n        // Listen for authentication state changes\n        this.unsubscribeAuth = _config.firebase.auth.onAuthStateChanged(user => {\n          var _useAuthStore$getStat = _index.useAuthStore.getState(),\n            setUser = _useAuthStore$getStat.setUser,\n            setLoading = _useAuthStore$getStat.setLoading;\n          setUser(user);\n          setLoading(false);\n        });\n      }\n\n      /**\n       * Send OTP to phone number\n       * @param {string} phoneNumber - Phone number with country code (+91xxxxxxxxxx)\n       * @returns {Promise<string>} Verification ID for OTP verification\n       */\n    }, {\n      key: \"sendOTP\",\n      value: (function () {\n        var _sendOTP = (0, _asyncToGenerator2.default)(function* (phoneNumber) {\n          var _useAuthStore$getStat2 = _index.useAuthStore.getState(),\n            setLoading = _useAuthStore$getStat2.setLoading,\n            setError = _useAuthStore$getStat2.setError,\n            setOtpVerificationId = _useAuthStore$getStat2.setOtpVerificationId;\n          try {\n            setLoading(true);\n            setError(null);\n\n            // Validate phone number format\n            if (!this.isValidPhoneNumber(phoneNumber)) {\n              throw new Error(\"Please enter a valid phone number\");\n            }\n\n            // Format phone number (ensure it starts with +91)\n            var formattedNumber = this.formatPhoneNumber(phoneNumber);\n\n            // Send OTP via Firebase\n            var verificationId = yield _config.firebase.auth.sendOTP(formattedNumber);\n\n            // Store verification ID in store\n            setOtpVerificationId(verificationId);\n\n            // Log analytics event\n            yield _config.firebase.analytics.logEvent(\"otp_sent\", {\n              phone_number_length: formattedNumber.length,\n              country_code: \"+91\"\n            });\n            return verificationId;\n          } catch (error) {\n            console.error(\"Send OTP error:\", error);\n            setError(error.message || \"Failed to send OTP\");\n            throw error;\n          } finally {\n            setLoading(false);\n          }\n        });\n        function sendOTP(_x) {\n          return _sendOTP.apply(this, arguments);\n        }\n        return sendOTP;\n      }()\n      /**\n       * Verify OTP and complete authentication\n       * @param {string} verificationId - Verification ID from sendOTP\n       * @param {string} otp - 6-digit OTP code\n       * @returns {Promise<Object>} Authenticated user object\n       */\n      )\n    }, {\n      key: \"verifyOTP\",\n      value: (function () {\n        var _verifyOTP = (0, _asyncToGenerator2.default)(function* (verificationId, otp) {\n          var _useAuthStore$getStat3 = _index.useAuthStore.getState(),\n            setLoading = _useAuthStore$getStat3.setLoading,\n            setError = _useAuthStore$getStat3.setError,\n            setUser = _useAuthStore$getStat3.setUser;\n          try {\n            setLoading(true);\n            setError(null);\n\n            // Validate OTP format\n            if (!this.isValidOTP(otp)) {\n              throw new Error(\"Please enter a valid 6-digit OTP\");\n            }\n\n            // Verify OTP with Firebase\n            var user = yield _config.firebase.auth.verifyOTP(verificationId, otp);\n\n            // Update user in store\n            setUser(user);\n\n            // Save user data to Firestore\n            yield this.saveUserToDatabase(user);\n\n            // Log analytics event\n            yield _config.firebase.analytics.logEvent(\"user_login\", {\n              method: \"phone\",\n              user_id: user.uid\n            });\n\n            // Set user properties for analytics\n            yield _config.firebase.analytics.setUserProperties({\n              user_id: user.uid,\n              phone_verified: true,\n              signup_method: \"phone\"\n            });\n            return user;\n          } catch (error) {\n            console.error(\"Verify OTP error:\", error);\n            setError(error.message || \"Invalid OTP. Please try again.\");\n            throw error;\n          } finally {\n            setLoading(false);\n          }\n        });\n        function verifyOTP(_x2, _x3) {\n          return _verifyOTP.apply(this, arguments);\n        }\n        return verifyOTP;\n      }()\n      /**\n       * Sign out current user\n       * @returns {Promise<void>}\n       */\n      )\n    }, {\n      key: \"signOut\",\n      value: (function () {\n        var _signOut = (0, _asyncToGenerator2.default)(function* () {\n          var _useAuthStore$getStat4 = _index.useAuthStore.getState(),\n            setLoading = _useAuthStore$getStat4.setLoading,\n            setError = _useAuthStore$getStat4.setError,\n            clearAuth = _useAuthStore$getStat4.clearAuth;\n          try {\n            setLoading(true);\n            setError(null);\n\n            // Sign out from Firebase\n            yield _config.firebase.auth.signOut();\n\n            // Clear authentication state\n            clearAuth();\n\n            // Log analytics event\n            yield _config.firebase.analytics.logEvent(\"user_logout\");\n          } catch (error) {\n            console.error(\"Sign out error:\", error);\n            setError(error.message || \"Failed to sign out\");\n            throw error;\n          } finally {\n            setLoading(false);\n          }\n        });\n        function signOut() {\n          return _signOut.apply(this, arguments);\n        }\n        return signOut;\n      }()\n      /**\n       * Update user profile information\n       * @param {Object} updates - Profile updates\n       * @returns {Promise<Object>} Updated user object\n       */\n      )\n    }, {\n      key: \"updateProfile\",\n      value: (function () {\n        var _updateProfile = (0, _asyncToGenerator2.default)(function* (updates) {\n          var _useAuthStore$getStat5 = _index.useAuthStore.getState(),\n            setLoading = _useAuthStore$getStat5.setLoading,\n            setError = _useAuthStore$getStat5.setError,\n            updateUser = _useAuthStore$getStat5.updateUser;\n          try {\n            setLoading(true);\n            setError(null);\n\n            // Update profile in Firebase Auth\n            var updatedUser = yield _config.firebase.auth.updateProfile(updates);\n\n            // Update user in Firestore\n            yield this.updateUserInDatabase(updatedUser.uid, updates);\n\n            // Update user in store\n            updateUser(updates);\n\n            // Log analytics event\n            yield _config.firebase.analytics.logEvent(\"profile_updated\", {\n              user_id: updatedUser.uid,\n              fields_updated: Object.keys(updates)\n            });\n            return updatedUser;\n          } catch (error) {\n            console.error(\"Update profile error:\", error);\n            setError(error.message || \"Failed to update profile\");\n            throw error;\n          } finally {\n            setLoading(false);\n          }\n        });\n        function updateProfile(_x4) {\n          return _updateProfile.apply(this, arguments);\n        }\n        return updateProfile;\n      }()\n      /**\n       * Add emergency contact for user\n       * @param {Object} contact - Emergency contact details\n       * @returns {Promise<Object>} Updated user object\n       */\n      )\n    }, {\n      key: \"addEmergencyContact\",\n      value: (function () {\n        var _addEmergencyContact = (0, _asyncToGenerator2.default)(function* (contact) {\n          var _useAuthStore$getStat6 = _index.useAuthStore.getState(),\n            user = _useAuthStore$getStat6.user,\n            updateUser = _useAuthStore$getStat6.updateUser;\n          try {\n            if (!user) {\n              throw new Error(\"User not authenticated\");\n            }\n            var newContact = {\n              id: `contact-${Date.now()}`,\n              ...contact,\n              createdAt: new Date()\n            };\n            var updatedContacts = [...(user.emergencyContacts || []), newContact];\n\n            // Update in database\n            yield this.updateUserInDatabase(user.uid, {\n              emergencyContacts: updatedContacts\n            });\n\n            // Update in store\n            updateUser({\n              emergencyContacts: updatedContacts\n            });\n\n            // Log analytics event\n            yield _config.firebase.analytics.logEvent(\"emergency_contact_added\", {\n              user_id: user.uid,\n              total_contacts: updatedContacts.length\n            });\n            return newContact;\n          } catch (error) {\n            console.error(\"Add emergency contact error:\", error);\n            throw error;\n          }\n        });\n        function addEmergencyContact(_x5) {\n          return _addEmergencyContact.apply(this, arguments);\n        }\n        return addEmergencyContact;\n      }()\n      /**\n       * Get current authenticated user\n       * @returns {Object|null} Current user or null\n       */\n      )\n    }, {\n      key: \"getCurrentUser\",\n      value: function getCurrentUser() {\n        return _config.firebase.auth.getCurrentUser();\n      }\n\n      /**\n       * Save user data to Firestore database\n       * @param {Object} user - User object to save\n       * @returns {Promise<void>}\n       */\n    }, {\n      key: \"saveUserToDatabase\",\n      value: (function () {\n        var _saveUserToDatabase = (0, _asyncToGenerator2.default)(function* (user) {\n          try {\n            yield _config.firebase.firestore.collection(\"users\").doc(user.uid).set({\n              uid: user.uid,\n              phoneNumber: user.phoneNumber,\n              displayName: user.displayName || \"\",\n              email: user.email || null,\n              isVerified: user.isVerified,\n              emergencyContacts: user.emergencyContacts || [],\n              savedAddresses: user.savedAddresses || [],\n              createdAt: user.createdAt,\n              updatedAt: user.updatedAt\n            });\n          } catch (error) {\n            console.error(\"Failed to save user to database:\", error);\n            // Don't throw error as auth should still succeed\n          }\n        });\n        function saveUserToDatabase(_x6) {\n          return _saveUserToDatabase.apply(this, arguments);\n        }\n        return saveUserToDatabase;\n      }()\n      /**\n       * Update user data in Firestore database\n       * @param {string} userId - User ID\n       * @param {Object} updates - Updates to apply\n       * @returns {Promise<void>}\n       */\n      )\n    }, {\n      key: \"updateUserInDatabase\",\n      value: (function () {\n        var _updateUserInDatabase = (0, _asyncToGenerator2.default)(function* (userId, updates) {\n          try {\n            yield _config.firebase.firestore.collection(\"users\").doc(userId).update({\n              ...updates,\n              updatedAt: new Date()\n            });\n          } catch (error) {\n            console.error(\"Failed to update user in database:\", error);\n            throw error;\n          }\n        });\n        function updateUserInDatabase(_x7, _x8) {\n          return _updateUserInDatabase.apply(this, arguments);\n        }\n        return updateUserInDatabase;\n      }()\n      /**\n       * Validate phone number format\n       * @param {string} phoneNumber - Phone number to validate\n       * @returns {boolean} True if valid\n       */\n      )\n    }, {\n      key: \"isValidPhoneNumber\",\n      value: function isValidPhoneNumber(phoneNumber) {\n        // Indian phone number validation (10 digits after +91)\n        var phoneRegex = /^(\\+91|91)?[6-9]\\d{9}$/;\n        return phoneRegex.test(phoneNumber.replace(/\\s+/g, \"\"));\n      }\n\n      /**\n       * Format phone number to international format\n       * @param {string} phoneNumber - Phone number to format\n       * @returns {string} Formatted phone number\n       */\n    }, {\n      key: \"formatPhoneNumber\",\n      value: function formatPhoneNumber(phoneNumber) {\n        // Remove all spaces and special characters\n        var cleaned = phoneNumber.replace(/\\s+/g, \"\").replace(/[^0-9+]/g, \"\");\n\n        // Add +91 if not present\n        if (!cleaned.startsWith(\"+91\")) {\n          if (cleaned.startsWith(\"91\")) {\n            cleaned = \"+\" + cleaned;\n          } else if (cleaned.startsWith(\"+\")) {\n            // Already has + but not 91\n            cleaned = \"+91\" + cleaned.substring(1);\n          } else {\n            // No country code\n            cleaned = \"+91\" + cleaned;\n          }\n        }\n        return cleaned;\n      }\n\n      /**\n       * Validate OTP format\n       * @param {string} otp - OTP to validate\n       * @returns {boolean} True if valid\n       */\n    }, {\n      key: \"isValidOTP\",\n      value: function isValidOTP(otp) {\n        // OTP should be exactly 6 digits\n        var otpRegex = /^\\d{6}$/;\n        return otpRegex.test(otp);\n      }\n\n      /**\n       * Resend OTP (with rate limiting)\n       * @param {string} phoneNumber - Phone number to resend OTP\n       * @returns {Promise<string>} New verification ID\n       */\n    }, {\n      key: \"resendOTP\",\n      value: (function () {\n        var _resendOTP = (0, _asyncToGenerator2.default)(function* (phoneNumber) {\n          // Add 30-second rate limiting\n          var lastOTPTime = localStorage.getItem(\"lastOTPTime\");\n          var now = Date.now();\n          if (lastOTPTime && now - parseInt(lastOTPTime) < 30000) {\n            var remainingTime = Math.ceil((30000 - (now - parseInt(lastOTPTime))) / 1000);\n            throw new Error(`Please wait ${remainingTime} seconds before resending OTP`);\n          }\n\n          // Store current time\n          localStorage.setItem(\"lastOTPTime\", now.toString());\n\n          // Send new OTP\n          return this.sendOTP(phoneNumber);\n        });\n        function resendOTP(_x9) {\n          return _resendOTP.apply(this, arguments);\n        }\n        return resendOTP;\n      }()\n      /**\n       * Cleanup authentication service\n       */\n      )\n    }, {\n      key: \"cleanup\",\n      value: function cleanup() {\n        if (this.unsubscribeAuth) {\n          this.unsubscribeAuth();\n          this.unsubscribeAuth = null;\n        }\n      }\n    }]);\n  }(); // Create and export auth service instance\n  var authService = exports.authService = new AuthService();\n  var _default = exports.default = authService;\n});","lineCount":450,"map":[[10,2,5,0],[10,6,5,0,"_config"],[10,13,5,0],[10,16,5,0,"require"],[10,23,5,0],[10,24,5,0,"_dependencyMap"],[10,38,5,0],[11,2,6,0],[11,6,6,0,"_index"],[11,12,6,0],[11,15,6,0,"require"],[11,22,6,0],[11,23,6,0,"_dependencyMap"],[11,37,6,0],[12,2,1,0],[13,0,2,0],[14,0,3,0],[15,0,4,0],[16,2,8,0],[17,0,9,0],[18,0,10,0],[19,2,8,0],[19,6,11,6,"AuthService"],[19,17,11,17],[20,4,12,2],[20,13,12,2,"AuthService"],[20,25,12,2],[20,27,12,16],[21,6,12,16],[21,10,12,16,"_classCallCheck2"],[21,26,12,16],[21,27,12,16,"default"],[21,34,12,16],[21,42,12,16,"AuthService"],[21,53,12,16],[22,6,13,4],[22,10,13,8],[22,11,13,9,"unsubscribeAuth"],[22,26,13,24],[22,29,13,27],[22,33,13,31],[23,6,14,4],[23,10,14,8],[23,11,14,9,"init"],[23,15,14,13],[23,16,14,14],[23,17,14,15],[24,4,15,2],[26,4,17,2],[27,0,18,0],[28,0,19,0],[29,4,17,2],[29,15,17,2,"_createClass2"],[29,28,17,2],[29,29,17,2,"default"],[29,36,17,2],[29,38,17,2,"AuthService"],[29,49,17,2],[30,6,17,2,"key"],[30,9,17,2],[31,6,17,2,"value"],[31,11,17,2],[31,13,20,2],[31,22,20,2,"init"],[31,26,20,6,"init"],[31,27,20,6],[31,29,20,9],[32,8,21,4],[33,8,22,4],[33,12,22,8],[33,13,22,9,"unsubscribeAuth"],[33,28,22,24],[33,31,22,27,"firebase"],[33,47,22,35],[33,48,22,36,"auth"],[33,52,22,40],[33,53,22,41,"onAuthStateChanged"],[33,71,22,59],[33,72,22,61,"user"],[33,76,22,65],[33,80,22,70],[34,10,23,6],[34,14,23,6,"_useAuthStore$getStat"],[34,35,23,6],[34,38,23,38,"useAuthStore"],[34,57,23,50],[34,58,23,51,"getState"],[34,66,23,59],[34,67,23,60],[34,68,23,61],[35,12,23,14,"setUser"],[35,19,23,21],[35,22,23,21,"_useAuthStore$getStat"],[35,43,23,21],[35,44,23,14,"setUser"],[35,51,23,21],[36,12,23,23,"setLoading"],[36,22,23,33],[36,25,23,33,"_useAuthStore$getStat"],[36,46,23,33],[36,47,23,23,"setLoading"],[36,57,23,33],[37,10,24,6,"setUser"],[37,17,24,13],[37,18,24,14,"user"],[37,22,24,18],[37,23,24,19],[38,10,25,6,"setLoading"],[38,20,25,16],[38,21,25,17],[38,26,25,22],[38,27,25,23],[39,8,26,4],[39,9,26,5],[39,10,26,6],[40,6,27,2],[42,6,29,2],[43,0,30,0],[44,0,31,0],[45,0,32,0],[46,0,33,0],[47,4,29,2],[48,6,29,2,"key"],[48,9,29,2],[49,6,29,2,"value"],[49,11,29,2],[50,8,29,2],[50,12,29,2,"_sendOTP"],[50,20,29,2],[50,27,29,2,"_asyncToGenerator2"],[50,45,29,2],[50,46,29,2,"default"],[50,53,29,2],[50,55,34,2],[50,66,34,16,"phoneNumber"],[50,77,34,27],[50,79,34,29],[51,10,35,4],[51,14,35,4,"_useAuthStore$getStat2"],[51,36,35,4],[51,39,36,6,"useAuthStore"],[51,58,36,18],[51,59,36,19,"getState"],[51,67,36,27],[51,68,36,28],[51,69,36,29],[52,12,35,12,"setLoading"],[52,22,35,22],[52,25,35,22,"_useAuthStore$getStat2"],[52,47,35,22],[52,48,35,12,"setLoading"],[52,58,35,22],[53,12,35,24,"setError"],[53,20,35,32],[53,23,35,32,"_useAuthStore$getStat2"],[53,45,35,32],[53,46,35,24,"setError"],[53,54,35,32],[54,12,35,34,"setOtpVerificationId"],[54,32,35,54],[54,35,35,54,"_useAuthStore$getStat2"],[54,57,35,54],[54,58,35,34,"setOtpVerificationId"],[54,78,35,54],[55,10,38,4],[55,14,38,8],[56,12,39,6,"setLoading"],[56,22,39,16],[56,23,39,17],[56,27,39,21],[56,28,39,22],[57,12,40,6,"setError"],[57,20,40,14],[57,21,40,15],[57,25,40,19],[57,26,40,20],[59,12,42,6],[60,12,43,6],[60,16,43,10],[60,17,43,11],[60,21,43,15],[60,22,43,16,"isValidPhoneNumber"],[60,40,43,34],[60,41,43,35,"phoneNumber"],[60,52,43,46],[60,53,43,47],[60,55,43,49],[61,14,44,8],[61,20,44,14],[61,24,44,18,"Error"],[61,29,44,23],[61,30,44,24],[61,65,44,59],[61,66,44,60],[62,12,45,6],[64,12,47,6],[65,12,48,6],[65,16,48,12,"formattedNumber"],[65,31,48,27],[65,34,48,30],[65,38,48,34],[65,39,48,35,"formatPhoneNumber"],[65,56,48,52],[65,57,48,53,"phoneNumber"],[65,68,48,64],[65,69,48,65],[67,12,50,6],[68,12,51,6],[68,16,51,12,"verificationId"],[68,30,51,26],[68,39,51,35,"firebase"],[68,55,51,43],[68,56,51,44,"auth"],[68,60,51,48],[68,61,51,49,"sendOTP"],[68,68,51,56],[68,69,51,57,"formattedNumber"],[68,84,51,72],[68,85,51,73],[70,12,53,6],[71,12,54,6,"setOtpVerificationId"],[71,32,54,26],[71,33,54,27,"verificationId"],[71,47,54,41],[71,48,54,42],[73,12,56,6],[74,12,57,6],[74,18,57,12,"firebase"],[74,34,57,20],[74,35,57,21,"analytics"],[74,44,57,30],[74,45,57,31,"logEvent"],[74,53,57,39],[74,54,57,40],[74,64,57,50],[74,66,57,52],[75,14,58,8,"phone_number_length"],[75,33,58,27],[75,35,58,29,"formattedNumber"],[75,50,58,44],[75,51,58,45,"length"],[75,57,58,51],[76,14,59,8,"country_code"],[76,26,59,20],[76,28,59,22],[77,12,60,6],[77,13,60,7],[77,14,60,8],[78,12,62,6],[78,19,62,13,"verificationId"],[78,33,62,27],[79,10,63,4],[79,11,63,5],[79,12,63,6],[79,19,63,13,"error"],[79,24,63,18],[79,26,63,20],[80,12,64,6,"console"],[80,19,64,13],[80,20,64,14,"error"],[80,25,64,19],[80,26,64,20],[80,43,64,37],[80,45,64,39,"error"],[80,50,64,44],[80,51,64,45],[81,12,65,6,"setError"],[81,20,65,14],[81,21,65,15,"error"],[81,26,65,20],[81,27,65,21,"message"],[81,34,65,28],[81,38,65,32],[81,58,65,52],[81,59,65,53],[82,12,66,6],[82,18,66,12,"error"],[82,23,66,17],[83,10,67,4],[83,11,67,5],[83,20,67,14],[84,12,68,6,"setLoading"],[84,22,68,16],[84,23,68,17],[84,28,68,22],[84,29,68,23],[85,10,69,4],[86,8,70,2],[86,9,70,3],[87,8,70,3],[87,17,34,8,"sendOTP"],[87,24,34,15,"sendOTP"],[87,25,34,15,"_x"],[87,27,34,15],[88,10,34,15],[88,17,34,15,"_sendOTP"],[88,25,34,15],[88,26,34,15,"apply"],[88,31,34,15],[88,38,34,15,"arguments"],[88,47,34,15],[89,8,34,15],[90,8,34,15],[90,15,34,8,"sendOTP"],[90,22,34,15],[91,6,34,15],[92,6,72,2],[93,0,73,0],[94,0,74,0],[95,0,75,0],[96,0,76,0],[97,0,77,0],[98,6,72,2],[99,4,72,2],[100,6,72,2,"key"],[100,9,72,2],[101,6,72,2,"value"],[101,11,72,2],[102,8,72,2],[102,12,72,2,"_verifyOTP"],[102,22,72,2],[102,29,72,2,"_asyncToGenerator2"],[102,47,72,2],[102,48,72,2,"default"],[102,55,72,2],[102,57,78,2],[102,68,78,18,"verificationId"],[102,82,78,32],[102,84,78,34,"otp"],[102,87,78,37],[102,89,78,39],[103,10,79,4],[103,14,79,4,"_useAuthStore$getStat3"],[103,36,79,4],[103,39,79,46,"useAuthStore"],[103,58,79,58],[103,59,79,59,"getState"],[103,67,79,67],[103,68,79,68],[103,69,79,69],[104,12,79,12,"setLoading"],[104,22,79,22],[104,25,79,22,"_useAuthStore$getStat3"],[104,47,79,22],[104,48,79,12,"setLoading"],[104,58,79,22],[105,12,79,24,"setError"],[105,20,79,32],[105,23,79,32,"_useAuthStore$getStat3"],[105,45,79,32],[105,46,79,24,"setError"],[105,54,79,32],[106,12,79,34,"setUser"],[106,19,79,41],[106,22,79,41,"_useAuthStore$getStat3"],[106,44,79,41],[106,45,79,34,"setUser"],[106,52,79,41],[107,10,81,4],[107,14,81,8],[108,12,82,6,"setLoading"],[108,22,82,16],[108,23,82,17],[108,27,82,21],[108,28,82,22],[109,12,83,6,"setError"],[109,20,83,14],[109,21,83,15],[109,25,83,19],[109,26,83,20],[111,12,85,6],[112,12,86,6],[112,16,86,10],[112,17,86,11],[112,21,86,15],[112,22,86,16,"isValidOTP"],[112,32,86,26],[112,33,86,27,"otp"],[112,36,86,30],[112,37,86,31],[112,39,86,33],[113,14,87,8],[113,20,87,14],[113,24,87,18,"Error"],[113,29,87,23],[113,30,87,24],[113,64,87,58],[113,65,87,59],[114,12,88,6],[116,12,90,6],[117,12,91,6],[117,16,91,12,"user"],[117,20,91,16],[117,29,91,25,"firebase"],[117,45,91,33],[117,46,91,34,"auth"],[117,50,91,38],[117,51,91,39,"verifyOTP"],[117,60,91,48],[117,61,91,49,"verificationId"],[117,75,91,63],[117,77,91,65,"otp"],[117,80,91,68],[117,81,91,69],[119,12,93,6],[120,12,94,6,"setUser"],[120,19,94,13],[120,20,94,14,"user"],[120,24,94,18],[120,25,94,19],[122,12,96,6],[123,12,97,6],[123,18,97,12],[123,22,97,16],[123,23,97,17,"saveUserToDatabase"],[123,41,97,35],[123,42,97,36,"user"],[123,46,97,40],[123,47,97,41],[125,12,99,6],[126,12,100,6],[126,18,100,12,"firebase"],[126,34,100,20],[126,35,100,21,"analytics"],[126,44,100,30],[126,45,100,31,"logEvent"],[126,53,100,39],[126,54,100,40],[126,66,100,52],[126,68,100,54],[127,14,101,8,"method"],[127,20,101,14],[127,22,101,16],[127,29,101,23],[128,14,102,8,"user_id"],[128,21,102,15],[128,23,102,17,"user"],[128,27,102,21],[128,28,102,22,"uid"],[129,12,103,6],[129,13,103,7],[129,14,103,8],[131,12,105,6],[132,12,106,6],[132,18,106,12,"firebase"],[132,34,106,20],[132,35,106,21,"analytics"],[132,44,106,30],[132,45,106,31,"setUserProperties"],[132,62,106,48],[132,63,106,49],[133,14,107,8,"user_id"],[133,21,107,15],[133,23,107,17,"user"],[133,27,107,21],[133,28,107,22,"uid"],[133,31,107,25],[134,14,108,8,"phone_verified"],[134,28,108,22],[134,30,108,24],[134,34,108,28],[135,14,109,8,"signup_method"],[135,27,109,21],[135,29,109,23],[136,12,110,6],[136,13,110,7],[136,14,110,8],[137,12,112,6],[137,19,112,13,"user"],[137,23,112,17],[138,10,113,4],[138,11,113,5],[138,12,113,6],[138,19,113,13,"error"],[138,24,113,18],[138,26,113,20],[139,12,114,6,"console"],[139,19,114,13],[139,20,114,14,"error"],[139,25,114,19],[139,26,114,20],[139,45,114,39],[139,47,114,41,"error"],[139,52,114,46],[139,53,114,47],[140,12,115,6,"setError"],[140,20,115,14],[140,21,115,15,"error"],[140,26,115,20],[140,27,115,21,"message"],[140,34,115,28],[140,38,115,32],[140,70,115,64],[140,71,115,65],[141,12,116,6],[141,18,116,12,"error"],[141,23,116,17],[142,10,117,4],[142,11,117,5],[142,20,117,14],[143,12,118,6,"setLoading"],[143,22,118,16],[143,23,118,17],[143,28,118,22],[143,29,118,23],[144,10,119,4],[145,8,120,2],[145,9,120,3],[146,8,120,3],[146,17,78,8,"verifyOTP"],[146,26,78,17,"verifyOTP"],[146,27,78,17,"_x2"],[146,30,78,17],[146,32,78,17,"_x3"],[146,35,78,17],[147,10,78,17],[147,17,78,17,"_verifyOTP"],[147,27,78,17],[147,28,78,17,"apply"],[147,33,78,17],[147,40,78,17,"arguments"],[147,49,78,17],[148,8,78,17],[149,8,78,17],[149,15,78,8,"verifyOTP"],[149,24,78,17],[150,6,78,17],[151,6,122,2],[152,0,123,0],[153,0,124,0],[154,0,125,0],[155,6,122,2],[156,4,122,2],[157,6,122,2,"key"],[157,9,122,2],[158,6,122,2,"value"],[158,11,122,2],[159,8,122,2],[159,12,122,2,"_signOut"],[159,20,122,2],[159,27,122,2,"_asyncToGenerator2"],[159,45,122,2],[159,46,122,2,"default"],[159,53,122,2],[159,55,126,2],[159,68,126,18],[160,10,127,4],[160,14,127,4,"_useAuthStore$getStat4"],[160,36,127,4],[160,39,127,48,"useAuthStore"],[160,58,127,60],[160,59,127,61,"getState"],[160,67,127,69],[160,68,127,70],[160,69,127,71],[161,12,127,12,"setLoading"],[161,22,127,22],[161,25,127,22,"_useAuthStore$getStat4"],[161,47,127,22],[161,48,127,12,"setLoading"],[161,58,127,22],[162,12,127,24,"setError"],[162,20,127,32],[162,23,127,32,"_useAuthStore$getStat4"],[162,45,127,32],[162,46,127,24,"setError"],[162,54,127,32],[163,12,127,34,"clearAuth"],[163,21,127,43],[163,24,127,43,"_useAuthStore$getStat4"],[163,46,127,43],[163,47,127,34,"clearAuth"],[163,56,127,43],[164,10,129,4],[164,14,129,8],[165,12,130,6,"setLoading"],[165,22,130,16],[165,23,130,17],[165,27,130,21],[165,28,130,22],[166,12,131,6,"setError"],[166,20,131,14],[166,21,131,15],[166,25,131,19],[166,26,131,20],[168,12,133,6],[169,12,134,6],[169,18,134,12,"firebase"],[169,34,134,20],[169,35,134,21,"auth"],[169,39,134,25],[169,40,134,26,"signOut"],[169,47,134,33],[169,48,134,34],[169,49,134,35],[171,12,136,6],[172,12,137,6,"clearAuth"],[172,21,137,15],[172,22,137,16],[172,23,137,17],[174,12,139,6],[175,12,140,6],[175,18,140,12,"firebase"],[175,34,140,20],[175,35,140,21,"analytics"],[175,44,140,30],[175,45,140,31,"logEvent"],[175,53,140,39],[175,54,140,40],[175,67,140,53],[175,68,140,54],[176,10,141,4],[176,11,141,5],[176,12,141,6],[176,19,141,13,"error"],[176,24,141,18],[176,26,141,20],[177,12,142,6,"console"],[177,19,142,13],[177,20,142,14,"error"],[177,25,142,19],[177,26,142,20],[177,43,142,37],[177,45,142,39,"error"],[177,50,142,44],[177,51,142,45],[178,12,143,6,"setError"],[178,20,143,14],[178,21,143,15,"error"],[178,26,143,20],[178,27,143,21,"message"],[178,34,143,28],[178,38,143,32],[178,58,143,52],[178,59,143,53],[179,12,144,6],[179,18,144,12,"error"],[179,23,144,17],[180,10,145,4],[180,11,145,5],[180,20,145,14],[181,12,146,6,"setLoading"],[181,22,146,16],[181,23,146,17],[181,28,146,22],[181,29,146,23],[182,10,147,4],[183,8,148,2],[183,9,148,3],[184,8,148,3],[184,17,126,8,"signOut"],[184,24,126,15,"signOut"],[184,25,126,15],[185,10,126,15],[185,17,126,15,"_signOut"],[185,25,126,15],[185,26,126,15,"apply"],[185,31,126,15],[185,38,126,15,"arguments"],[185,47,126,15],[186,8,126,15],[187,8,126,15],[187,15,126,8,"signOut"],[187,22,126,15],[188,6,126,15],[189,6,150,2],[190,0,151,0],[191,0,152,0],[192,0,153,0],[193,0,154,0],[194,6,150,2],[195,4,150,2],[196,6,150,2,"key"],[196,9,150,2],[197,6,150,2,"value"],[197,11,150,2],[198,8,150,2],[198,12,150,2,"_updateProfile"],[198,26,150,2],[198,33,150,2,"_asyncToGenerator2"],[198,51,150,2],[198,52,150,2,"default"],[198,59,150,2],[198,61,155,2],[198,72,155,22,"updates"],[198,79,155,29],[198,81,155,31],[199,10,156,4],[199,14,156,4,"_useAuthStore$getStat5"],[199,36,156,4],[199,39,156,49,"useAuthStore"],[199,58,156,61],[199,59,156,62,"getState"],[199,67,156,70],[199,68,156,71],[199,69,156,72],[200,12,156,12,"setLoading"],[200,22,156,22],[200,25,156,22,"_useAuthStore$getStat5"],[200,47,156,22],[200,48,156,12,"setLoading"],[200,58,156,22],[201,12,156,24,"setError"],[201,20,156,32],[201,23,156,32,"_useAuthStore$getStat5"],[201,45,156,32],[201,46,156,24,"setError"],[201,54,156,32],[202,12,156,34,"updateUser"],[202,22,156,44],[202,25,156,44,"_useAuthStore$getStat5"],[202,47,156,44],[202,48,156,34,"updateUser"],[202,58,156,44],[203,10,158,4],[203,14,158,8],[204,12,159,6,"setLoading"],[204,22,159,16],[204,23,159,17],[204,27,159,21],[204,28,159,22],[205,12,160,6,"setError"],[205,20,160,14],[205,21,160,15],[205,25,160,19],[205,26,160,20],[207,12,162,6],[208,12,163,6],[208,16,163,12,"updatedUser"],[208,27,163,23],[208,36,163,32,"firebase"],[208,52,163,40],[208,53,163,41,"auth"],[208,57,163,45],[208,58,163,46,"updateProfile"],[208,71,163,59],[208,72,163,60,"updates"],[208,79,163,67],[208,80,163,68],[210,12,165,6],[211,12,166,6],[211,18,166,12],[211,22,166,16],[211,23,166,17,"updateUserInDatabase"],[211,43,166,37],[211,44,166,38,"updatedUser"],[211,55,166,49],[211,56,166,50,"uid"],[211,59,166,53],[211,61,166,55,"updates"],[211,68,166,62],[211,69,166,63],[213,12,168,6],[214,12,169,6,"updateUser"],[214,22,169,16],[214,23,169,17,"updates"],[214,30,169,24],[214,31,169,25],[216,12,171,6],[217,12,172,6],[217,18,172,12,"firebase"],[217,34,172,20],[217,35,172,21,"analytics"],[217,44,172,30],[217,45,172,31,"logEvent"],[217,53,172,39],[217,54,172,40],[217,71,172,57],[217,73,172,59],[218,14,173,8,"user_id"],[218,21,173,15],[218,23,173,17,"updatedUser"],[218,34,173,28],[218,35,173,29,"uid"],[218,38,173,32],[219,14,174,8,"fields_updated"],[219,28,174,22],[219,30,174,24,"Object"],[219,36,174,30],[219,37,174,31,"keys"],[219,41,174,35],[219,42,174,36,"updates"],[219,49,174,43],[220,12,175,6],[220,13,175,7],[220,14,175,8],[221,12,177,6],[221,19,177,13,"updatedUser"],[221,30,177,24],[222,10,178,4],[222,11,178,5],[222,12,178,6],[222,19,178,13,"error"],[222,24,178,18],[222,26,178,20],[223,12,179,6,"console"],[223,19,179,13],[223,20,179,14,"error"],[223,25,179,19],[223,26,179,20],[223,49,179,43],[223,51,179,45,"error"],[223,56,179,50],[223,57,179,51],[224,12,180,6,"setError"],[224,20,180,14],[224,21,180,15,"error"],[224,26,180,20],[224,27,180,21,"message"],[224,34,180,28],[224,38,180,32],[224,64,180,58],[224,65,180,59],[225,12,181,6],[225,18,181,12,"error"],[225,23,181,17],[226,10,182,4],[226,11,182,5],[226,20,182,14],[227,12,183,6,"setLoading"],[227,22,183,16],[227,23,183,17],[227,28,183,22],[227,29,183,23],[228,10,184,4],[229,8,185,2],[229,9,185,3],[230,8,185,3],[230,17,155,8,"updateProfile"],[230,30,155,21,"updateProfile"],[230,31,155,21,"_x4"],[230,34,155,21],[231,10,155,21],[231,17,155,21,"_updateProfile"],[231,31,155,21],[231,32,155,21,"apply"],[231,37,155,21],[231,44,155,21,"arguments"],[231,53,155,21],[232,8,155,21],[233,8,155,21],[233,15,155,8,"updateProfile"],[233,28,155,21],[234,6,155,21],[235,6,187,2],[236,0,188,0],[237,0,189,0],[238,0,190,0],[239,0,191,0],[240,6,187,2],[241,4,187,2],[242,6,187,2,"key"],[242,9,187,2],[243,6,187,2,"value"],[243,11,187,2],[244,8,187,2],[244,12,187,2,"_addEmergencyContact"],[244,32,187,2],[244,39,187,2,"_asyncToGenerator2"],[244,57,187,2],[244,58,187,2,"default"],[244,65,187,2],[244,67,192,2],[244,78,192,28,"contact"],[244,85,192,35],[244,87,192,37],[245,10,193,4],[245,14,193,4,"_useAuthStore$getStat6"],[245,36,193,4],[245,39,193,33,"useAuthStore"],[245,58,193,45],[245,59,193,46,"getState"],[245,67,193,54],[245,68,193,55],[245,69,193,56],[246,12,193,12,"user"],[246,16,193,16],[246,19,193,16,"_useAuthStore$getStat6"],[246,41,193,16],[246,42,193,12,"user"],[246,46,193,16],[247,12,193,18,"updateUser"],[247,22,193,28],[247,25,193,28,"_useAuthStore$getStat6"],[247,47,193,28],[247,48,193,18,"updateUser"],[247,58,193,28],[248,10,195,4],[248,14,195,8],[249,12,196,6],[249,16,196,10],[249,17,196,11,"user"],[249,21,196,15],[249,23,196,17],[250,14,197,8],[250,20,197,14],[250,24,197,18,"Error"],[250,29,197,23],[250,30,197,24],[250,54,197,48],[250,55,197,49],[251,12,198,6],[252,12,200,6],[252,16,200,12,"newContact"],[252,26,200,22],[252,29,200,25],[253,14,201,8,"id"],[253,16,201,10],[253,18,201,12],[253,29,201,23,"Date"],[253,33,201,27],[253,34,201,28,"now"],[253,37,201,31],[253,38,201,32],[253,39,201,33],[253,41,201,35],[254,14,202,8],[254,17,202,11,"contact"],[254,24,202,18],[255,14,203,8,"createdAt"],[255,23,203,17],[255,25,203,19],[255,29,203,23,"Date"],[255,33,203,27],[255,34,203,28],[256,12,204,6],[256,13,204,7],[257,12,206,6],[257,16,206,12,"updatedContacts"],[257,31,206,27],[257,34,206,30],[257,35,206,31],[257,39,206,35,"user"],[257,43,206,39],[257,44,206,40,"emergencyContacts"],[257,61,206,57],[257,65,206,61],[257,67,206,63],[257,68,206,64],[257,70,206,66,"newContact"],[257,80,206,76],[257,81,206,77],[259,12,208,6],[260,12,209,6],[260,18,209,12],[260,22,209,16],[260,23,209,17,"updateUserInDatabase"],[260,43,209,37],[260,44,209,38,"user"],[260,48,209,42],[260,49,209,43,"uid"],[260,52,209,46],[260,54,209,48],[261,14,210,8,"emergencyContacts"],[261,31,210,25],[261,33,210,27,"updatedContacts"],[262,12,211,6],[262,13,211,7],[262,14,211,8],[264,12,213,6],[265,12,214,6,"updateUser"],[265,22,214,16],[265,23,214,17],[266,14,214,19,"emergencyContacts"],[266,31,214,36],[266,33,214,38,"updatedContacts"],[267,12,214,54],[267,13,214,55],[267,14,214,56],[269,12,216,6],[270,12,217,6],[270,18,217,12,"firebase"],[270,34,217,20],[270,35,217,21,"analytics"],[270,44,217,30],[270,45,217,31,"logEvent"],[270,53,217,39],[270,54,217,40],[270,79,217,65],[270,81,217,67],[271,14,218,8,"user_id"],[271,21,218,15],[271,23,218,17,"user"],[271,27,218,21],[271,28,218,22,"uid"],[271,31,218,25],[272,14,219,8,"total_contacts"],[272,28,219,22],[272,30,219,24,"updatedContacts"],[272,45,219,39],[272,46,219,40,"length"],[273,12,220,6],[273,13,220,7],[273,14,220,8],[274,12,222,6],[274,19,222,13,"newContact"],[274,29,222,23],[275,10,223,4],[275,11,223,5],[275,12,223,6],[275,19,223,13,"error"],[275,24,223,18],[275,26,223,20],[276,12,224,6,"console"],[276,19,224,13],[276,20,224,14,"error"],[276,25,224,19],[276,26,224,20],[276,56,224,50],[276,58,224,52,"error"],[276,63,224,57],[276,64,224,58],[277,12,225,6],[277,18,225,12,"error"],[277,23,225,17],[278,10,226,4],[279,8,227,2],[279,9,227,3],[280,8,227,3],[280,17,192,8,"addEmergencyContact"],[280,36,192,27,"addEmergencyContact"],[280,37,192,27,"_x5"],[280,40,192,27],[281,10,192,27],[281,17,192,27,"_addEmergencyContact"],[281,37,192,27],[281,38,192,27,"apply"],[281,43,192,27],[281,50,192,27,"arguments"],[281,59,192,27],[282,8,192,27],[283,8,192,27],[283,15,192,8,"addEmergencyContact"],[283,34,192,27],[284,6,192,27],[285,6,229,2],[286,0,230,0],[287,0,231,0],[288,0,232,0],[289,6,229,2],[290,4,229,2],[291,6,229,2,"key"],[291,9,229,2],[292,6,229,2,"value"],[292,11,229,2],[292,13,233,2],[292,22,233,2,"getCurrentUser"],[292,36,233,16,"getCurrentUser"],[292,37,233,16],[292,39,233,19],[293,8,234,4],[293,15,234,11,"firebase"],[293,31,234,19],[293,32,234,20,"auth"],[293,36,234,24],[293,37,234,25,"getCurrentUser"],[293,51,234,39],[293,52,234,40],[293,53,234,41],[294,6,235,2],[296,6,237,2],[297,0,238,0],[298,0,239,0],[299,0,240,0],[300,0,241,0],[301,4,237,2],[302,6,237,2,"key"],[302,9,237,2],[303,6,237,2,"value"],[303,11,237,2],[304,8,237,2],[304,12,237,2,"_saveUserToDatabase"],[304,31,237,2],[304,38,237,2,"_asyncToGenerator2"],[304,56,237,2],[304,57,237,2,"default"],[304,64,237,2],[304,66,242,2],[304,77,242,27,"user"],[304,81,242,31],[304,83,242,33],[305,10,243,4],[305,14,243,8],[306,12,244,6],[306,18,244,12,"firebase"],[306,34,244,20],[306,35,244,21,"firestore"],[306,44,244,30],[306,45,245,9,"collection"],[306,55,245,19],[306,56,245,20],[306,63,245,27],[306,64,245,28],[306,65,246,9,"doc"],[306,68,246,12],[306,69,246,13,"user"],[306,73,246,17],[306,74,246,18,"uid"],[306,77,246,21],[306,78,246,22],[306,79,247,9,"set"],[306,82,247,12],[306,83,247,13],[307,14,248,10,"uid"],[307,17,248,13],[307,19,248,15,"user"],[307,23,248,19],[307,24,248,20,"uid"],[307,27,248,23],[308,14,249,10,"phoneNumber"],[308,25,249,21],[308,27,249,23,"user"],[308,31,249,27],[308,32,249,28,"phoneNumber"],[308,43,249,39],[309,14,250,10,"displayName"],[309,25,250,21],[309,27,250,23,"user"],[309,31,250,27],[309,32,250,28,"displayName"],[309,43,250,39],[309,47,250,43],[309,49,250,45],[310,14,251,10,"email"],[310,19,251,15],[310,21,251,17,"user"],[310,25,251,21],[310,26,251,22,"email"],[310,31,251,27],[310,35,251,31],[310,39,251,35],[311,14,252,10,"isVerified"],[311,24,252,20],[311,26,252,22,"user"],[311,30,252,26],[311,31,252,27,"isVerified"],[311,41,252,37],[312,14,253,10,"emergencyContacts"],[312,31,253,27],[312,33,253,29,"user"],[312,37,253,33],[312,38,253,34,"emergencyContacts"],[312,55,253,51],[312,59,253,55],[312,61,253,57],[313,14,254,10,"savedAddresses"],[313,28,254,24],[313,30,254,26,"user"],[313,34,254,30],[313,35,254,31,"savedAddresses"],[313,49,254,45],[313,53,254,49],[313,55,254,51],[314,14,255,10,"createdAt"],[314,23,255,19],[314,25,255,21,"user"],[314,29,255,25],[314,30,255,26,"createdAt"],[314,39,255,35],[315,14,256,10,"updatedAt"],[315,23,256,19],[315,25,256,21,"user"],[315,29,256,25],[315,30,256,26,"updatedAt"],[316,12,257,8],[316,13,257,9],[316,14,257,10],[317,10,258,4],[317,11,258,5],[317,12,258,6],[317,19,258,13,"error"],[317,24,258,18],[317,26,258,20],[318,12,259,6,"console"],[318,19,259,13],[318,20,259,14,"error"],[318,25,259,19],[318,26,259,20],[318,60,259,54],[318,62,259,56,"error"],[318,67,259,61],[318,68,259,62],[319,12,260,6],[320,10,261,4],[321,8,262,2],[321,9,262,3],[322,8,262,3],[322,17,242,8,"saveUserToDatabase"],[322,35,242,26,"saveUserToDatabase"],[322,36,242,26,"_x6"],[322,39,242,26],[323,10,242,26],[323,17,242,26,"_saveUserToDatabase"],[323,36,242,26],[323,37,242,26,"apply"],[323,42,242,26],[323,49,242,26,"arguments"],[323,58,242,26],[324,8,242,26],[325,8,242,26],[325,15,242,8,"saveUserToDatabase"],[325,33,242,26],[326,6,242,26],[327,6,264,2],[328,0,265,0],[329,0,266,0],[330,0,267,0],[331,0,268,0],[332,0,269,0],[333,6,264,2],[334,4,264,2],[335,6,264,2,"key"],[335,9,264,2],[336,6,264,2,"value"],[336,11,264,2],[337,8,264,2],[337,12,264,2,"_updateUserInDatabase"],[337,33,264,2],[337,40,264,2,"_asyncToGenerator2"],[337,58,264,2],[337,59,264,2,"default"],[337,66,264,2],[337,68,270,2],[337,79,270,29,"userId"],[337,85,270,35],[337,87,270,37,"updates"],[337,94,270,44],[337,96,270,46],[338,10,271,4],[338,14,271,8],[339,12,272,6],[339,18,272,12,"firebase"],[339,34,272,20],[339,35,272,21,"firestore"],[339,44,272,30],[339,45,273,9,"collection"],[339,55,273,19],[339,56,273,20],[339,63,273,27],[339,64,273,28],[339,65,274,9,"doc"],[339,68,274,12],[339,69,274,13,"userId"],[339,75,274,19],[339,76,274,20],[339,77,275,9,"update"],[339,83,275,15],[339,84,275,16],[340,14,276,10],[340,17,276,13,"updates"],[340,24,276,20],[341,14,277,10,"updatedAt"],[341,23,277,19],[341,25,277,21],[341,29,277,25,"Date"],[341,33,277,29],[341,34,277,30],[342,12,278,8],[342,13,278,9],[342,14,278,10],[343,10,279,4],[343,11,279,5],[343,12,279,6],[343,19,279,13,"error"],[343,24,279,18],[343,26,279,20],[344,12,280,6,"console"],[344,19,280,13],[344,20,280,14,"error"],[344,25,280,19],[344,26,280,20],[344,62,280,56],[344,64,280,58,"error"],[344,69,280,63],[344,70,280,64],[345,12,281,6],[345,18,281,12,"error"],[345,23,281,17],[346,10,282,4],[347,8,283,2],[347,9,283,3],[348,8,283,3],[348,17,270,8,"updateUserInDatabase"],[348,37,270,28,"updateUserInDatabase"],[348,38,270,28,"_x7"],[348,41,270,28],[348,43,270,28,"_x8"],[348,46,270,28],[349,10,270,28],[349,17,270,28,"_updateUserInDatabase"],[349,38,270,28],[349,39,270,28,"apply"],[349,44,270,28],[349,51,270,28,"arguments"],[349,60,270,28],[350,8,270,28],[351,8,270,28],[351,15,270,8,"updateUserInDatabase"],[351,35,270,28],[352,6,270,28],[353,6,285,2],[354,0,286,0],[355,0,287,0],[356,0,288,0],[357,0,289,0],[358,6,285,2],[359,4,285,2],[360,6,285,2,"key"],[360,9,285,2],[361,6,285,2,"value"],[361,11,285,2],[361,13,290,2],[361,22,290,2,"isValidPhoneNumber"],[361,40,290,20,"isValidPhoneNumber"],[361,41,290,21,"phoneNumber"],[361,52,290,32],[361,54,290,34],[362,8,291,4],[363,8,292,4],[363,12,292,10,"phoneRegex"],[363,22,292,20],[363,25,292,23],[363,49,292,47],[364,8,293,4],[364,15,293,11,"phoneRegex"],[364,25,293,21],[364,26,293,22,"test"],[364,30,293,26],[364,31,293,27,"phoneNumber"],[364,42,293,38],[364,43,293,39,"replace"],[364,50,293,46],[364,51,293,47],[364,57,293,53],[364,59,293,55],[364,61,293,57],[364,62,293,58],[364,63,293,59],[365,6,294,2],[367,6,296,2],[368,0,297,0],[369,0,298,0],[370,0,299,0],[371,0,300,0],[372,4,296,2],[373,6,296,2,"key"],[373,9,296,2],[374,6,296,2,"value"],[374,11,296,2],[374,13,301,2],[374,22,301,2,"formatPhoneNumber"],[374,39,301,19,"formatPhoneNumber"],[374,40,301,20,"phoneNumber"],[374,51,301,31],[374,53,301,33],[375,8,302,4],[376,8,303,4],[376,12,303,8,"cleaned"],[376,19,303,15],[376,22,303,18,"phoneNumber"],[376,33,303,29],[376,34,303,30,"replace"],[376,41,303,37],[376,42,303,38],[376,48,303,44],[376,50,303,46],[376,52,303,48],[376,53,303,49],[376,54,303,50,"replace"],[376,61,303,57],[376,62,303,58],[376,72,303,68],[376,74,303,70],[376,76,303,72],[376,77,303,73],[378,8,305,4],[379,8,306,4],[379,12,306,8],[379,13,306,9,"cleaned"],[379,20,306,16],[379,21,306,17,"startsWith"],[379,31,306,27],[379,32,306,28],[379,37,306,33],[379,38,306,34],[379,40,306,36],[380,10,307,6],[380,14,307,10,"cleaned"],[380,21,307,17],[380,22,307,18,"startsWith"],[380,32,307,28],[380,33,307,29],[380,37,307,33],[380,38,307,34],[380,40,307,36],[381,12,308,8,"cleaned"],[381,19,308,15],[381,22,308,18],[381,25,308,21],[381,28,308,24,"cleaned"],[381,35,308,31],[382,10,309,6],[382,11,309,7],[382,17,309,13],[382,21,309,17,"cleaned"],[382,28,309,24],[382,29,309,25,"startsWith"],[382,39,309,35],[382,40,309,36],[382,43,309,39],[382,44,309,40],[382,46,309,42],[383,12,310,8],[384,12,311,8,"cleaned"],[384,19,311,15],[384,22,311,18],[384,27,311,23],[384,30,311,26,"cleaned"],[384,37,311,33],[384,38,311,34,"substring"],[384,47,311,43],[384,48,311,44],[384,49,311,45],[384,50,311,46],[385,10,312,6],[385,11,312,7],[385,17,312,13],[386,12,313,8],[387,12,314,8,"cleaned"],[387,19,314,15],[387,22,314,18],[387,27,314,23],[387,30,314,26,"cleaned"],[387,37,314,33],[388,10,315,6],[389,8,316,4],[390,8,318,4],[390,15,318,11,"cleaned"],[390,22,318,18],[391,6,319,2],[393,6,321,2],[394,0,322,0],[395,0,323,0],[396,0,324,0],[397,0,325,0],[398,4,321,2],[399,6,321,2,"key"],[399,9,321,2],[400,6,321,2,"value"],[400,11,321,2],[400,13,326,2],[400,22,326,2,"isValidOTP"],[400,32,326,12,"isValidOTP"],[400,33,326,13,"otp"],[400,36,326,16],[400,38,326,18],[401,8,327,4],[402,8,328,4],[402,12,328,10,"otpRegex"],[402,20,328,18],[402,23,328,21],[402,32,328,30],[403,8,329,4],[403,15,329,11,"otpRegex"],[403,23,329,19],[403,24,329,20,"test"],[403,28,329,24],[403,29,329,25,"otp"],[403,32,329,28],[403,33,329,29],[404,6,330,2],[406,6,332,2],[407,0,333,0],[408,0,334,0],[409,0,335,0],[410,0,336,0],[411,4,332,2],[412,6,332,2,"key"],[412,9,332,2],[413,6,332,2,"value"],[413,11,332,2],[414,8,332,2],[414,12,332,2,"_resendOTP"],[414,22,332,2],[414,29,332,2,"_asyncToGenerator2"],[414,47,332,2],[414,48,332,2,"default"],[414,55,332,2],[414,57,337,2],[414,68,337,18,"phoneNumber"],[414,79,337,29],[414,81,337,31],[415,10,338,4],[416,10,339,4],[416,14,339,10,"lastOTPTime"],[416,25,339,21],[416,28,339,24,"localStorage"],[416,40,339,36],[416,41,339,37,"getItem"],[416,48,339,44],[416,49,339,45],[416,62,339,58],[416,63,339,59],[417,10,340,4],[417,14,340,10,"now"],[417,17,340,13],[417,20,340,16,"Date"],[417,24,340,20],[417,25,340,21,"now"],[417,28,340,24],[417,29,340,25],[417,30,340,26],[418,10,342,4],[418,14,342,8,"lastOTPTime"],[418,25,342,19],[418,29,342,23,"now"],[418,32,342,26],[418,35,342,29,"parseInt"],[418,43,342,37],[418,44,342,38,"lastOTPTime"],[418,55,342,49],[418,56,342,50],[418,59,342,53],[418,64,342,58],[418,66,342,60],[419,12,343,6],[419,16,343,12,"remainingTime"],[419,29,343,25],[419,32,343,28,"Math"],[419,36,343,32],[419,37,343,33,"ceil"],[419,41,343,37],[419,42,344,8],[419,43,344,9],[419,48,344,14],[419,52,344,18,"now"],[419,55,344,21],[419,58,344,24,"parseInt"],[419,66,344,32],[419,67,344,33,"lastOTPTime"],[419,78,344,44],[419,79,344,45],[419,80,344,46],[419,84,344,50],[419,88,345,6],[419,89,345,7],[420,12,346,6],[420,18,346,12],[420,22,346,16,"Error"],[420,27,346,21],[420,28,347,8],[420,43,347,23,"remainingTime"],[420,56,347,36],[420,87,348,6],[420,88,348,7],[421,10,349,4],[423,10,351,4],[424,10,352,4,"localStorage"],[424,22,352,16],[424,23,352,17,"setItem"],[424,30,352,24],[424,31,352,25],[424,44,352,38],[424,46,352,40,"now"],[424,49,352,43],[424,50,352,44,"toString"],[424,58,352,52],[424,59,352,53],[424,60,352,54],[424,61,352,55],[426,10,354,4],[427,10,355,4],[427,17,355,11],[427,21,355,15],[427,22,355,16,"sendOTP"],[427,29,355,23],[427,30,355,24,"phoneNumber"],[427,41,355,35],[427,42,355,36],[428,8,356,2],[428,9,356,3],[429,8,356,3],[429,17,337,8,"resendOTP"],[429,26,337,17,"resendOTP"],[429,27,337,17,"_x9"],[429,30,337,17],[430,10,337,17],[430,17,337,17,"_resendOTP"],[430,27,337,17],[430,28,337,17,"apply"],[430,33,337,17],[430,40,337,17,"arguments"],[430,49,337,17],[431,8,337,17],[432,8,337,17],[432,15,337,8,"resendOTP"],[432,24,337,17],[433,6,337,17],[434,6,358,2],[435,0,359,0],[436,0,360,0],[437,6,358,2],[438,4,358,2],[439,6,358,2,"key"],[439,9,358,2],[440,6,358,2,"value"],[440,11,358,2],[440,13,361,2],[440,22,361,2,"cleanup"],[440,29,361,9,"cleanup"],[440,30,361,9],[440,32,361,12],[441,8,362,4],[441,12,362,8],[441,16,362,12],[441,17,362,13,"unsubscribeAuth"],[441,32,362,28],[441,34,362,30],[442,10,363,6],[442,14,363,10],[442,15,363,11,"unsubscribeAuth"],[442,30,363,26],[442,31,363,27],[442,32,363,28],[443,10,364,6],[443,14,364,10],[443,15,364,11,"unsubscribeAuth"],[443,30,364,26],[443,33,364,29],[443,37,364,33],[444,8,365,4],[445,6,366,2],[446,4,366,3],[447,2,366,3],[447,7,369,0],[448,2,370,7],[448,6,370,13,"authService"],[448,17,370,24],[448,20,370,24,"exports"],[448,27,370,24],[448,28,370,24,"authService"],[448,39,370,24],[448,42,370,27],[448,46,370,31,"AuthService"],[448,57,370,42],[448,58,370,43],[448,59,370,44],[449,2,370,45],[449,6,370,45,"_default"],[449,14,370,45],[449,17,370,45,"exports"],[449,24,370,45],[449,25,370,45,"default"],[449,32,370,45],[449,35,372,15,"authService"],[449,46,372,26],[450,0,372,26],[450,3]],"functionMap":{"names":["<global>","AuthService","AuthService#constructor","AuthService#init","firebase.auth.onAuthStateChanged$argument_0","AuthService#sendOTP","AuthService#verifyOTP","AuthService#signOut","AuthService#updateProfile","AuthService#addEmergencyContact","AuthService#getCurrentUser","AuthService#saveUserToDatabase","AuthService#updateUserInDatabase","AuthService#isValidPhoneNumber","AuthService#formatPhoneNumber","AuthService#isValidOTP","AuthService#resendOTP","AuthService#cleanup"],"mappings":"AAA;ACU;ECC;GDG;EEK;4DCE;KDI;GFC;EIO;GJoC;EKQ;GL0C;EMM;GNsB;EOO;GP8B;EQO;GRmC;ESM;GTE;EUO;GVoB;EWQ;GXa;EYO;GZI;EaO;GbkB;EcO;GdI;EeO;GfmB;EgBK;GhBK;CDC"}},"type":"js/module"}]}