{"dependencies":[{"name":"./firebase/config","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":113},"end":{"line":5,"column":45,"index":158}}],"key":"t89SCEes/++BqQl/EtayLS81wB8=","exportNames":["*"]}},{"name":"../store/index","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":159},"end":{"line":6,"column":46,"index":205}}],"key":"ycShUPRFmHSYFCeYgmC0pBVzoR4=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = exports.authService = void 0;\n  var _config = require(_dependencyMap[0], \"./firebase/config\");\n  var _index = require(_dependencyMap[1], \"../store/index\");\n  /**\n   * Authentication Service for SafeRide App\n   * Handles OTP-based authentication using Firebase Phone Auth\n   */\n\n  /**\n   * AuthService class provides authentication methods\n   */\n  class AuthService {\n    constructor() {\n      this.unsubscribeAuth = null;\n      this.init();\n    }\n\n    /**\n     * Initialize authentication service\n     */\n    init() {\n      // Listen for authentication state changes\n      this.unsubscribeAuth = _config.firebase.auth.onAuthStateChanged(user => {\n        const {\n          setUser,\n          setLoading\n        } = _index.useAuthStore.getState();\n        setUser(user);\n        setLoading(false);\n      });\n    }\n\n    /**\n     * Send OTP to phone number\n     * @param {string} phoneNumber - Phone number with country code (+91xxxxxxxxxx)\n     * @returns {Promise<string>} Verification ID for OTP verification\n     */\n    async sendOTP(phoneNumber) {\n      const {\n        setLoading,\n        setError,\n        setOtpVerificationId\n      } = _index.useAuthStore.getState();\n      try {\n        setLoading(true);\n        setError(null);\n\n        // Validate phone number format\n        if (!this.isValidPhoneNumber(phoneNumber)) {\n          throw new Error(\"Please enter a valid phone number\");\n        }\n\n        // Format phone number (ensure it starts with +91)\n        const formattedNumber = this.formatPhoneNumber(phoneNumber);\n\n        // Send OTP via Firebase\n        const verificationId = await _config.firebase.auth.sendOTP(formattedNumber);\n\n        // Store verification ID in store\n        setOtpVerificationId(verificationId);\n\n        // Log analytics event\n        await _config.firebase.analytics.logEvent(\"otp_sent\", {\n          phone_number_length: formattedNumber.length,\n          country_code: \"+91\"\n        });\n        return verificationId;\n      } catch (error) {\n        console.error(\"Send OTP error:\", error);\n        setError(error.message || \"Failed to send OTP\");\n        throw error;\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    /**\n     * Verify OTP and complete authentication\n     * @param {string} verificationId - Verification ID from sendOTP\n     * @param {string} otp - 6-digit OTP code\n     * @returns {Promise<Object>} Authenticated user object\n     */\n    async verifyOTP(verificationId, otp) {\n      const {\n        setLoading,\n        setError,\n        setUser\n      } = _index.useAuthStore.getState();\n      try {\n        setLoading(true);\n        setError(null);\n\n        // Validate OTP format\n        if (!this.isValidOTP(otp)) {\n          throw new Error(\"Please enter a valid 6-digit OTP\");\n        }\n\n        // Verify OTP with Firebase\n        const user = await _config.firebase.auth.verifyOTP(verificationId, otp);\n\n        // Update user in store\n        setUser(user);\n\n        // Save user data to Firestore\n        await this.saveUserToDatabase(user);\n\n        // Log analytics event\n        await _config.firebase.analytics.logEvent(\"user_login\", {\n          method: \"phone\",\n          user_id: user.uid\n        });\n\n        // Set user properties for analytics\n        await _config.firebase.analytics.setUserProperties({\n          user_id: user.uid,\n          phone_verified: true,\n          signup_method: \"phone\"\n        });\n        return user;\n      } catch (error) {\n        console.error(\"Verify OTP error:\", error);\n        setError(error.message || \"Invalid OTP. Please try again.\");\n        throw error;\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    /**\n     * Sign out current user\n     * @returns {Promise<void>}\n     */\n    async signOut() {\n      const {\n        setLoading,\n        setError,\n        clearAuth\n      } = _index.useAuthStore.getState();\n      try {\n        setLoading(true);\n        setError(null);\n\n        // Sign out from Firebase\n        await _config.firebase.auth.signOut();\n\n        // Clear authentication state\n        clearAuth();\n\n        // Log analytics event\n        await _config.firebase.analytics.logEvent(\"user_logout\");\n      } catch (error) {\n        console.error(\"Sign out error:\", error);\n        setError(error.message || \"Failed to sign out\");\n        throw error;\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    /**\n     * Update user profile information\n     * @param {Object} updates - Profile updates\n     * @returns {Promise<Object>} Updated user object\n     */\n    async updateProfile(updates) {\n      const {\n        setLoading,\n        setError,\n        updateUser\n      } = _index.useAuthStore.getState();\n      try {\n        setLoading(true);\n        setError(null);\n\n        // Update profile in Firebase Auth\n        const updatedUser = await _config.firebase.auth.updateProfile(updates);\n\n        // Update user in Firestore\n        await this.updateUserInDatabase(updatedUser.uid, updates);\n\n        // Update user in store\n        updateUser(updates);\n\n        // Log analytics event\n        await _config.firebase.analytics.logEvent(\"profile_updated\", {\n          user_id: updatedUser.uid,\n          fields_updated: Object.keys(updates)\n        });\n        return updatedUser;\n      } catch (error) {\n        console.error(\"Update profile error:\", error);\n        setError(error.message || \"Failed to update profile\");\n        throw error;\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    /**\n     * Add emergency contact for user\n     * @param {Object} contact - Emergency contact details\n     * @returns {Promise<Object>} Updated user object\n     */\n    async addEmergencyContact(contact) {\n      const {\n        user,\n        updateUser\n      } = _index.useAuthStore.getState();\n      try {\n        if (!user) {\n          throw new Error(\"User not authenticated\");\n        }\n        const newContact = {\n          id: `contact-${Date.now()}`,\n          ...contact,\n          createdAt: new Date()\n        };\n        const updatedContacts = [...(user.emergencyContacts || []), newContact];\n\n        // Update in database\n        await this.updateUserInDatabase(user.uid, {\n          emergencyContacts: updatedContacts\n        });\n\n        // Update in store\n        updateUser({\n          emergencyContacts: updatedContacts\n        });\n\n        // Log analytics event\n        await _config.firebase.analytics.logEvent(\"emergency_contact_added\", {\n          user_id: user.uid,\n          total_contacts: updatedContacts.length\n        });\n        return newContact;\n      } catch (error) {\n        console.error(\"Add emergency contact error:\", error);\n        throw error;\n      }\n    }\n\n    /**\n     * Get current authenticated user\n     * @returns {Object|null} Current user or null\n     */\n    getCurrentUser() {\n      return _config.firebase.auth.getCurrentUser();\n    }\n\n    /**\n     * Save user data to Firestore database\n     * @param {Object} user - User object to save\n     * @returns {Promise<void>}\n     */\n    async saveUserToDatabase(user) {\n      try {\n        await _config.firebase.firestore.collection(\"users\").doc(user.uid).set({\n          uid: user.uid,\n          phoneNumber: user.phoneNumber,\n          displayName: user.displayName || \"\",\n          email: user.email || null,\n          isVerified: user.isVerified,\n          emergencyContacts: user.emergencyContacts || [],\n          savedAddresses: user.savedAddresses || [],\n          createdAt: user.createdAt,\n          updatedAt: user.updatedAt\n        });\n      } catch (error) {\n        console.error(\"Failed to save user to database:\", error);\n        // Don't throw error as auth should still succeed\n      }\n    }\n\n    /**\n     * Update user data in Firestore database\n     * @param {string} userId - User ID\n     * @param {Object} updates - Updates to apply\n     * @returns {Promise<void>}\n     */\n    async updateUserInDatabase(userId, updates) {\n      try {\n        await _config.firebase.firestore.collection(\"users\").doc(userId).update({\n          ...updates,\n          updatedAt: new Date()\n        });\n      } catch (error) {\n        console.error(\"Failed to update user in database:\", error);\n        throw error;\n      }\n    }\n\n    /**\n     * Validate phone number format\n     * @param {string} phoneNumber - Phone number to validate\n     * @returns {boolean} True if valid\n     */\n    isValidPhoneNumber(phoneNumber) {\n      // Indian phone number validation (10 digits after +91)\n      const phoneRegex = /^(\\+91|91)?[6-9]\\d{9}$/;\n      return phoneRegex.test(phoneNumber.replace(/\\s+/g, \"\"));\n    }\n\n    /**\n     * Format phone number to international format\n     * @param {string} phoneNumber - Phone number to format\n     * @returns {string} Formatted phone number\n     */\n    formatPhoneNumber(phoneNumber) {\n      // Remove all spaces and special characters\n      let cleaned = phoneNumber.replace(/\\s+/g, \"\").replace(/[^0-9+]/g, \"\");\n\n      // Add +91 if not present\n      if (!cleaned.startsWith(\"+91\")) {\n        if (cleaned.startsWith(\"91\")) {\n          cleaned = \"+\" + cleaned;\n        } else if (cleaned.startsWith(\"+\")) {\n          // Already has + but not 91\n          cleaned = \"+91\" + cleaned.substring(1);\n        } else {\n          // No country code\n          cleaned = \"+91\" + cleaned;\n        }\n      }\n      return cleaned;\n    }\n\n    /**\n     * Validate OTP format\n     * @param {string} otp - OTP to validate\n     * @returns {boolean} True if valid\n     */\n    isValidOTP(otp) {\n      // OTP should be exactly 6 digits\n      const otpRegex = /^\\d{6}$/;\n      return otpRegex.test(otp);\n    }\n\n    /**\n     * Resend OTP (with rate limiting)\n     * @param {string} phoneNumber - Phone number to resend OTP\n     * @returns {Promise<string>} New verification ID\n     */\n    async resendOTP(phoneNumber) {\n      // Add 30-second rate limiting\n      const lastOTPTime = localStorage.getItem(\"lastOTPTime\");\n      const now = Date.now();\n      if (lastOTPTime && now - parseInt(lastOTPTime) < 30000) {\n        const remainingTime = Math.ceil((30000 - (now - parseInt(lastOTPTime))) / 1000);\n        throw new Error(`Please wait ${remainingTime} seconds before resending OTP`);\n      }\n\n      // Store current time\n      localStorage.setItem(\"lastOTPTime\", now.toString());\n\n      // Send new OTP\n      return this.sendOTP(phoneNumber);\n    }\n\n    /**\n     * Cleanup authentication service\n     */\n    cleanup() {\n      if (this.unsubscribeAuth) {\n        this.unsubscribeAuth();\n        this.unsubscribeAuth = null;\n      }\n    }\n  }\n\n  // Create and export auth service instance\n  const authService = exports.authService = new AuthService();\n  var _default = exports.default = authService;\n});","lineCount":377,"map":[[6,2,5,0],[6,6,5,0,"_config"],[6,13,5,0],[6,16,5,0,"require"],[6,23,5,0],[6,24,5,0,"_dependencyMap"],[6,38,5,0],[7,2,6,0],[7,6,6,0,"_index"],[7,12,6,0],[7,15,6,0,"require"],[7,22,6,0],[7,23,6,0,"_dependencyMap"],[7,37,6,0],[8,2,1,0],[9,0,2,0],[10,0,3,0],[11,0,4,0],[13,2,8,0],[14,0,9,0],[15,0,10,0],[16,2,11,0],[16,8,11,6,"AuthService"],[16,19,11,17],[16,20,11,18],[17,4,12,2,"constructor"],[17,15,12,13,"constructor"],[17,16,12,13],[17,18,12,16],[18,6,13,4],[18,10,13,8],[18,11,13,9,"unsubscribeAuth"],[18,26,13,24],[18,29,13,27],[18,33,13,31],[19,6,14,4],[19,10,14,8],[19,11,14,9,"init"],[19,15,14,13],[19,16,14,14],[19,17,14,15],[20,4,15,2],[22,4,17,2],[23,0,18,0],[24,0,19,0],[25,4,20,2,"init"],[25,8,20,6,"init"],[25,9,20,6],[25,11,20,9],[26,6,21,4],[27,6,22,4],[27,10,22,8],[27,11,22,9,"unsubscribeAuth"],[27,26,22,24],[27,29,22,27,"firebase"],[27,45,22,35],[27,46,22,36,"auth"],[27,50,22,40],[27,51,22,41,"onAuthStateChanged"],[27,69,22,59],[27,70,22,61,"user"],[27,74,22,65],[27,78,22,70],[28,8,23,6],[28,14,23,12],[29,10,23,14,"setUser"],[29,17,23,21],[30,10,23,23,"setLoading"],[31,8,23,34],[31,9,23,35],[31,12,23,38,"useAuthStore"],[31,31,23,50],[31,32,23,51,"getState"],[31,40,23,59],[31,41,23,60],[31,42,23,61],[32,8,24,6,"setUser"],[32,15,24,13],[32,16,24,14,"user"],[32,20,24,18],[32,21,24,19],[33,8,25,6,"setLoading"],[33,18,25,16],[33,19,25,17],[33,24,25,22],[33,25,25,23],[34,6,26,4],[34,7,26,5],[34,8,26,6],[35,4,27,2],[37,4,29,2],[38,0,30,0],[39,0,31,0],[40,0,32,0],[41,0,33,0],[42,4,34,2],[42,10,34,8,"sendOTP"],[42,17,34,15,"sendOTP"],[42,18,34,16,"phoneNumber"],[42,29,34,27],[42,31,34,29],[43,6,35,4],[43,12,35,10],[44,8,35,12,"setLoading"],[44,18,35,22],[45,8,35,24,"setError"],[45,16,35,32],[46,8,35,34,"setOtpVerificationId"],[47,6,35,55],[47,7,35,56],[47,10,36,6,"useAuthStore"],[47,29,36,18],[47,30,36,19,"getState"],[47,38,36,27],[47,39,36,28],[47,40,36,29],[48,6,38,4],[48,10,38,8],[49,8,39,6,"setLoading"],[49,18,39,16],[49,19,39,17],[49,23,39,21],[49,24,39,22],[50,8,40,6,"setError"],[50,16,40,14],[50,17,40,15],[50,21,40,19],[50,22,40,20],[52,8,42,6],[53,8,43,6],[53,12,43,10],[53,13,43,11],[53,17,43,15],[53,18,43,16,"isValidPhoneNumber"],[53,36,43,34],[53,37,43,35,"phoneNumber"],[53,48,43,46],[53,49,43,47],[53,51,43,49],[54,10,44,8],[54,16,44,14],[54,20,44,18,"Error"],[54,25,44,23],[54,26,44,24],[54,61,44,59],[54,62,44,60],[55,8,45,6],[57,8,47,6],[58,8,48,6],[58,14,48,12,"formattedNumber"],[58,29,48,27],[58,32,48,30],[58,36,48,34],[58,37,48,35,"formatPhoneNumber"],[58,54,48,52],[58,55,48,53,"phoneNumber"],[58,66,48,64],[58,67,48,65],[60,8,50,6],[61,8,51,6],[61,14,51,12,"verificationId"],[61,28,51,26],[61,31,51,29],[61,37,51,35,"firebase"],[61,53,51,43],[61,54,51,44,"auth"],[61,58,51,48],[61,59,51,49,"sendOTP"],[61,66,51,56],[61,67,51,57,"formattedNumber"],[61,82,51,72],[61,83,51,73],[63,8,53,6],[64,8,54,6,"setOtpVerificationId"],[64,28,54,26],[64,29,54,27,"verificationId"],[64,43,54,41],[64,44,54,42],[66,8,56,6],[67,8,57,6],[67,14,57,12,"firebase"],[67,30,57,20],[67,31,57,21,"analytics"],[67,40,57,30],[67,41,57,31,"logEvent"],[67,49,57,39],[67,50,57,40],[67,60,57,50],[67,62,57,52],[68,10,58,8,"phone_number_length"],[68,29,58,27],[68,31,58,29,"formattedNumber"],[68,46,58,44],[68,47,58,45,"length"],[68,53,58,51],[69,10,59,8,"country_code"],[69,22,59,20],[69,24,59,22],[70,8,60,6],[70,9,60,7],[70,10,60,8],[71,8,62,6],[71,15,62,13,"verificationId"],[71,29,62,27],[72,6,63,4],[72,7,63,5],[72,8,63,6],[72,15,63,13,"error"],[72,20,63,18],[72,22,63,20],[73,8,64,6,"console"],[73,15,64,13],[73,16,64,14,"error"],[73,21,64,19],[73,22,64,20],[73,39,64,37],[73,41,64,39,"error"],[73,46,64,44],[73,47,64,45],[74,8,65,6,"setError"],[74,16,65,14],[74,17,65,15,"error"],[74,22,65,20],[74,23,65,21,"message"],[74,30,65,28],[74,34,65,32],[74,54,65,52],[74,55,65,53],[75,8,66,6],[75,14,66,12,"error"],[75,19,66,17],[76,6,67,4],[76,7,67,5],[76,16,67,14],[77,8,68,6,"setLoading"],[77,18,68,16],[77,19,68,17],[77,24,68,22],[77,25,68,23],[78,6,69,4],[79,4,70,2],[81,4,72,2],[82,0,73,0],[83,0,74,0],[84,0,75,0],[85,0,76,0],[86,0,77,0],[87,4,78,2],[87,10,78,8,"verifyOTP"],[87,19,78,17,"verifyOTP"],[87,20,78,18,"verificationId"],[87,34,78,32],[87,36,78,34,"otp"],[87,39,78,37],[87,41,78,39],[88,6,79,4],[88,12,79,10],[89,8,79,12,"setLoading"],[89,18,79,22],[90,8,79,24,"setError"],[90,16,79,32],[91,8,79,34,"setUser"],[92,6,79,42],[92,7,79,43],[92,10,79,46,"useAuthStore"],[92,29,79,58],[92,30,79,59,"getState"],[92,38,79,67],[92,39,79,68],[92,40,79,69],[93,6,81,4],[93,10,81,8],[94,8,82,6,"setLoading"],[94,18,82,16],[94,19,82,17],[94,23,82,21],[94,24,82,22],[95,8,83,6,"setError"],[95,16,83,14],[95,17,83,15],[95,21,83,19],[95,22,83,20],[97,8,85,6],[98,8,86,6],[98,12,86,10],[98,13,86,11],[98,17,86,15],[98,18,86,16,"isValidOTP"],[98,28,86,26],[98,29,86,27,"otp"],[98,32,86,30],[98,33,86,31],[98,35,86,33],[99,10,87,8],[99,16,87,14],[99,20,87,18,"Error"],[99,25,87,23],[99,26,87,24],[99,60,87,58],[99,61,87,59],[100,8,88,6],[102,8,90,6],[103,8,91,6],[103,14,91,12,"user"],[103,18,91,16],[103,21,91,19],[103,27,91,25,"firebase"],[103,43,91,33],[103,44,91,34,"auth"],[103,48,91,38],[103,49,91,39,"verifyOTP"],[103,58,91,48],[103,59,91,49,"verificationId"],[103,73,91,63],[103,75,91,65,"otp"],[103,78,91,68],[103,79,91,69],[105,8,93,6],[106,8,94,6,"setUser"],[106,15,94,13],[106,16,94,14,"user"],[106,20,94,18],[106,21,94,19],[108,8,96,6],[109,8,97,6],[109,14,97,12],[109,18,97,16],[109,19,97,17,"saveUserToDatabase"],[109,37,97,35],[109,38,97,36,"user"],[109,42,97,40],[109,43,97,41],[111,8,99,6],[112,8,100,6],[112,14,100,12,"firebase"],[112,30,100,20],[112,31,100,21,"analytics"],[112,40,100,30],[112,41,100,31,"logEvent"],[112,49,100,39],[112,50,100,40],[112,62,100,52],[112,64,100,54],[113,10,101,8,"method"],[113,16,101,14],[113,18,101,16],[113,25,101,23],[114,10,102,8,"user_id"],[114,17,102,15],[114,19,102,17,"user"],[114,23,102,21],[114,24,102,22,"uid"],[115,8,103,6],[115,9,103,7],[115,10,103,8],[117,8,105,6],[118,8,106,6],[118,14,106,12,"firebase"],[118,30,106,20],[118,31,106,21,"analytics"],[118,40,106,30],[118,41,106,31,"setUserProperties"],[118,58,106,48],[118,59,106,49],[119,10,107,8,"user_id"],[119,17,107,15],[119,19,107,17,"user"],[119,23,107,21],[119,24,107,22,"uid"],[119,27,107,25],[120,10,108,8,"phone_verified"],[120,24,108,22],[120,26,108,24],[120,30,108,28],[121,10,109,8,"signup_method"],[121,23,109,21],[121,25,109,23],[122,8,110,6],[122,9,110,7],[122,10,110,8],[123,8,112,6],[123,15,112,13,"user"],[123,19,112,17],[124,6,113,4],[124,7,113,5],[124,8,113,6],[124,15,113,13,"error"],[124,20,113,18],[124,22,113,20],[125,8,114,6,"console"],[125,15,114,13],[125,16,114,14,"error"],[125,21,114,19],[125,22,114,20],[125,41,114,39],[125,43,114,41,"error"],[125,48,114,46],[125,49,114,47],[126,8,115,6,"setError"],[126,16,115,14],[126,17,115,15,"error"],[126,22,115,20],[126,23,115,21,"message"],[126,30,115,28],[126,34,115,32],[126,66,115,64],[126,67,115,65],[127,8,116,6],[127,14,116,12,"error"],[127,19,116,17],[128,6,117,4],[128,7,117,5],[128,16,117,14],[129,8,118,6,"setLoading"],[129,18,118,16],[129,19,118,17],[129,24,118,22],[129,25,118,23],[130,6,119,4],[131,4,120,2],[133,4,122,2],[134,0,123,0],[135,0,124,0],[136,0,125,0],[137,4,126,2],[137,10,126,8,"signOut"],[137,17,126,15,"signOut"],[137,18,126,15],[137,20,126,18],[138,6,127,4],[138,12,127,10],[139,8,127,12,"setLoading"],[139,18,127,22],[140,8,127,24,"setError"],[140,16,127,32],[141,8,127,34,"clearAuth"],[142,6,127,44],[142,7,127,45],[142,10,127,48,"useAuthStore"],[142,29,127,60],[142,30,127,61,"getState"],[142,38,127,69],[142,39,127,70],[142,40,127,71],[143,6,129,4],[143,10,129,8],[144,8,130,6,"setLoading"],[144,18,130,16],[144,19,130,17],[144,23,130,21],[144,24,130,22],[145,8,131,6,"setError"],[145,16,131,14],[145,17,131,15],[145,21,131,19],[145,22,131,20],[147,8,133,6],[148,8,134,6],[148,14,134,12,"firebase"],[148,30,134,20],[148,31,134,21,"auth"],[148,35,134,25],[148,36,134,26,"signOut"],[148,43,134,33],[148,44,134,34],[148,45,134,35],[150,8,136,6],[151,8,137,6,"clearAuth"],[151,17,137,15],[151,18,137,16],[151,19,137,17],[153,8,139,6],[154,8,140,6],[154,14,140,12,"firebase"],[154,30,140,20],[154,31,140,21,"analytics"],[154,40,140,30],[154,41,140,31,"logEvent"],[154,49,140,39],[154,50,140,40],[154,63,140,53],[154,64,140,54],[155,6,141,4],[155,7,141,5],[155,8,141,6],[155,15,141,13,"error"],[155,20,141,18],[155,22,141,20],[156,8,142,6,"console"],[156,15,142,13],[156,16,142,14,"error"],[156,21,142,19],[156,22,142,20],[156,39,142,37],[156,41,142,39,"error"],[156,46,142,44],[156,47,142,45],[157,8,143,6,"setError"],[157,16,143,14],[157,17,143,15,"error"],[157,22,143,20],[157,23,143,21,"message"],[157,30,143,28],[157,34,143,32],[157,54,143,52],[157,55,143,53],[158,8,144,6],[158,14,144,12,"error"],[158,19,144,17],[159,6,145,4],[159,7,145,5],[159,16,145,14],[160,8,146,6,"setLoading"],[160,18,146,16],[160,19,146,17],[160,24,146,22],[160,25,146,23],[161,6,147,4],[162,4,148,2],[164,4,150,2],[165,0,151,0],[166,0,152,0],[167,0,153,0],[168,0,154,0],[169,4,155,2],[169,10,155,8,"updateProfile"],[169,23,155,21,"updateProfile"],[169,24,155,22,"updates"],[169,31,155,29],[169,33,155,31],[170,6,156,4],[170,12,156,10],[171,8,156,12,"setLoading"],[171,18,156,22],[172,8,156,24,"setError"],[172,16,156,32],[173,8,156,34,"updateUser"],[174,6,156,45],[174,7,156,46],[174,10,156,49,"useAuthStore"],[174,29,156,61],[174,30,156,62,"getState"],[174,38,156,70],[174,39,156,71],[174,40,156,72],[175,6,158,4],[175,10,158,8],[176,8,159,6,"setLoading"],[176,18,159,16],[176,19,159,17],[176,23,159,21],[176,24,159,22],[177,8,160,6,"setError"],[177,16,160,14],[177,17,160,15],[177,21,160,19],[177,22,160,20],[179,8,162,6],[180,8,163,6],[180,14,163,12,"updatedUser"],[180,25,163,23],[180,28,163,26],[180,34,163,32,"firebase"],[180,50,163,40],[180,51,163,41,"auth"],[180,55,163,45],[180,56,163,46,"updateProfile"],[180,69,163,59],[180,70,163,60,"updates"],[180,77,163,67],[180,78,163,68],[182,8,165,6],[183,8,166,6],[183,14,166,12],[183,18,166,16],[183,19,166,17,"updateUserInDatabase"],[183,39,166,37],[183,40,166,38,"updatedUser"],[183,51,166,49],[183,52,166,50,"uid"],[183,55,166,53],[183,57,166,55,"updates"],[183,64,166,62],[183,65,166,63],[185,8,168,6],[186,8,169,6,"updateUser"],[186,18,169,16],[186,19,169,17,"updates"],[186,26,169,24],[186,27,169,25],[188,8,171,6],[189,8,172,6],[189,14,172,12,"firebase"],[189,30,172,20],[189,31,172,21,"analytics"],[189,40,172,30],[189,41,172,31,"logEvent"],[189,49,172,39],[189,50,172,40],[189,67,172,57],[189,69,172,59],[190,10,173,8,"user_id"],[190,17,173,15],[190,19,173,17,"updatedUser"],[190,30,173,28],[190,31,173,29,"uid"],[190,34,173,32],[191,10,174,8,"fields_updated"],[191,24,174,22],[191,26,174,24,"Object"],[191,32,174,30],[191,33,174,31,"keys"],[191,37,174,35],[191,38,174,36,"updates"],[191,45,174,43],[192,8,175,6],[192,9,175,7],[192,10,175,8],[193,8,177,6],[193,15,177,13,"updatedUser"],[193,26,177,24],[194,6,178,4],[194,7,178,5],[194,8,178,6],[194,15,178,13,"error"],[194,20,178,18],[194,22,178,20],[195,8,179,6,"console"],[195,15,179,13],[195,16,179,14,"error"],[195,21,179,19],[195,22,179,20],[195,45,179,43],[195,47,179,45,"error"],[195,52,179,50],[195,53,179,51],[196,8,180,6,"setError"],[196,16,180,14],[196,17,180,15,"error"],[196,22,180,20],[196,23,180,21,"message"],[196,30,180,28],[196,34,180,32],[196,60,180,58],[196,61,180,59],[197,8,181,6],[197,14,181,12,"error"],[197,19,181,17],[198,6,182,4],[198,7,182,5],[198,16,182,14],[199,8,183,6,"setLoading"],[199,18,183,16],[199,19,183,17],[199,24,183,22],[199,25,183,23],[200,6,184,4],[201,4,185,2],[203,4,187,2],[204,0,188,0],[205,0,189,0],[206,0,190,0],[207,0,191,0],[208,4,192,2],[208,10,192,8,"addEmergencyContact"],[208,29,192,27,"addEmergencyContact"],[208,30,192,28,"contact"],[208,37,192,35],[208,39,192,37],[209,6,193,4],[209,12,193,10],[210,8,193,12,"user"],[210,12,193,16],[211,8,193,18,"updateUser"],[212,6,193,29],[212,7,193,30],[212,10,193,33,"useAuthStore"],[212,29,193,45],[212,30,193,46,"getState"],[212,38,193,54],[212,39,193,55],[212,40,193,56],[213,6,195,4],[213,10,195,8],[214,8,196,6],[214,12,196,10],[214,13,196,11,"user"],[214,17,196,15],[214,19,196,17],[215,10,197,8],[215,16,197,14],[215,20,197,18,"Error"],[215,25,197,23],[215,26,197,24],[215,50,197,48],[215,51,197,49],[216,8,198,6],[217,8,200,6],[217,14,200,12,"newContact"],[217,24,200,22],[217,27,200,25],[218,10,201,8,"id"],[218,12,201,10],[218,14,201,12],[218,25,201,23,"Date"],[218,29,201,27],[218,30,201,28,"now"],[218,33,201,31],[218,34,201,32],[218,35,201,33],[218,37,201,35],[219,10,202,8],[219,13,202,11,"contact"],[219,20,202,18],[220,10,203,8,"createdAt"],[220,19,203,17],[220,21,203,19],[220,25,203,23,"Date"],[220,29,203,27],[220,30,203,28],[221,8,204,6],[221,9,204,7],[222,8,206,6],[222,14,206,12,"updatedContacts"],[222,29,206,27],[222,32,206,30],[222,33,206,31],[222,37,206,35,"user"],[222,41,206,39],[222,42,206,40,"emergencyContacts"],[222,59,206,57],[222,63,206,61],[222,65,206,63],[222,66,206,64],[222,68,206,66,"newContact"],[222,78,206,76],[222,79,206,77],[224,8,208,6],[225,8,209,6],[225,14,209,12],[225,18,209,16],[225,19,209,17,"updateUserInDatabase"],[225,39,209,37],[225,40,209,38,"user"],[225,44,209,42],[225,45,209,43,"uid"],[225,48,209,46],[225,50,209,48],[226,10,210,8,"emergencyContacts"],[226,27,210,25],[226,29,210,27,"updatedContacts"],[227,8,211,6],[227,9,211,7],[227,10,211,8],[229,8,213,6],[230,8,214,6,"updateUser"],[230,18,214,16],[230,19,214,17],[231,10,214,19,"emergencyContacts"],[231,27,214,36],[231,29,214,38,"updatedContacts"],[232,8,214,54],[232,9,214,55],[232,10,214,56],[234,8,216,6],[235,8,217,6],[235,14,217,12,"firebase"],[235,30,217,20],[235,31,217,21,"analytics"],[235,40,217,30],[235,41,217,31,"logEvent"],[235,49,217,39],[235,50,217,40],[235,75,217,65],[235,77,217,67],[236,10,218,8,"user_id"],[236,17,218,15],[236,19,218,17,"user"],[236,23,218,21],[236,24,218,22,"uid"],[236,27,218,25],[237,10,219,8,"total_contacts"],[237,24,219,22],[237,26,219,24,"updatedContacts"],[237,41,219,39],[237,42,219,40,"length"],[238,8,220,6],[238,9,220,7],[238,10,220,8],[239,8,222,6],[239,15,222,13,"newContact"],[239,25,222,23],[240,6,223,4],[240,7,223,5],[240,8,223,6],[240,15,223,13,"error"],[240,20,223,18],[240,22,223,20],[241,8,224,6,"console"],[241,15,224,13],[241,16,224,14,"error"],[241,21,224,19],[241,22,224,20],[241,52,224,50],[241,54,224,52,"error"],[241,59,224,57],[241,60,224,58],[242,8,225,6],[242,14,225,12,"error"],[242,19,225,17],[243,6,226,4],[244,4,227,2],[246,4,229,2],[247,0,230,0],[248,0,231,0],[249,0,232,0],[250,4,233,2,"getCurrentUser"],[250,18,233,16,"getCurrentUser"],[250,19,233,16],[250,21,233,19],[251,6,234,4],[251,13,234,11,"firebase"],[251,29,234,19],[251,30,234,20,"auth"],[251,34,234,24],[251,35,234,25,"getCurrentUser"],[251,49,234,39],[251,50,234,40],[251,51,234,41],[252,4,235,2],[254,4,237,2],[255,0,238,0],[256,0,239,0],[257,0,240,0],[258,0,241,0],[259,4,242,2],[259,10,242,8,"saveUserToDatabase"],[259,28,242,26,"saveUserToDatabase"],[259,29,242,27,"user"],[259,33,242,31],[259,35,242,33],[260,6,243,4],[260,10,243,8],[261,8,244,6],[261,14,244,12,"firebase"],[261,30,244,20],[261,31,244,21,"firestore"],[261,40,244,30],[261,41,245,9,"collection"],[261,51,245,19],[261,52,245,20],[261,59,245,27],[261,60,245,28],[261,61,246,9,"doc"],[261,64,246,12],[261,65,246,13,"user"],[261,69,246,17],[261,70,246,18,"uid"],[261,73,246,21],[261,74,246,22],[261,75,247,9,"set"],[261,78,247,12],[261,79,247,13],[262,10,248,10,"uid"],[262,13,248,13],[262,15,248,15,"user"],[262,19,248,19],[262,20,248,20,"uid"],[262,23,248,23],[263,10,249,10,"phoneNumber"],[263,21,249,21],[263,23,249,23,"user"],[263,27,249,27],[263,28,249,28,"phoneNumber"],[263,39,249,39],[264,10,250,10,"displayName"],[264,21,250,21],[264,23,250,23,"user"],[264,27,250,27],[264,28,250,28,"displayName"],[264,39,250,39],[264,43,250,43],[264,45,250,45],[265,10,251,10,"email"],[265,15,251,15],[265,17,251,17,"user"],[265,21,251,21],[265,22,251,22,"email"],[265,27,251,27],[265,31,251,31],[265,35,251,35],[266,10,252,10,"isVerified"],[266,20,252,20],[266,22,252,22,"user"],[266,26,252,26],[266,27,252,27,"isVerified"],[266,37,252,37],[267,10,253,10,"emergencyContacts"],[267,27,253,27],[267,29,253,29,"user"],[267,33,253,33],[267,34,253,34,"emergencyContacts"],[267,51,253,51],[267,55,253,55],[267,57,253,57],[268,10,254,10,"savedAddresses"],[268,24,254,24],[268,26,254,26,"user"],[268,30,254,30],[268,31,254,31,"savedAddresses"],[268,45,254,45],[268,49,254,49],[268,51,254,51],[269,10,255,10,"createdAt"],[269,19,255,19],[269,21,255,21,"user"],[269,25,255,25],[269,26,255,26,"createdAt"],[269,35,255,35],[270,10,256,10,"updatedAt"],[270,19,256,19],[270,21,256,21,"user"],[270,25,256,25],[270,26,256,26,"updatedAt"],[271,8,257,8],[271,9,257,9],[271,10,257,10],[272,6,258,4],[272,7,258,5],[272,8,258,6],[272,15,258,13,"error"],[272,20,258,18],[272,22,258,20],[273,8,259,6,"console"],[273,15,259,13],[273,16,259,14,"error"],[273,21,259,19],[273,22,259,20],[273,56,259,54],[273,58,259,56,"error"],[273,63,259,61],[273,64,259,62],[274,8,260,6],[275,6,261,4],[276,4,262,2],[278,4,264,2],[279,0,265,0],[280,0,266,0],[281,0,267,0],[282,0,268,0],[283,0,269,0],[284,4,270,2],[284,10,270,8,"updateUserInDatabase"],[284,30,270,28,"updateUserInDatabase"],[284,31,270,29,"userId"],[284,37,270,35],[284,39,270,37,"updates"],[284,46,270,44],[284,48,270,46],[285,6,271,4],[285,10,271,8],[286,8,272,6],[286,14,272,12,"firebase"],[286,30,272,20],[286,31,272,21,"firestore"],[286,40,272,30],[286,41,273,9,"collection"],[286,51,273,19],[286,52,273,20],[286,59,273,27],[286,60,273,28],[286,61,274,9,"doc"],[286,64,274,12],[286,65,274,13,"userId"],[286,71,274,19],[286,72,274,20],[286,73,275,9,"update"],[286,79,275,15],[286,80,275,16],[287,10,276,10],[287,13,276,13,"updates"],[287,20,276,20],[288,10,277,10,"updatedAt"],[288,19,277,19],[288,21,277,21],[288,25,277,25,"Date"],[288,29,277,29],[288,30,277,30],[289,8,278,8],[289,9,278,9],[289,10,278,10],[290,6,279,4],[290,7,279,5],[290,8,279,6],[290,15,279,13,"error"],[290,20,279,18],[290,22,279,20],[291,8,280,6,"console"],[291,15,280,13],[291,16,280,14,"error"],[291,21,280,19],[291,22,280,20],[291,58,280,56],[291,60,280,58,"error"],[291,65,280,63],[291,66,280,64],[292,8,281,6],[292,14,281,12,"error"],[292,19,281,17],[293,6,282,4],[294,4,283,2],[296,4,285,2],[297,0,286,0],[298,0,287,0],[299,0,288,0],[300,0,289,0],[301,4,290,2,"isValidPhoneNumber"],[301,22,290,20,"isValidPhoneNumber"],[301,23,290,21,"phoneNumber"],[301,34,290,32],[301,36,290,34],[302,6,291,4],[303,6,292,4],[303,12,292,10,"phoneRegex"],[303,22,292,20],[303,25,292,23],[303,49,292,47],[304,6,293,4],[304,13,293,11,"phoneRegex"],[304,23,293,21],[304,24,293,22,"test"],[304,28,293,26],[304,29,293,27,"phoneNumber"],[304,40,293,38],[304,41,293,39,"replace"],[304,48,293,46],[304,49,293,47],[304,55,293,53],[304,57,293,55],[304,59,293,57],[304,60,293,58],[304,61,293,59],[305,4,294,2],[307,4,296,2],[308,0,297,0],[309,0,298,0],[310,0,299,0],[311,0,300,0],[312,4,301,2,"formatPhoneNumber"],[312,21,301,19,"formatPhoneNumber"],[312,22,301,20,"phoneNumber"],[312,33,301,31],[312,35,301,33],[313,6,302,4],[314,6,303,4],[314,10,303,8,"cleaned"],[314,17,303,15],[314,20,303,18,"phoneNumber"],[314,31,303,29],[314,32,303,30,"replace"],[314,39,303,37],[314,40,303,38],[314,46,303,44],[314,48,303,46],[314,50,303,48],[314,51,303,49],[314,52,303,50,"replace"],[314,59,303,57],[314,60,303,58],[314,70,303,68],[314,72,303,70],[314,74,303,72],[314,75,303,73],[316,6,305,4],[317,6,306,4],[317,10,306,8],[317,11,306,9,"cleaned"],[317,18,306,16],[317,19,306,17,"startsWith"],[317,29,306,27],[317,30,306,28],[317,35,306,33],[317,36,306,34],[317,38,306,36],[318,8,307,6],[318,12,307,10,"cleaned"],[318,19,307,17],[318,20,307,18,"startsWith"],[318,30,307,28],[318,31,307,29],[318,35,307,33],[318,36,307,34],[318,38,307,36],[319,10,308,8,"cleaned"],[319,17,308,15],[319,20,308,18],[319,23,308,21],[319,26,308,24,"cleaned"],[319,33,308,31],[320,8,309,6],[320,9,309,7],[320,15,309,13],[320,19,309,17,"cleaned"],[320,26,309,24],[320,27,309,25,"startsWith"],[320,37,309,35],[320,38,309,36],[320,41,309,39],[320,42,309,40],[320,44,309,42],[321,10,310,8],[322,10,311,8,"cleaned"],[322,17,311,15],[322,20,311,18],[322,25,311,23],[322,28,311,26,"cleaned"],[322,35,311,33],[322,36,311,34,"substring"],[322,45,311,43],[322,46,311,44],[322,47,311,45],[322,48,311,46],[323,8,312,6],[323,9,312,7],[323,15,312,13],[324,10,313,8],[325,10,314,8,"cleaned"],[325,17,314,15],[325,20,314,18],[325,25,314,23],[325,28,314,26,"cleaned"],[325,35,314,33],[326,8,315,6],[327,6,316,4],[328,6,318,4],[328,13,318,11,"cleaned"],[328,20,318,18],[329,4,319,2],[331,4,321,2],[332,0,322,0],[333,0,323,0],[334,0,324,0],[335,0,325,0],[336,4,326,2,"isValidOTP"],[336,14,326,12,"isValidOTP"],[336,15,326,13,"otp"],[336,18,326,16],[336,20,326,18],[337,6,327,4],[338,6,328,4],[338,12,328,10,"otpRegex"],[338,20,328,18],[338,23,328,21],[338,32,328,30],[339,6,329,4],[339,13,329,11,"otpRegex"],[339,21,329,19],[339,22,329,20,"test"],[339,26,329,24],[339,27,329,25,"otp"],[339,30,329,28],[339,31,329,29],[340,4,330,2],[342,4,332,2],[343,0,333,0],[344,0,334,0],[345,0,335,0],[346,0,336,0],[347,4,337,2],[347,10,337,8,"resendOTP"],[347,19,337,17,"resendOTP"],[347,20,337,18,"phoneNumber"],[347,31,337,29],[347,33,337,31],[348,6,338,4],[349,6,339,4],[349,12,339,10,"lastOTPTime"],[349,23,339,21],[349,26,339,24,"localStorage"],[349,38,339,36],[349,39,339,37,"getItem"],[349,46,339,44],[349,47,339,45],[349,60,339,58],[349,61,339,59],[350,6,340,4],[350,12,340,10,"now"],[350,15,340,13],[350,18,340,16,"Date"],[350,22,340,20],[350,23,340,21,"now"],[350,26,340,24],[350,27,340,25],[350,28,340,26],[351,6,342,4],[351,10,342,8,"lastOTPTime"],[351,21,342,19],[351,25,342,23,"now"],[351,28,342,26],[351,31,342,29,"parseInt"],[351,39,342,37],[351,40,342,38,"lastOTPTime"],[351,51,342,49],[351,52,342,50],[351,55,342,53],[351,60,342,58],[351,62,342,60],[352,8,343,6],[352,14,343,12,"remainingTime"],[352,27,343,25],[352,30,343,28,"Math"],[352,34,343,32],[352,35,343,33,"ceil"],[352,39,343,37],[352,40,344,8],[352,41,344,9],[352,46,344,14],[352,50,344,18,"now"],[352,53,344,21],[352,56,344,24,"parseInt"],[352,64,344,32],[352,65,344,33,"lastOTPTime"],[352,76,344,44],[352,77,344,45],[352,78,344,46],[352,82,344,50],[352,86,345,6],[352,87,345,7],[353,8,346,6],[353,14,346,12],[353,18,346,16,"Error"],[353,23,346,21],[353,24,347,8],[353,39,347,23,"remainingTime"],[353,52,347,36],[353,83,348,6],[353,84,348,7],[354,6,349,4],[356,6,351,4],[357,6,352,4,"localStorage"],[357,18,352,16],[357,19,352,17,"setItem"],[357,26,352,24],[357,27,352,25],[357,40,352,38],[357,42,352,40,"now"],[357,45,352,43],[357,46,352,44,"toString"],[357,54,352,52],[357,55,352,53],[357,56,352,54],[357,57,352,55],[359,6,354,4],[360,6,355,4],[360,13,355,11],[360,17,355,15],[360,18,355,16,"sendOTP"],[360,25,355,23],[360,26,355,24,"phoneNumber"],[360,37,355,35],[360,38,355,36],[361,4,356,2],[363,4,358,2],[364,0,359,0],[365,0,360,0],[366,4,361,2,"cleanup"],[366,11,361,9,"cleanup"],[366,12,361,9],[366,14,361,12],[367,6,362,4],[367,10,362,8],[367,14,362,12],[367,15,362,13,"unsubscribeAuth"],[367,30,362,28],[367,32,362,30],[368,8,363,6],[368,12,363,10],[368,13,363,11,"unsubscribeAuth"],[368,28,363,26],[368,29,363,27],[368,30,363,28],[369,8,364,6],[369,12,364,10],[369,13,364,11,"unsubscribeAuth"],[369,28,364,26],[369,31,364,29],[369,35,364,33],[370,6,365,4],[371,4,366,2],[372,2,367,0],[374,2,369,0],[375,2,370,7],[375,8,370,13,"authService"],[375,19,370,24],[375,22,370,24,"exports"],[375,29,370,24],[375,30,370,24,"authService"],[375,41,370,24],[375,44,370,27],[375,48,370,31,"AuthService"],[375,59,370,42],[375,60,370,43],[375,61,370,44],[376,2,370,45],[376,6,370,45,"_default"],[376,14,370,45],[376,17,370,45,"exports"],[376,24,370,45],[376,25,370,45,"default"],[376,32,370,45],[376,35,372,15,"authService"],[376,46,372,26],[377,0,372,26],[377,3]],"functionMap":{"names":["<global>","AuthService","AuthService#constructor","AuthService#init","firebase.auth.onAuthStateChanged$argument_0","AuthService#sendOTP","AuthService#verifyOTP","AuthService#signOut","AuthService#updateProfile","AuthService#addEmergencyContact","AuthService#getCurrentUser","AuthService#saveUserToDatabase","AuthService#updateUserInDatabase","AuthService#isValidPhoneNumber","AuthService#formatPhoneNumber","AuthService#isValidOTP","AuthService#resendOTP","AuthService#cleanup"],"mappings":"AAA;ACU;ECC;GDG;EEK;4DCE;KDI;GFC;EIO;GJoC;EKQ;GL0C;EMM;GNsB;EOO;GP8B;EQO;GRmC;ESM;GTE;EUO;GVoB;EWQ;GXa;EYO;GZI;EaO;GbkB;EcO;GdI;EeO;GfmB;EgBK;GhBK;CDC"}},"type":"js/module"}]}